[
  {
    "message": "*   Add `key:` and `expires_in:` options under `cached:` to `render` when used with `collection:`\n\n    *Jarrett Lusso*",
    "project": "actionview",
    "date_merged": 1760538522000,
    "author": "Jarrett Lusso",
    "sha": "e60b82402439f4b0d8a9b9b0a7a0178239ba5de1",
    "pr": "51579",
    "merge_sha": "b560ff43134402b74cd811459a3b2a6e5abdce8b",
    "html": "<p>Add <code>key:</code> and <code>expires_in:</code> options under <code>cached:</code> to <code>render</code> when used with <code>collection:</code></p>\n\n<p><em>Jarrett Lusso</em></p>\n"
  },
  {
    "message": "*   Define `ActionController::Parameters#deconstruct_keys` to support pattern matching\n\n    ```ruby\n    if params in { search:, page: }\n      Article.search(search).limit(page)\n    else\n      …\n    end\n\n    case (value = params[:string_or_hash_with_nested_key])\n    in String\n      # do something with a String `value`…\n    in { nested_key: }\n      # do something with `nested_key` or `value`\n    else\n      # …\n    end\n    ```\n\n    *Sean Doyle*",
    "project": "actionpack",
    "date_merged": 1760713024000,
    "author": "Sean Doyle",
    "sha": "89081b34e372afaff004d0288b7e8e94e136b4df",
    "pr": "55789",
    "merge_sha": "7c05e442d5dc24cc8692836d0412d7366a2d226f",
    "html": "<p>Define <code>ActionController::Parameters#deconstruct_keys</code> to support pattern matching</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">if</span> <span class=\"n\">params</span> <span class=\"k\">in</span> <span class=\"p\">{</span> <span class=\"n\">search</span><span class=\"p\">:,</span> <span class=\"ss\">page: </span><span class=\"p\">}</span>\n  <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"n\">search</span><span class=\"p\">).</span><span class=\"nf\">limit</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"p\">)</span>\n<span class=\"k\">else</span>\n  <span class=\"err\">…</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">case</span> <span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"ss\">:string_or_hash_with_nested_key</span><span class=\"p\">])</span>\n<span class=\"k\">in</span> <span class=\"no\">String</span>\n  <span class=\"c1\"># do something with a String `value`…</span>\n<span class=\"k\">in</span> <span class=\"p\">{</span> <span class=\"ss\">nested_key: </span><span class=\"p\">}</span>\n  <span class=\"c1\"># do something with `nested_key` or `value`</span>\n<span class=\"k\">else</span>\n  <span class=\"c1\"># …</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Submit test requests using `as: :html` with `Content-Type: x-www-form-urlencoded`\n\n    *Sean Doyle*",
    "project": "actionpack",
    "date_merged": 1760626310000,
    "author": "Sean Doyle",
    "sha": "eac1f55425de30c614cb1410c19e13921bfeb164",
    "pr": "50390",
    "merge_sha": "c941680274902f2778840344344e552c5160c65b",
    "html": "<p>Submit test requests using <code>as: :html</code> with <code>Content-Type: x-www-form-urlencoded</code></p>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Add a detailed failure summary to `ActiveSupport::ContinuousIntegration`.\n\n    *Mike Dalessio*",
    "project": "activesupport",
    "date_merged": 1761863062000,
    "author": "Mike Dalessio",
    "sha": "9fa56dd0d22abaa6ec030bd6fe22978c8ba43565",
    "pr": "56049",
    "merge_sha": "2a4596b6ab75988109e363bc739c4a8f7b36b1ab",
    "html": "<p>Add a detailed failure summary to <code>ActiveSupport::ContinuousIntegration</code>.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Introduce `ActiveSupport::EventReporter::LogSubscriber` structured event logging.\n\n    ```ruby\n    class MyLogSubscriber < ActiveSupport::EventReporter::LogSubscriber\n      self.namespace = \"test\"\n\n      def something(event)\n        info { \"Event #{event[:name]} emitted.\" }\n      end\n    end\n    ```\n\n    *Gannon McGibbon*",
    "project": "activesupport",
    "date_merged": 1761235631000,
    "author": "Gannon McGibbon",
    "sha": "aebcb6152035fc989687efd96f11dbd548f95c1a",
    "pr": "55900",
    "merge_sha": "54264bde59c6e327694ad8b3923d4ebda60bd562",
    "html": "<p>Introduce <code>ActiveSupport::EventReporter::LogSubscriber</code> structured event logging.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">MyLogSubscriber</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">EventReporter</span><span class=\"o\">::</span><span class=\"no\">LogSubscriber</span>\n  <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">namespace</span> <span class=\"o\">=</span> <span class=\"s2\">\"test\"</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">something</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n    <span class=\"n\">info</span> <span class=\"p\">{</span> <span class=\"s2\">\"Event </span><span class=\"si\">#{</span><span class=\"n\">event</span><span class=\"p\">[</span><span class=\"ss\">:name</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\"> emitted.\"</span> <span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Gannon McGibbon</em></p>\n"
  },
  {
    "message": "*   Database-specific shard swap prohibition\n\n    In #43485 (v7.0.0), shard swapping prohibition was introduced as a global\n    switch that applied to all databases.\n\n    For the use case of a multi-database application, the global prohibition is\n    overly broad, and so with this change the method `prohibit_shard_swapping`\n    will scope the prohibition to the same connection class (i.e.,\n    `connection_specification_name`). This allows an application to prohibit\n    shard swapping on a specific database while allowing it on all others.\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1761863335000,
    "author": "Mike Dalessio",
    "sha": "12151847718ffe1252a87c173b06fbea3a4aff97",
    "pr": "55927",
    "merge_sha": "ab4b78cbea38e826c39ea6be8b2e58f75742fad1",
    "html": "<p>Database-specific shard swap prohibition</p>\n\n<p>In #43485 (v7.0.0), shard swapping prohibition was introduced as a global<br />\nswitch that applied to all databases.</p>\n\n<p>For the use case of a multi-database application, the global prohibition is<br />\noverly broad, and so with this change the method <code>prohibit_shard_swapping</code><br />\nwill scope the prohibition to the same connection class (i.e.,<br />\n<code>connection_specification_name</code>). This allows an application to prohibit<br />\nshard swapping on a specific database while allowing it on all others.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Fix upsert_all when using repeated timestamp attributes.\n\n    *Gannon McGibbon*",
    "project": "activerecord",
    "date_merged": 1761093810000,
    "author": "Gannon McGibbon",
    "sha": "b2af211679b1f38da99245189afd5e57eb3144ff",
    "pr": "55960",
    "merge_sha": "88abbd35e5958d26108f2894b56ffa1fa01e4dc2",
    "html": "<p>Fix upsert_all when using repeated timestamp attributes.</p>\n\n<p><em>Gannon McGibbon</em></p>\n"
  },
  {
    "message": "*   PostgreSQL enable drop database FORCE option.\n\n    One of the benefits of developing with MySQL is that it allows dropping the\n    current database without first disconnecting clients. As a result developers\n    can use `bin/rails db:reset` and similar, without first shutting down\n    instances of the app, Rails consoles, background workers, etc. By default\n    PostgreSQL fails to drop a database when clients are connected and displays\n    the following error:\n\n      > PG::ObjectInUse: ERROR:  database \"xyz\" is being accessed by other users (PG::ObjectInUse)\n\n    This is frustrating when working in development where the database may be\n    dropped frequently.\n\n    PostgreSQL 13 added the `FORCE` option to the `DROP DATABASE` statement\n    ([PostgreSQL docs](https://www.postgresql.org/docs/current/sql-dropdatabase.html))\n    which automatically disconnects clients before dropping the database.\n    This option is automatically enabled for supported PostgreSQL versions.\n\n    *Steven Webb*",
    "project": "activerecord",
    "date_merged": 1761060234000,
    "author": "Steven Webb",
    "sha": "3e19d69fe1462a9eec3352b29bbfc9ba84f52837",
    "pr": "55941",
    "merge_sha": "ab352ef32e679246835034e4f4bbde03b463b049",
    "html": "<p>PostgreSQL enable drop database FORCE option.</p>\n\n<p>One of the benefits of developing with MySQL is that it allows dropping the<br />\ncurrent database without first disconnecting clients. As a result developers<br />\ncan use <code>bin/rails db:reset</code> and similar, without first shutting down<br />\ninstances of the app, Rails consoles, background workers, etc. By default<br />\nPostgreSQL fails to drop a database when clients are connected and displays<br />\nthe following error:</p>\n\n<blockquote>\n  <p>PG::ObjectInUse: ERROR:  database “xyz” is being accessed by other users (PG::ObjectInUse)</p>\n</blockquote>\n\n<p>This is frustrating when working in development where the database may be<br />\ndropped frequently.</p>\n\n<p>PostgreSQL 13 added the <code>FORCE</code> option to the <code>DROP DATABASE</code> statement<br />\n(<a href=\"https://www.postgresql.org/docs/current/sql-dropdatabase.html\">PostgreSQL docs</a>)<br />\nwhich automatically disconnects clients before dropping the database.<br />\nThis option is automatically enabled for supported PostgreSQL versions.</p>\n\n<p><em>Steven Webb</em></p>\n"
  },
  {
    "message": "*   Raise specific exception when a prohibited shard change is attempted.\n\n    The new `ShardSwapProhibitedError` exception allows applications and\n    connection-related libraries to more easily recover from this specific\n    scenario. Previously an `ArgumentError` was raised, so the new exception\n    subclasses `ArgumentError` for backwards compatibility.\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1760855316000,
    "author": "Mike Dalessio",
    "sha": "d803405d01dbbbed349d9c69f893ed1482239fe0",
    "pr": "55933",
    "merge_sha": "44b6847ead440f8ab5b17e3a0036fb4e75c6e2d4",
    "html": "<p>Raise specific exception when a prohibited shard change is attempted.</p>\n\n<p>The new <code>ShardSwapProhibitedError</code> exception allows applications and<br />\nconnection-related libraries to more easily recover from this specific<br />\nscenario. Previously an <code>ArgumentError</code> was raised, so the new exception<br />\nsubclasses <code>ArgumentError</code> for backwards compatibility.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Fix SQLite3 data loss during table alterations with CASCADE foreign keys.\n\n    When altering a table in SQLite3 that is referenced by child tables with\n    `ON DELETE CASCADE` foreign keys, ActiveRecord would silently delete all\n    data from the child tables. This occurred because SQLite requires table\n    recreation for schema changes, and during this process the original table\n    is temporarily dropped, triggering CASCADE deletes on child tables.\n\n    The root cause was incorrect ordering of operations. The original code\n    wrapped `disable_referential_integrity` inside a transaction, but\n    `PRAGMA foreign_keys` cannot be modified inside a transaction in SQLite -\n    attempting to do so simply has no effect. This meant foreign keys remained\n    enabled during table recreation, causing CASCADE deletes to fire.\n\n    The fix reverses the order to follow the official SQLite 12-step ALTER TABLE\n    procedure: `disable_referential_integrity` now wraps the transaction instead\n    of being wrapped by it. This ensures foreign keys are properly disabled\n    before the transaction starts and re-enabled after it commits, preventing\n    CASCADE deletes while maintaining data integrity through atomic transactions.\n\n    *Ruy Rocha*",
    "project": "activerecord",
    "date_merged": 1760684387000,
    "author": "Ruy Rocha",
    "sha": "ffd25a56c5e9b05ff9e572cdc98f141d00b795bd",
    "pr": "55866",
    "merge_sha": "906d83429f73c9546a70522d966008be9676c30a",
    "html": "<p>Fix SQLite3 data loss during table alterations with CASCADE foreign keys.</p>\n\n<p>When altering a table in SQLite3 that is referenced by child tables with<br />\n<code>ON DELETE CASCADE</code> foreign keys, ActiveRecord would silently delete all<br />\ndata from the child tables. This occurred because SQLite requires table<br />\nrecreation for schema changes, and during this process the original table<br />\nis temporarily dropped, triggering CASCADE deletes on child tables.</p>\n\n<p>The root cause was incorrect ordering of operations. The original code<br />\nwrapped <code>disable_referential_integrity</code> inside a transaction, but<br />\n<code>PRAGMA foreign_keys</code> cannot be modified inside a transaction in SQLite -<br />\nattempting to do so simply has no effect. This meant foreign keys remained<br />\nenabled during table recreation, causing CASCADE deletes to fire.</p>\n\n<p>The fix reverses the order to follow the official SQLite 12-step ALTER TABLE<br />\nprocedure: <code>disable_referential_integrity</code> now wraps the transaction instead<br />\nof being wrapped by it. This ensures foreign keys are properly disabled<br />\nbefore the transaction starts and re-enabled after it commits, preventing<br />\nCASCADE deletes while maintaining data integrity through atomic transactions.</p>\n\n<p><em>Ruy Rocha</em></p>\n"
  },
  {
    "message": "*   Fix negative scopes for enums to include records with `nil` values.\n\n    *fatkodima*",
    "project": "activerecord",
    "date_merged": 1760548122000,
    "author": "fatkodima",
    "sha": "d81fbf33bc9c478fca57252255cbd0013fe137b6",
    "pr": "55912",
    "merge_sha": "177186ab1c6361e9d95e7fc7751d569563c7f547",
    "html": "<p>Fix negative scopes for enums to include records with <code>nil</code> values.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   Improve support for SQLite database URIs.\n\n    The `db:create` and `db:drop` tasks now correctly handle SQLite database URIs, and the\n    SQLite3Adapter will create the parent directory if it does not exist.\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1760539324000,
    "author": "Mike Dalessio",
    "sha": "f1f60dc12779f4237a5cbb4ba28428952813ba86",
    "pr": "55896",
    "merge_sha": "384420e95c537a8c7b28a0c301118bd0abd66d09",
    "html": "<p>Improve support for SQLite database URIs.</p>\n\n<p>The <code>db:create</code> and <code>db:drop</code> tasks now correctly handle SQLite database URIs, and the<br />\nSQLite3Adapter will create the parent directory if it does not exist.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   `ActiveStorage::Blob#open` can now be used without passing a block, like `Tempfile.open`. When using this form the\n    returned temporary file must be unlinked manually.\n\n    *Bart de Water*",
    "project": "activestorage",
    "date_merged": 1760633630000,
    "author": "Bart de Water",
    "sha": "89ea0311033f362d8ddf85629bf34e78eba501f4",
    "pr": "49990",
    "merge_sha": "5ce53dbbd9aa7f08e25e96b8911d05e9f282c28d",
    "html": "<p><code>ActiveStorage::Blob#open</code> can now be used without passing a block, like <code>Tempfile.open</code>. When using this form the<br />\nreturned temporary file must be unlinked manually.</p>\n\n<p><em>Bart de Water</em></p>\n"
  },
  {
    "message": "*   `has_secure_password` can support different password hashing algorithms (if defined) using the `:algorithm` option:\n\n    ```ruby\n    class CustomPassword\n      def hash_password(unencrypted_password)\n        CustomHashingLibrary.create(unencrypted_password)\n      end\n\n      def verify_password(password, digest)\n        CustomHashingLibrary.verify(password, digest)\n      end\n\n      def password_salt(digest)\n        CustomHashingLibrary.salt(digest)\n      end\n\n      def validate(record, attribute)\n        # ...\n      end\n\n      def algorithm_name\n        :custom\n      end\n    end\n    ```\n\n    ```ruby\n    class User < ActiveRecord::Base\n      has_secure_password algorithm: CustomPassword.new\n    end\n    ```\n\n    *Justin Bull, Lucas Mazza*",
    "project": "activemodel",
    "date_merged": 1761885538000,
    "author": "Lucas Mazza",
    "sha": "a18d2466008891870f6f1957ecec14bee4689bd7",
    "pr": "56041",
    "merge_sha": "cddcba97c369e12e2573af5af9eda16e6f530a29",
    "html": "<p><code>has_secure_password</code> can support different password hashing algorithms (if defined) using the <code>:algorithm</code> option:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">CustomPassword</span>\n  <span class=\"k\">def</span> <span class=\"nf\">hash_password</span><span class=\"p\">(</span><span class=\"n\">unencrypted_password</span><span class=\"p\">)</span>\n    <span class=\"no\">CustomHashingLibrary</span><span class=\"p\">.</span><span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"n\">unencrypted_password</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">verify_password</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">digest</span><span class=\"p\">)</span>\n    <span class=\"no\">CustomHashingLibrary</span><span class=\"p\">.</span><span class=\"nf\">verify</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">digest</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">password_salt</span><span class=\"p\">(</span><span class=\"n\">digest</span><span class=\"p\">)</span>\n    <span class=\"no\">CustomHashingLibrary</span><span class=\"p\">.</span><span class=\"nf\">salt</span><span class=\"p\">(</span><span class=\"n\">digest</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">,</span> <span class=\"n\">attribute</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">algorithm_name</span>\n    <span class=\"ss\">:custom</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">User</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">has_secure_password</span> <span class=\"ss\">algorithm: </span><span class=\"no\">CustomPassword</span><span class=\"p\">.</span><span class=\"nf\">new</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Justin Bull, Lucas Mazza</em></p>\n"
  },
  {
    "message": "*   Allow passing method name or proc to `allow_nil` and `allow_blank`\n\n    ```ruby\n    class EnrollmentForm\n      include ActiveModel::Validations\n\n      attr_accessor :course\n\n      validates :course,\n                inclusion: { in: :open_courses },\n                allow_nil: :saving_progress?\n    end\n    ```\n\n    *Richard Lynch*",
    "project": "activemodel",
    "date_merged": 1761578910000,
    "author": "Richard Lynch",
    "sha": "382d866b4ace4dfb4b24b631de4054ab7b1ba007",
    "pr": "55309",
    "merge_sha": "c5e237c5f0f7c79e3049b052db1fc443aece5692",
    "html": "<p>Allow passing method name or proc to <code>allow_nil</code> and <code>allow_blank</code></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">EnrollmentForm</span>\n  <span class=\"kp\">include</span> <span class=\"no\">ActiveModel</span><span class=\"o\">::</span><span class=\"no\">Validations</span>\n\n  <span class=\"nb\">attr_accessor</span> <span class=\"ss\">:course</span>\n\n  <span class=\"n\">validates</span> <span class=\"ss\">:course</span><span class=\"p\">,</span>\n            <span class=\"ss\">inclusion: </span><span class=\"p\">{</span> <span class=\"ss\">in: :open_courses</span> <span class=\"p\">},</span>\n            <span class=\"ss\">allow_nil: :saving_progress?</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Richard Lynch</em></p>\n"
  },
  {
    "message": "*   Add error type support arguments to `ActiveModel::Errors#messages_for` and `ActiveModel::Errors#full_messages_for`\n\n    ```ruby\n    person = Person.create()\n    person.errors.full_messages_for(:name, :invalid)\n    # => [\"Name is invalid\"]\n\n    person.errors.messages_for(:name, :invalid)\n    # => [\"is invalid\"]\n    ```\n\n    *Eugene Bezludny*",
    "project": "activemodel",
    "date_merged": 1760634701000,
    "author": "Eugene",
    "sha": "6ff7803661ac7ef18416ba1c4bc72861c009b420",
    "pr": "53096",
    "merge_sha": "b8c36437be134d99779306396ff910603ecf6982",
    "html": "<p>Add error type support arguments to <code>ActiveModel::Errors#messages_for</code> and <code>ActiveModel::Errors#full_messages_for</code></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"no\">Person</span><span class=\"p\">.</span><span class=\"nf\">create</span><span class=\"p\">()</span>\n<span class=\"n\">person</span><span class=\"p\">.</span><span class=\"nf\">errors</span><span class=\"p\">.</span><span class=\"nf\">full_messages_for</span><span class=\"p\">(</span><span class=\"ss\">:name</span><span class=\"p\">,</span> <span class=\"ss\">:invalid</span><span class=\"p\">)</span>\n<span class=\"c1\"># =&gt; [\"Name is invalid\"]</span>\n\n<span class=\"n\">person</span><span class=\"p\">.</span><span class=\"nf\">errors</span><span class=\"p\">.</span><span class=\"nf\">messages_for</span><span class=\"p\">(</span><span class=\"ss\">:name</span><span class=\"p\">,</span> <span class=\"ss\">:invalid</span><span class=\"p\">)</span>\n<span class=\"c1\"># =&gt; [\"is invalid\"]</span>\n</code></pre></div></div>\n\n<p><em>Eugene Bezludny</em></p>\n"
  },
  {
    "message": "*   Make `ActiveModel::Serializers::JSON#from_json` compatible with `#assign_attributes`\n\n    *Sean Doyle*",
    "project": "activemodel",
    "date_merged": 1761037784000,
    "author": "Ryuta Kamizono",
    "sha": "729e7169301cb35eb287a9724d6244edb3b2840d",
    "pr": "51781",
    "merge_sha": "4b7bf2617d190b7769393e975a2449f8cde12145",
    "html": "<p>Make <code>ActiveModel::Serializers::JSON#from_json</code> compatible with <code>#assign_attributes</code></p>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Add `assert_part` and `assert_no_part` to `ActionMailer::TestCase`\n\n    ```ruby\n    test \"assert MyMailer.welcome HTML and text parts\" do\n      mail = MyMailer.welcome(\"Hello, world\")\n\n      assert_part :text, mail do |text|\n        assert_includes text, \"Hello, world\"\n      end\n      assert_part :html, mail do |html|\n        assert_dom html.root, \"p\", \"Hello, world\"\n      end\n    end\n    ```\n\n    *Sean Doyle*",
    "project": "actionmailer",
    "date_merged": 1760564922000,
    "author": "Sean Doyle",
    "sha": "8ee4ae23c9dbbe4f497b2d6332808194510b3a96",
    "pr": "55348",
    "merge_sha": "4ffa4290700ceefd03400a0411fb2f3229189d7b",
    "html": "<p>Add <code>assert_part</code> and <code>assert_no_part</code> to <code>ActionMailer::TestCase</code></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">test</span> <span class=\"s2\">\"assert MyMailer.welcome HTML and text parts\"</span> <span class=\"k\">do</span>\n  <span class=\"n\">mail</span> <span class=\"o\">=</span> <span class=\"no\">MyMailer</span><span class=\"p\">.</span><span class=\"nf\">welcome</span><span class=\"p\">(</span><span class=\"s2\">\"Hello, world\"</span><span class=\"p\">)</span>\n\n  <span class=\"n\">assert_part</span> <span class=\"ss\">:text</span><span class=\"p\">,</span> <span class=\"n\">mail</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">text</span><span class=\"o\">|</span>\n    <span class=\"n\">assert_includes</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"s2\">\"Hello, world\"</span>\n  <span class=\"k\">end</span>\n  <span class=\"n\">assert_part</span> <span class=\"ss\">:html</span><span class=\"p\">,</span> <span class=\"n\">mail</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">html</span><span class=\"o\">|</span>\n    <span class=\"n\">assert_dom</span> <span class=\"n\">html</span><span class=\"p\">.</span><span class=\"nf\">root</span><span class=\"p\">,</span> <span class=\"s2\">\"p\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Hello, world\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Do not assume and force SSL in production by default when using Kamal, to allow for out of the box Kamal deployments.\n\n    It is still recommended to assume and force SSL in production as soon as you can.\n\n    *Jerome Dalbert*",
    "project": "railties",
    "date_merged": 1761522877000,
    "author": "Jerome Dalbert",
    "sha": "a445c5bf71264033c1727d1a111c622919129b79",
    "pr": "56010",
    "merge_sha": "a262ba0c2012cd4c6b53f6c3dd3d46d110797406",
    "html": "<p>Do not assume and force SSL in production by default when using Kamal, to allow for out of the box Kamal deployments.</p>\n\n<p>It is still recommended to assume and force SSL in production as soon as you can.</p>\n\n<p><em>Jerome Dalbert</em></p>\n"
  },
  {
    "message": "*   Add environment config file existence check\n\n    `Rails::Application` will raise an error if unable to load any environment file.\n\n    *Daniel Niknam*",
    "project": "railties",
    "date_merged": 1760681596000,
    "author": "Daniel",
    "sha": "5cffb7cf7ef2f653d7e1b83fc944730b37a019ba",
    "pr": "55813",
    "merge_sha": "a03a5281c17722c2825b68a16268258f59ca862f",
    "html": "<p>Add environment config file existence check</p>\n\n<p><code>Rails::Application</code> will raise an error if unable to load any environment file.</p>\n\n<p><em>Daniel Niknam</em></p>\n"
  },
  {
    "message": "*   `Rails::Application::RoutesReloader` uses the configured `Rails.application.config.file_watcher`\n\n    *Jan Grodowski*",
    "project": "railties",
    "date_merged": 1760577092000,
    "author": "Jan Grodowski",
    "sha": "d77afd2321f9b3604d52b7ad1c10750af3306329",
    "pr": "55708",
    "merge_sha": "c1c824ebca5c8efe65d902efe6ff83d45da33cf0",
    "html": "<p><code>Rails::Application::RoutesReloader</code> uses the configured <code>Rails.application.config.file_watcher</code></p>\n\n<p><em>Jan Grodowski</em></p>\n"
  },
  {
    "message": "*   Add structured event for Rails deprecations, when `config.active_support.deprecation` is set to `:notify`.\n\n    *zzak*",
    "project": "railties",
    "date_merged": 1760570830000,
    "author": "zzak",
    "sha": "7e8fa100fae0b952e5792592d55c0e8dad77899c",
    "pr": "55838",
    "merge_sha": "e8bcceb0200ba84b1c3d0121633329129e3bfe79",
    "html": "<p>Add structured event for Rails deprecations, when <code>config.active_support.deprecation</code> is set to <code>:notify</code>.</p>\n\n<p><em>zzak</em></p>\n"
  },
  {
    "message": "*   Report unhandled exceptions to the Error Reporter when running rake tasks via Rails command.\n\n    *Akimichi Tanei*",
    "project": "railties",
    "date_merged": 1760546378000,
    "author": "kakudooo",
    "sha": "b379af17488a1d75d4218317c839e6b653ab3d05",
    "pr": "55913",
    "merge_sha": "481b02ffcc995fbc0792d5d04871fefa953f12ba",
    "html": "<p>Report unhandled exceptions to the Error Reporter when running rake tasks via Rails command.</p>\n\n<p><em>Akimichi Tanei</em></p>\n"
  },
  {
    "message": "*   Show help hint when starting `bin/rails console`\n\n    *Petrik de Heus*",
    "project": "railties",
    "date_merged": 1760537290000,
    "author": "Petrik",
    "sha": "e0ae228272f36cedca8ecff18f6cf6d0e58e5691",
    "pr": "55910",
    "merge_sha": "039cb87b806141677ddc85b697d7860d74a9e022",
    "html": "<p>Show help hint when starting <code>bin/rails console</code></p>\n\n<p><em>Petrik de Heus</em></p>\n"
  },
  {
    "message": "*   Persist `/rails/info/routes` search query and results between page reloads.\n\n    *Ryan Kulp*",
    "project": "railties",
    "date_merged": 1760505109000,
    "author": "Ryan Kulp",
    "sha": "9ca59b0c9468466ad3a4e5472a63f4e99add23a6",
    "pr": "55903",
    "merge_sha": "87ecc56aed72c9fe57b79b2a83c8f94656bf4878",
    "html": "<p>Persist <code>/rails/info/routes</code> search query and results between page reloads.</p>\n\n<p><em>Ryan Kulp</em></p>\n"
  },
  {
    "message": "*   Add `--update` option to the `bin/bundler-audit` script.\n\n    *Julien ANNE*",
    "project": "railties",
    "date_merged": 1760546378000,
    "author": "Julien ANNE",
    "sha": "a7d6dc30b69a0144acb2eef8e9cd5dae56d8a628",
    "pr": "55913",
    "merge_sha": "481b02ffcc995fbc0792d5d04871fefa953f12ba",
    "html": "<p>Add <code>--update</code> option to the <code>bin/bundler-audit</code> script.</p>\n\n<p><em>Julien ANNE</em></p>\n"
  }
]