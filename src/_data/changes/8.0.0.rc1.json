[
  {
    "message": "*   Accept a block for `ActiveJob::ConfiguredJob#perform_later`.\n\n    This was inconsistent with a regular `ActiveJob::Base#perform_later`.\n\n    *fatkodima*",
    "project": "activejob",
    "date_merged": 1733489505000,
    "author": "fatkodima",
    "sha": "f70cca178f35f703245de62c74d078f54fd17572",
    "pr": "53859",
    "merge_sha": "31aec233a17a44cb4666aa074243f0961798ed46",
    "html": "<p>Accept a block for <code>ActiveJob::ConfiguredJob#perform_later</code>.</p>\n\n<p>This was inconsistent with a regular <code>ActiveJob::Base#perform_later</code>.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   Raise a more specific error during deserialization when a previously serialized job class is now unknown.\n\n    `ActiveJob::UnknownJobClassError` will be raised instead of a more generic\n    `NameError` to make it easily possible for adapters to tell if the `NameError`\n    was raised during job execution or deserialization.\n\n    *Earlopain*",
    "project": "activejob",
    "date_merged": 1732822493000,
    "author": "Earlopain",
    "sha": "5a04667a89b41da272214e53c0111e7d5b2d3219",
    "pr": "53770",
    "merge_sha": "e15be8c98e39a96d33be9331f9649bade402f9bf",
    "html": "<p>Raise a more specific error during deserialization when a previously serialized job class is now unknown.</p>\n\n<p><code>ActiveJob::UnknownJobClassError</code> will be raised instead of a more generic<br />\n<code>NameError</code> to make it easily possible for adapters to tell if the <code>NameError</code><br />\nwas raised during job execution or deserialization.</p>\n\n<p><em>Earlopain</em></p>\n"
  },
  {
    "message": "*   Change `ActionText::RichText#embeds` assignment from `before_save` to `before_validation`\n\n    *Sean Doyle*",
    "project": "actiontext",
    "date_merged": 1733784985000,
    "author": "Sean Doyle",
    "sha": "0eb9fa47168db84e79f5a200af470acca3ba8c31",
    "pr": "53847",
    "merge_sha": "0efc3e899a0cade4e1b7c626d1df043dadf2d2a2",
    "html": "<p>Change <code>ActionText::RichText#embeds</code> assignment from <code>before_save</code> to <code>before_validation</code></p>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Improve error highlighting of multi-line methods in ERB templates or\n    templates where the error occurs within a do-end block.\n\n    *Martin Emde*",
    "project": "actionview",
    "date_merged": 1732819839000,
    "author": "Martin Emde",
    "sha": "a74d26378b665bf1a1a6c125f878000251102dbb",
    "pr": "53763",
    "merge_sha": "a87bbdf3a716ef7987d0738afd8426ffa6dae2ec",
    "html": "<p>Improve error highlighting of multi-line methods in ERB templates or<br />\ntemplates where the error occurs within a do-end block.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Fix a crash in ERB template error highlighting when the error occurs on a\n    line in the compiled template that is past the end of the source template.\n\n    *Martin Emde*",
    "project": "actionview",
    "date_merged": 1732254580000,
    "author": "Martin Emde",
    "sha": "5857b8f83ca51a38151bb107a03684320505421d",
    "pr": "53696",
    "merge_sha": "8cab71cd0441043ba1c3c201ef8b8282d6f13b63",
    "html": "<p>Fix a crash in ERB template error highlighting when the error occurs on a<br />\nline in the compiled template that is past the end of the source template.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Improve reliability of ERB template error highlighting.\n    Fix infinite loops and crashes in highlighting and\n    improve tolerance for alternate ERB handlers.\n\n    *Martin Emde*",
    "project": "actionview",
    "date_merged": 1732218987000,
    "author": "Martin Emde",
    "sha": "aaebc8635123537f60db62763e6d80489098060d",
    "pr": "53657",
    "merge_sha": "9add4d9786266cbebcc44c07963ceb589de9ce79",
    "html": "<p>Improve reliability of ERB template error highlighting.<br />\nFix infinite loops and crashes in highlighting and<br />\nimprove tolerance for alternate ERB handlers.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Allow `hidden_field` and `hidden_field_tag` to accept a custom autocomplete value.\n\n    *brendon*",
    "project": "actionview",
    "date_merged": 1731670127000,
    "author": "Brendon Muir",
    "sha": "09daec64ac5189799718d8805311ac1458021910",
    "pr": "53512",
    "merge_sha": "e5ad9e789966a2743da8f81b6ed5e80f2575a8d1",
    "html": "<p>Allow <code>hidden_field</code> and <code>hidden_field_tag</code> to accept a custom autocomplete value.</p>\n\n<p><em>brendon</em></p>\n"
  },
  {
    "message": "*   Backport `ActiveRecord::Normalization` to `ActiveModel::Attributes::Normalization`\n\n    ```ruby\n    class User\n      include ActiveModel::Attributes\n      include ActiveModel::Attributes::Normalization\n\n      attribute :email, :string\n\n      normalizes :email, with: -> email { email.strip.downcase }\n    end\n\n    user = User.new\n    user.email =    \" CRUISE-CONTROL@EXAMPLE.COM\\n\"\n    user.email # => \"cruise-control@example.com\"\n    ```\n\n    *Sean Doyle*",
    "project": "activemodel",
    "date_merged": 1734026988000,
    "author": "Sean Doyle",
    "sha": "b0356267cfcf2aa547cae85b7d8b3b99581a445c",
    "pr": "53887",
    "merge_sha": "d48a3565ab9a4d3eca4d2d8fbf1594c13708a8ad",
    "html": "<p>Backport <code>ActiveRecord::Normalization</code> to <code>ActiveModel::Attributes::Normalization</code></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">User</span>\n  <span class=\"kp\">include</span> <span class=\"no\">ActiveModel</span><span class=\"o\">::</span><span class=\"no\">Attributes</span>\n  <span class=\"kp\">include</span> <span class=\"no\">ActiveModel</span><span class=\"o\">::</span><span class=\"no\">Attributes</span><span class=\"o\">::</span><span class=\"no\">Normalization</span>\n\n  <span class=\"n\">attribute</span> <span class=\"ss\">:email</span><span class=\"p\">,</span> <span class=\"ss\">:string</span>\n\n  <span class=\"n\">normalizes</span> <span class=\"ss\">:email</span><span class=\"p\">,</span> <span class=\"ss\">with: </span><span class=\"o\">-&gt;</span> <span class=\"n\">email</span> <span class=\"p\">{</span> <span class=\"n\">email</span><span class=\"p\">.</span><span class=\"nf\">strip</span><span class=\"p\">.</span><span class=\"nf\">downcase</span> <span class=\"p\">}</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"no\">User</span><span class=\"p\">.</span><span class=\"nf\">new</span>\n<span class=\"n\">user</span><span class=\"p\">.</span><span class=\"nf\">email</span> <span class=\"o\">=</span>    <span class=\"s2\">\" CRUISE-CONTROL@EXAMPLE.COM</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n<span class=\"n\">user</span><span class=\"p\">.</span><span class=\"nf\">email</span> <span class=\"c1\"># =&gt; \"cruise-control@example.com\"</span>\n</code></pre></div></div>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Serialized attributes can now be marked as comparable.\n\n    A not rare issue when working with serialized attributes is that the serialized representation of an object\n    can change over time. Either because you are migrating from one serializer to the other (e.g. YAML to JSON or to msgpack),\n    or because the serializer used subtly changed its output.\n\n    One example is libyaml that used to have some extra trailing whitespaces, and recently fixed that.\n    When this sorts of thing happen, you end up with lots of records that report being changed even though\n    they aren't, which in the best case leads to a lot more writes to the database and in the worst case lead to nasty bugs.\n\n    The solution is to instead compare the deserialized representation of the object, however Active Record\n    can't assume the deserialized object has a working `==` method. Hence why this new functionality is opt-in.\n\n    ```ruby\n    serialize :config, type: Hash, coder: JSON, comparable: true\n    ```\n\n    *Jean Boussier*",
    "project": "activerecord",
    "date_merged": 1734180452000,
    "author": "Jean Boussier",
    "sha": "6a71a2ffea9f77228e3e13d5b3becac17449f2d8",
    "pr": "53946",
    "merge_sha": "9424179306c9c7eb70d7fa4eca9994c4285e6ac6",
    "html": "<p>Serialized attributes can now be marked as comparable.</p>\n\n<p>A not rare issue when working with serialized attributes is that the serialized representation of an object<br />\ncan change over time. Either because you are migrating from one serializer to the other (e.g. YAML to JSON or to msgpack),<br />\nor because the serializer used subtly changed its output.</p>\n\n<p>One example is libyaml that used to have some extra trailing whitespaces, and recently fixed that.<br />\nWhen this sorts of thing happen, you end up with lots of records that report being changed even though<br />\nthey aren’t, which in the best case leads to a lot more writes to the database and in the worst case lead to nasty bugs.</p>\n\n<p>The solution is to instead compare the deserialized representation of the object, however Active Record<br />\ncan’t assume the deserialized object has a working <code>==</code> method. Hence why this new functionality is opt-in.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">serialize</span> <span class=\"ss\">:config</span><span class=\"p\">,</span> <span class=\"ss\">type: </span><span class=\"no\">Hash</span><span class=\"p\">,</span> <span class=\"ss\">coder: </span><span class=\"no\">JSON</span><span class=\"p\">,</span> <span class=\"ss\">comparable: </span><span class=\"kp\">true</span>\n</code></pre></div></div>\n\n<p><em>Jean Boussier</em></p>\n"
  },
  {
    "message": "*   Fix MySQL default functions getting dropped when changing a column's nullability.\n\n    *Bastian Bartmann*",
    "project": "activerecord",
    "date_merged": 1733821459000,
    "author": "Bastian Bartmann",
    "sha": "ffa9d6dfbbb465ac36246c0de28e0a4ff5312738",
    "pr": "53838",
    "merge_sha": "ab3b87e536fc27004629aa5f32bdbe5353626111",
    "html": "<p>Fix MySQL default functions getting dropped when changing a column’s nullability.</p>\n\n<p><em>Bastian Bartmann</em></p>\n"
  },
  {
    "message": "*   SQLite extensions can be configured in `config/database.yml`.\n\n    The database configuration option `extensions:` allows an application to load SQLite extensions\n    when using `sqlite3` >= v2.4.0. The array members may be filesystem paths or the names of\n    modules that respond to `.to_path`:\n\n    ``` yaml\n    development:\n      adapter: sqlite3\n      extensions:\n        - SQLean::UUID                     # module name responding to `.to_path`\n        - .sqlpkg/nalgeon/crypto/crypto.so # or a filesystem path\n        - <%= AppExtensions.location %>    # or ruby code returning a path\n    ```\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1733344482000,
    "author": "Mike Dalessio",
    "sha": "b599d4cea0b1688493837e7895b54f35e84049f7",
    "pr": "53827",
    "merge_sha": "91d456366638ac6c3f6dec38670c8ada5e7c69b1",
    "html": "<p>SQLite extensions can be configured in <code>config/database.yml</code>.</p>\n\n<p>The database configuration option <code>extensions:</code> allows an application to load SQLite extensions<br />\nwhen using <code>sqlite3</code> &gt;= v2.4.0. The array members may be filesystem paths or the names of<br />\nmodules that respond to <code>.to_path</code>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">development</span><span class=\"pi\">:</span>\n  <span class=\"na\">adapter</span><span class=\"pi\">:</span> <span class=\"s\">sqlite3</span>\n  <span class=\"na\">extensions</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">SQLean::UUID</span>                     <span class=\"c1\"># module name responding to `.to_path`</span>\n    <span class=\"pi\">-</span> <span class=\"s\">.sqlpkg/nalgeon/crypto/crypto.so</span> <span class=\"c1\"># or a filesystem path</span>\n    <span class=\"pi\">-</span> <span class=\"s\">&lt;%= AppExtensions.location %&gt;</span>    <span class=\"c1\"># or ruby code returning a path</span>\n</code></pre></div></div>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   `ActiveRecord::Middleware::ShardSelector` supports granular database connection switching.\n\n    A new configuration option, `class_name:`, is introduced to\n    `config.active_record.shard_selector` to allow an application to specify the abstract connection\n    class to be switched by the shard selection middleware. The default class is\n    `ActiveRecord::Base`.\n\n    For example, this configuration tells `ShardSelector` to switch shards using\n    `AnimalsRecord.connected_to`:\n\n    ```\n    config.active_record.shard_selector = { class_name: \"AnimalsRecord\" }\n    ```\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1733262413000,
    "author": "Mike Dalessio",
    "sha": "58480682ede0291055b64f627b53fab07c459a81",
    "pr": "53783",
    "merge_sha": "4dd8fb30986f7b1f824ebad5d5ec7620685071d4",
    "html": "<p><code>ActiveRecord::Middleware::ShardSelector</code> supports granular database connection switching.</p>\n\n<p>A new configuration option, <code>class_name:</code>, is introduced to<br />\n<code>config.active_record.shard_selector</code> to allow an application to specify the abstract connection<br />\nclass to be switched by the shard selection middleware. The default class is<br />\n<code>ActiveRecord::Base</code>.</p>\n\n<p>For example, this configuration tells <code>ShardSelector</code> to switch shards using<br />\n<code>AnimalsRecord.connected_to</code>:</p>\n\n<pre><code>config.active_record.shard_selector = { class_name: \"AnimalsRecord\" }\n</code></pre>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Reset relations after `insert_all`/`upsert_all`.\n\n    Bulk insert/upsert methods will now call `reset` if used on a relation, matching the behavior of `update_all`.\n\n    *Milo Winningham*",
    "project": "activerecord",
    "date_merged": 1733206087000,
    "author": "Milo Winningham",
    "sha": "a0591974a88b8e8eebe27fa011cb8aa84d998298",
    "pr": "45943",
    "merge_sha": "eb06dce17f6be8911b2e2f0b0f28c37dd207d202",
    "html": "<p>Reset relations after <code>insert_all</code>/<code>upsert_all</code>.</p>\n\n<p>Bulk insert/upsert methods will now call <code>reset</code> if used on a relation, matching the behavior of <code>update_all</code>.</p>\n\n<p><em>Milo Winningham</em></p>\n"
  },
  {
    "message": "*   Use `_N` as a parallel tests databases suffixes\n\n    Peviously, `-N` was used as a suffix. This can cause problems for RDBMSes\n    which do not support dashes in database names.\n\n    *fatkodima*",
    "project": "activerecord",
    "date_merged": 1733128168000,
    "author": "fatkodima",
    "sha": "e04a9085fdef1ef87bbf27a96cd719ff15cb5b78",
    "pr": "53790",
    "merge_sha": "4060253ea7bf1a04c7b2368ffc17ddcf991997f9",
    "html": "<p>Use <code>_N</code> as a parallel tests databases suffixes</p>\n\n<p>Peviously, <code>-N</code> was used as a suffix. This can cause problems for RDBMSes<br />\nwhich do not support dashes in database names.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   Remember when a database connection has recently been verified (for\n    two seconds, by default), to avoid repeated reverifications during a\n    single request.\n\n    This should recreate a similar rate of verification as in Rails 7.1,\n    where connections are leased for the duration of a request, and thus\n    only verified once.\n\n    *Matthew Draper*",
    "project": "activerecord",
    "date_merged": 1732772577000,
    "author": "Matthew Draper",
    "sha": "a4cefc19b1810ba0048f635f53e4a986da921973",
    "pr": "53672",
    "merge_sha": "8b544b2689f97f57c97bee59f45920bd99bda047",
    "html": "<p>Remember when a database connection has recently been verified (for<br />\ntwo seconds, by default), to avoid repeated reverifications during a<br />\nsingle request.</p>\n\n<p>This should recreate a similar rate of verification as in Rails 7.1,<br />\nwhere connections are leased for the duration of a request, and thus<br />\nonly verified once.</p>\n\n<p><em>Matthew Draper</em></p>\n"
  },
  {
    "message": "*   Allow to reset cache counters for multiple records.\n\n    ```\n    Aircraft.reset_counters([1, 2, 3], :wheels_count)\n    ```\n\n    It produces much fewer queries compared to the custom implementation using looping over ids.\n    Previously: `O(ids.size * counters.size)` queries, now: `O(ids.size + counters.size)` queries.\n\n    *fatkodima*",
    "project": "activerecord",
    "date_merged": 1731780012000,
    "author": "fatkodima",
    "sha": "0e6706c456f9e8175edfbaf2a39ef279b3dba14d",
    "pr": "44971",
    "merge_sha": "fe0270c36883b0ccae318ce9603c6f005134ff04",
    "html": "<p>Allow to reset cache counters for multiple records.</p>\n\n<pre><code>Aircraft.reset_counters([1, 2, 3], :wheels_count)\n</code></pre>\n\n<p>It produces much fewer queries compared to the custom implementation using looping over ids.<br />\nPreviously: <code>O(ids.size * counters.size)</code> queries, now: <code>O(ids.size + counters.size)</code> queries.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   Add `affected_rows` to `sql.active_record` Notification.\n\n    *Hartley McGuire*",
    "project": "activerecord",
    "date_merged": 1731752981000,
    "author": "Hartley McGuire",
    "sha": "a029da566f0b9716d90aa670edf04f90b8d72b89",
    "pr": "53277",
    "merge_sha": "c165c070e54ed1855d0a50c47283201ba4750d95",
    "html": "<p>Add <code>affected_rows</code> to <code>sql.active_record</code> Notification.</p>\n\n<p><em>Hartley McGuire</em></p>\n"
  },
  {
    "message": "*   Fix `sum` when performing a grouped calculation.\n\n    `User.group(:friendly).sum` no longer worked. This is fixed.\n\n    *Edouard Chin*",
    "project": "activerecord",
    "date_merged": 1731556607000,
    "author": "Edouard CHIN",
    "sha": "aaad4932b26d731d9aa2b14f21207d6ddf83ea73",
    "pr": "53625",
    "merge_sha": "f7f7d8e63ae60bb7edc5c50b6f7cac3c922574a8",
    "html": "<p>Fix <code>sum</code> when performing a grouped calculation.</p>\n\n<p><code>User.group(:friendly).sum</code> no longer worked. This is fixed.</p>\n\n<p><em>Edouard Chin</em></p>\n"
  },
  {
    "message": "*   Add support for enabling or disabling transactional tests per database.\n\n    A test class can now override the default `use_transactional_tests` setting\n    for individual databases, which can be useful if some databases need their\n    current state to be accessible to an external process while tests are running.\n\n    ```ruby\n    class MostlyTransactionalTest < ActiveSupport::TestCase\n      self.use_transactional_tests = true\n      skip_transactional_tests_for_database :shared\n    end\n    ```\n\n    *Matthew Cheetham*, *Morgan Mareve*",
    "project": "activerecord",
    "date_merged": 1730907092000,
    "author": "Matthew John Cheetham",
    "sha": "c68482f5714c1dd82e84e255aded630700184b72",
    "pr": "53139",
    "merge_sha": "f8d74e27212f8d852a3d5ca7eb7766807a89b0a2",
    "html": "<p>Add support for enabling or disabling transactional tests per database.</p>\n\n<p>A test class can now override the default <code>use_transactional_tests</code> setting<br />\nfor individual databases, which can be useful if some databases need their<br />\ncurrent state to be accessible to an external process while tests are running.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">MostlyTransactionalTest</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">TestCase</span>\n  <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">use_transactional_tests</span> <span class=\"o\">=</span> <span class=\"kp\">true</span>\n  <span class=\"n\">skip_transactional_tests_for_database</span> <span class=\"ss\">:shared</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Matthew Cheetham</em>, <em>Morgan Mareve</em></p>\n"
  },
  {
    "message": "*   Cast `query_cache` value when using URL configuration.\n\n    *zzak*",
    "project": "activerecord",
    "date_merged": 1730292324000,
    "author": "zzak",
    "sha": "af9b0f2be4c677772bca5c0b0d947bcd7b8d2fe4",
    "pr": "53491",
    "merge_sha": "a807d585fadff5d1964a32088100017e41cc5c5d",
    "html": "<p>Cast <code>query_cache</code> value when using URL configuration.</p>\n\n<p><em>zzak</em></p>\n"
  },
  {
    "message": "*   NULLS NOT DISTINCT works with UNIQUE CONSTRAINT as well as UNIQUE INDEX.\n\n    *Ryuta Kamizono*",
    "project": "activerecord",
    "date_merged": 1729999169000,
    "author": "Ryuta Kamizono",
    "sha": "38489e43f2c865f888f9b5af0219a8280fc54429",
    "pr": "53456",
    "merge_sha": "e6429269fd5a8a7d728557f4e7d7f82c0ad1478c",
    "html": "<p>NULLS NOT DISTINCT works with UNIQUE CONSTRAINT as well as UNIQUE INDEX.</p>\n\n<p><em>Ryuta Kamizono</em></p>\n"
  },
  {
    "message": "*   `PG::UnableToSend: no connection to the server` is now retryable as a connection-related exception\n\n    *Kazuma Watanabe*",
    "project": "activerecord",
    "date_merged": 1729756158000,
    "author": "wata727",
    "sha": "d0edda3315455660a387fb3cd6313b589a235e3a",
    "pr": "53400",
    "merge_sha": "7fac5d14d00fcc8dc60b49729abe78223ad3bf00",
    "html": "<p><code>PG::UnableToSend: no connection to the server</code> is now retryable as a connection-related exception</p>\n\n<p><em>Kazuma Watanabe</em></p>\n"
  },
  {
    "message": "*   Don't enable YJIT in development and test environments\n\n    Development and test environment tend to reload code and redefine methods (e.g. mocking),\n    hence YJIT isn't generally faster in these environments.\n\n    *Ali Ismayilov*, *Jean Boussier*",
    "project": "railties",
    "date_merged": 1732617959000,
    "author": "Ali Ismayilov",
    "sha": "76e2b7e529e6c8cc42de00c94408d008655385bb",
    "pr": "53746",
    "merge_sha": "723ca0c0a757e27ab23e60cd65767606b7f6c202",
    "html": "<p>Don’t enable YJIT in development and test environments</p>\n\n<p>Development and test environment tend to reload code and redefine methods (e.g. mocking),<br />\nhence YJIT isn’t generally faster in these environments.</p>\n\n<p><em>Ali Ismayilov</em>, <em>Jean Boussier</em></p>\n"
  },
  {
    "message": "*   Only include PermissionsPolicy::Middleware if policy is configured.\n\n    *Petrik de Heus*",
    "project": "railties",
    "date_merged": 1731706201000,
    "author": "Petrik",
    "sha": "987977c2809e57dc7f4d6e90d6aaa25e6a52f927",
    "pr": "53621",
    "merge_sha": "5a112f85638b75f2c461c2802ce1224235c910b7",
    "html": "<p>Only include PermissionsPolicy::Middleware if policy is configured.</p>\n\n<p><em>Petrik de Heus</em></p>\n"
  },
  {
    "message": "*   Avoid wrapping redis in a `ConnectionPool` when using `ActiveSupport::Cache::RedisCacheStore` if the `:redis`\n    option is already a `ConnectionPool`.\n\n    *Joshua Young*",
    "project": "activesupport",
    "date_merged": 1733473195000,
    "author": "Joshua Young",
    "sha": "ffa9f3bc899da5b3818a74d435436256052fc4eb",
    "pr": "53845",
    "merge_sha": "31c060c38225d36a73b5d4787cccc0cb7e1c944a",
    "html": "<p>Avoid wrapping redis in a <code>ConnectionPool</code> when using <code>ActiveSupport::Cache::RedisCacheStore</code> if the <code>:redis</code><br />\noption is already a <code>ConnectionPool</code>.</p>\n\n<p><em>Joshua Young</em></p>\n"
  },
  {
    "message": "*   Alter `ERB::Util.tokenize` to return :PLAIN token with full input string when string doesn't contain ERB tags.\n\n    *Martin Emde*",
    "project": "activesupport",
    "date_merged": 1732819839000,
    "author": "Martin Emde",
    "sha": "58b2d73f13d0f79b5ca618127edca3eea05114f1",
    "pr": "53763",
    "merge_sha": "a87bbdf3a716ef7987d0738afd8426ffa6dae2ec",
    "html": "<p>Alter <code>ERB::Util.tokenize</code> to return :PLAIN token with full input string when string doesn’t contain ERB tags.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Fix a bug in `ERB::Util.tokenize` that causes incorrect tokenization when ERB tags are preceeded by multibyte characters.\n\n    *Martin Emde*",
    "project": "activesupport",
    "date_merged": 1731856279000,
    "author": "Martin Emde",
    "sha": "30010bb7eb31a9f251c7e519528c0fe0a68c7f3a",
    "pr": "53655",
    "merge_sha": "51f3fa68f75ecaec114c5eacfb99a4a8ed260844",
    "html": "<p>Fix a bug in <code>ERB::Util.tokenize</code> that causes incorrect tokenization when ERB tags are preceeded by multibyte characters.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Add `ActiveSupport::Testing::NotificationAssertions` module to help with testing `ActiveSupport::Notifications`.\n\n    *Nicholas La Roux*, *Yishu See*, *Sean Doyle*",
    "project": "activesupport",
    "date_merged": 1731684718000,
    "author": "Nicholas La Roux",
    "sha": "5cfe5e639a95ea6067a2e5aca97ccbbb36abb1d3",
    "pr": "53065",
    "merge_sha": "c57da03e94a58e42abbb891597608898585b057b",
    "html": "<p>Add <code>ActiveSupport::Testing::NotificationAssertions</code> module to help with testing <code>ActiveSupport::Notifications</code>.</p>\n\n<p><em>Nicholas La Roux</em>, <em>Yishu See</em>, <em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   `ActiveSupport::CurrentAttributes#attributes` now will return a new hash object on each call.\n\n    Previously, the same hash object was returned each time that method was called.\n\n    *fatkodima*",
    "project": "activesupport",
    "date_merged": 1729807501000,
    "author": "fatkodima",
    "sha": "90a96b8eb814463049b2cb47c899dd24c5eba369",
    "pr": "53440",
    "merge_sha": "c8ad2b2abfc1b8c01e27457a237f90aff0003403",
    "html": "<p><code>ActiveSupport::CurrentAttributes#attributes</code> now will return a new hash object on each call.</p>\n\n<p>Previously, the same hash object was returned each time that method was called.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   `ActiveSupport::JSON.encode` supports CIDR notation.\n\n    Previously:\n\n    ```ruby\n    ActiveSupport::JSON.encode(IPAddr.new(\"172.16.0.0/24\")) # => \"\\\"172.16.0.0\\\"\"\n    ```\n\n    After this change:\n\n    ```ruby\n    ActiveSupport::JSON.encode(IPAddr.new(\"172.16.0.0/24\")) # => \"\\\"172.16.0.0/24\\\"\"\n    ```\n\n    *Taketo Takashima*",
    "project": "activesupport",
    "date_merged": 1729554475000,
    "author": "Taketo Takashima",
    "sha": "a11e7c263859e28468cd4cdcfadea4608e41ba66",
    "pr": "53393",
    "merge_sha": "546ca81125749e43e30de20684913a8385deafb9",
    "html": "<p><code>ActiveSupport::JSON.encode</code> supports CIDR notation.</p>\n\n<p>Previously:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">JSON</span><span class=\"p\">.</span><span class=\"nf\">encode</span><span class=\"p\">(</span><span class=\"no\">IPAddr</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"172.16.0.0/24\"</span><span class=\"p\">))</span> <span class=\"c1\"># =&gt; \"\\\"172.16.0.0\\\"\"</span>\n</code></pre></div></div>\n\n<p>After this change:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">JSON</span><span class=\"p\">.</span><span class=\"nf\">encode</span><span class=\"p\">(</span><span class=\"no\">IPAddr</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"172.16.0.0/24\"</span><span class=\"p\">))</span> <span class=\"c1\"># =&gt; \"\\\"172.16.0.0/24\\\"\"</span>\n</code></pre></div></div>\n\n<p><em>Taketo Takashima</em></p>\n"
  },
  {
    "message": "*   Make `ActiveSupport::FileUpdateChecker` faster when checking many file-extensions.\n\n    *Jonathan del Strother*",
    "project": "activesupport",
    "date_merged": 1732272149000,
    "author": "Jonathan del Strother",
    "sha": "cea72800784fd3d3e2e7432ace0604cd90908ddb",
    "pr": "53680",
    "merge_sha": "b7165a33649d9e4132730feb6fbd39d4ed49dc0d",
    "html": "<p>Make <code>ActiveSupport::FileUpdateChecker</code> faster when checking many file-extensions.</p>\n\n<p><em>Jonathan del Strother</em></p>\n"
  },
  {
    "message": "*   Add `check_collisions` option to `ActionDispatch::Session::CacheStore`.\n\n    Newly generated session ids use 128 bits of randomness, which is more than\n    enough to ensure collisions can't happen, but if you need to harden sessions\n    even more, you can enable this option to check in the session store that the id\n    is indeed free you can enable that option. This however incurs an extra write\n    on session creation.\n\n    *Shia*",
    "project": "actionpack",
    "date_merged": 1734167903000,
    "author": "Shia",
    "sha": "4f63fde5de0c46acaad8d5119ecb8e44ae69ff4f",
    "pr": "53918",
    "merge_sha": "6a88a104909660f91a0c6a62ca23e2a8de667477",
    "html": "<p>Add <code>check_collisions</code> option to <code>ActionDispatch::Session::CacheStore</code>.</p>\n\n<p>Newly generated session ids use 128 bits of randomness, which is more than<br />\nenough to ensure collisions can’t happen, but if you need to harden sessions<br />\neven more, you can enable this option to check in the session store that the id<br />\nis indeed free you can enable that option. This however incurs an extra write<br />\non session creation.</p>\n\n<p><em>Shia</em></p>\n"
  },
  {
    "message": "*   In ExceptionWrapper, match backtrace lines with built templates more often,\n    allowing improved highlighting of errors within do-end blocks in templates.\n    Fix for Ruby 3.4 to match new method labels in backtrace.\n\n    *Martin Emde*",
    "project": "actionpack",
    "date_merged": 1732819839000,
    "author": "Martin Emde",
    "sha": "1f9295ed06a0e84a2561b8ae48a1baafb0981c62",
    "pr": "53763",
    "merge_sha": "a87bbdf3a716ef7987d0738afd8426ffa6dae2ec",
    "html": "<p>In ExceptionWrapper, match backtrace lines with built templates more often,<br />\nallowing improved highlighting of errors within do-end blocks in templates.<br />\nFix for Ruby 3.4 to match new method labels in backtrace.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Allow setting content type with a symbol of the Mime type.\n\n    ```ruby\n    # Before\n    response.content_type = \"text/html\"\n\n    # After\n    response.content_type = :html\n    ```\n\n    *Petrik de Heus*",
    "project": "actionpack",
    "date_merged": 1731753392000,
    "author": "Petrik",
    "sha": "18cb9092526cfd2dd44b199b152c7f66ad1d2b50",
    "pr": "53236",
    "merge_sha": "ed72523a86fb6010e056667f294fee34ba276aed",
    "html": "<p>Allow setting content type with a symbol of the Mime type.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Before</span>\n<span class=\"n\">response</span><span class=\"p\">.</span><span class=\"nf\">content_type</span> <span class=\"o\">=</span> <span class=\"s2\">\"text/html\"</span>\n\n<span class=\"c1\"># After</span>\n<span class=\"n\">response</span><span class=\"p\">.</span><span class=\"nf\">content_type</span> <span class=\"o\">=</span> <span class=\"ss\">:html</span>\n</code></pre></div></div>\n\n<p><em>Petrik de Heus</em></p>\n"
  }
]