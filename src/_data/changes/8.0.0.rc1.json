[
  {
    "message": "*   Add `reply_to_address` extension method on `Mail::Message`.\n\n    *Mr0grog*",
    "project": "actionmailbox",
    "date_merged": 1737972229000,
    "author": "Rob Brackett",
    "sha": "ac583204ba548557981b6890a6fc2c3975d24ee9",
    "pr": "53513",
    "merge_sha": "59a42a9e41ce76d65f8323b901f5ca1933024d4d",
    "html": "<p>Add <code>reply_to_address</code> extension method on <code>Mail::Message</code>.</p>\n\n<p><em>Mr0grog</em></p>\n"
  },
  {
    "message": "*   Add `except_on:` option for validation callbacks.\n\n    *Ben Sheldon*",
    "project": "activemodel",
    "date_merged": 1741164716000,
    "author": "Ben Sheldon [he/him]",
    "sha": "87be3c33cfc43888fb9aa3c9e41e3ce4ff722439",
    "pr": "54665",
    "merge_sha": "a59db85fb8f0be684fb22abf0e53ba13701ac9c1",
    "html": "<p>Add <code>except_on:</code> option for validation callbacks.</p>\n\n<p><em>Ben Sheldon</em></p>\n"
  },
  {
    "message": "*   Backport `ActiveRecord::Normalization` to `ActiveModel::Attributes::Normalization`\n\n    ```ruby\n    class User\n      include ActiveModel::Attributes\n      include ActiveModel::Attributes::Normalization\n\n      attribute :email, :string\n\n      normalizes :email, with: -> email { email.strip.downcase }\n    end\n\n    user = User.new\n    user.email =    \" CRUISE-CONTROL@EXAMPLE.COM\\n\"\n    user.email # => \"cruise-control@example.com\"\n    ```\n\n    *Sean Doyle*",
    "project": "activemodel",
    "date_merged": 1736266443000,
    "author": "Sean Doyle",
    "sha": "599c9af7e1990a98e9bbaffa03a4b4d0b2f622ee",
    "pr": "53955",
    "merge_sha": "05003428cb05ef0d4dba1754fc055a22aa533227",
    "html": "<p>Backport <code>ActiveRecord::Normalization</code> to <code>ActiveModel::Attributes::Normalization</code></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">User</span>\n  <span class=\"kp\">include</span> <span class=\"no\">ActiveModel</span><span class=\"o\">::</span><span class=\"no\">Attributes</span>\n  <span class=\"kp\">include</span> <span class=\"no\">ActiveModel</span><span class=\"o\">::</span><span class=\"no\">Attributes</span><span class=\"o\">::</span><span class=\"no\">Normalization</span>\n\n  <span class=\"n\">attribute</span> <span class=\"ss\">:email</span><span class=\"p\">,</span> <span class=\"ss\">:string</span>\n\n  <span class=\"n\">normalizes</span> <span class=\"ss\">:email</span><span class=\"p\">,</span> <span class=\"ss\">with: </span><span class=\"o\">-&gt;</span> <span class=\"n\">email</span> <span class=\"p\">{</span> <span class=\"n\">email</span><span class=\"p\">.</span><span class=\"nf\">strip</span><span class=\"p\">.</span><span class=\"nf\">downcase</span> <span class=\"p\">}</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"no\">User</span><span class=\"p\">.</span><span class=\"nf\">new</span>\n<span class=\"n\">user</span><span class=\"p\">.</span><span class=\"nf\">email</span> <span class=\"o\">=</span>    <span class=\"s2\">\" CRUISE-CONTROL@EXAMPLE.COM</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n<span class=\"n\">user</span><span class=\"p\">.</span><span class=\"nf\">email</span> <span class=\"c1\"># =&gt; \"cruise-control@example.com\"</span>\n</code></pre></div></div>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Use `UNLINK` command instead of `DEL` in `ActiveSupport::Cache::RedisCacheStore` for non-blocking deletion.\n\n    *Aron Roh*",
    "project": "activesupport",
    "date_merged": 1743703328000,
    "author": "roharon",
    "sha": "76ec98d0173ba8aef83adb7d660c453a518d5e46",
    "pr": "54861",
    "merge_sha": "e0452e80137c396c93465cf98f8eda43026346c7",
    "html": "<p>Use <code>UNLINK</code> command instead of <code>DEL</code> in <code>ActiveSupport::Cache::RedisCacheStore</code> for non-blocking deletion.</p>\n\n<p><em>Aron Roh</em></p>\n"
  },
  {
    "message": "*   Add `Cache#read_counter` and `Cache#write_counter`\n\n    ```ruby\n    Rails.cache.write_counter(\"foo\", 1)\n    Rails.cache.read_counter(\"foo\") # => 1\n    Rails.cache.increment(\"foo\")\n    Rails.cache.read_counter(\"foo\") # => 2\n    ```\n\n    *Alex Ghiculescu*",
    "project": "activesupport",
    "date_merged": 1743583752000,
    "author": "Alex",
    "sha": "a7dcbdee9c4a6ddfa7ff97d14a4ac546ae7cd255",
    "pr": "54855",
    "merge_sha": "5d4057b667c7f4bcf8adb1c4901efb1fd8f9438f",
    "html": "<p>Add <code>Cache#read_counter</code> and <code>Cache#write_counter</code></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">cache</span><span class=\"p\">.</span><span class=\"nf\">write_counter</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">cache</span><span class=\"p\">.</span><span class=\"nf\">read_counter</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; 1</span>\n<span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">cache</span><span class=\"p\">.</span><span class=\"nf\">increment</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">)</span>\n<span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">cache</span><span class=\"p\">.</span><span class=\"nf\">read_counter</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; 2</span>\n</code></pre></div></div>\n\n<p><em>Alex Ghiculescu</em></p>\n"
  },
  {
    "message": "*   Introduce ActiveSupport::Testing::ErrorReporterAssertions#capture_error_reports\n\n    Captures all reported errors from within the block that match the given\n    error class.\n\n    ```ruby\n    reports = capture_error_reports(IOError) do\n      Rails.error.report(IOError.new(\"Oops\"))\n      Rails.error.report(IOError.new(\"Oh no\"))\n      Rails.error.report(StandardError.new)\n    end\n\n    assert_equal 2, reports.size\n    assert_equal \"Oops\", reports.first.error.message\n    assert_equal \"Oh no\", reports.last.error.message\n    ```\n\n    *Andrew Novoselac*",
    "project": "activesupport",
    "date_merged": 1742907071000,
    "author": "Andrew Novoselac",
    "sha": "22dd98adf868e0883ba8aaa0f7e1dc856a9689f8",
    "pr": "54809",
    "merge_sha": "76efa0ff4b1ec9631262dbf7e0406c85cd4c2584",
    "html": "<p>Introduce ActiveSupport::Testing::ErrorReporterAssertions#capture_error_reports</p>\n\n<p>Captures all reported errors from within the block that match the given<br />\nerror class.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">reports</span> <span class=\"o\">=</span> <span class=\"n\">capture_error_reports</span><span class=\"p\">(</span><span class=\"no\">IOError</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">.</span><span class=\"nf\">report</span><span class=\"p\">(</span><span class=\"no\">IOError</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"Oops\"</span><span class=\"p\">))</span>\n  <span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">.</span><span class=\"nf\">report</span><span class=\"p\">(</span><span class=\"no\">IOError</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"Oh no\"</span><span class=\"p\">))</span>\n  <span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">.</span><span class=\"nf\">report</span><span class=\"p\">(</span><span class=\"no\">StandardError</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">assert_equal</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">reports</span><span class=\"p\">.</span><span class=\"nf\">size</span>\n<span class=\"n\">assert_equal</span> <span class=\"s2\">\"Oops\"</span><span class=\"p\">,</span> <span class=\"n\">reports</span><span class=\"p\">.</span><span class=\"nf\">first</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">.</span><span class=\"nf\">message</span>\n<span class=\"n\">assert_equal</span> <span class=\"s2\">\"Oh no\"</span><span class=\"p\">,</span> <span class=\"n\">reports</span><span class=\"p\">.</span><span class=\"nf\">last</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">.</span><span class=\"nf\">message</span>\n</code></pre></div></div>\n\n<p><em>Andrew Novoselac</em></p>\n"
  },
  {
    "message": "*   Introduce ActiveSupport::ErrorReporter#add_middleware\n\n    When reporting an error, the error context middleware will be called with the reported error\n    and base execution context. The stack may mutate the context hash. The mutated context will\n    then be passed to error subscribers. Middleware receives the same parameters as `ErrorReporter#report`.\n\n    *Andrew Novoselac*, *Sam Schmidt*",
    "project": "activesupport",
    "date_merged": 1740601055000,
    "author": "andrew.novoselac@shopify.com",
    "sha": "0b8e08330fdaa9cc0daaa5f974ca6ca1b2f9dede",
    "pr": "54512",
    "merge_sha": "cff159f8584fbe7c062dd2743abe6f8ec66bfd13",
    "html": "<p>Introduce ActiveSupport::ErrorReporter#add_middleware</p>\n\n<p>When reporting an error, the error context middleware will be called with the reported error<br />\nand base execution context. The stack may mutate the context hash. The mutated context will<br />\nthen be passed to error subscribers. Middleware receives the same parameters as <code>ErrorReporter#report</code>.</p>\n\n<p><em>Andrew Novoselac</em>, <em>Sam Schmidt</em></p>\n"
  },
  {
    "message": "*   Change execution wrapping to report all exceptions, including `Exception`.\n\n    If a more serious error like `SystemStackError` or `NoMemoryError` happens,\n    the error reporter should be able to report these kinds of exceptions.\n\n    *Gannon McGibbon*",
    "project": "activesupport",
    "date_merged": 1739010300000,
    "author": "Jean Boussier",
    "sha": "36dd3d100f63633254b99d4c9d4af0198fa40f9a",
    "pr": "54469",
    "merge_sha": "d35672eaaa3d930aeccf34286b7ba79f92c62052",
    "html": "<p>Change execution wrapping to report all exceptions, including <code>Exception</code>.</p>\n\n<p>If a more serious error like <code>SystemStackError</code> or <code>NoMemoryError</code> happens,<br />\nthe error reporter should be able to report these kinds of exceptions.</p>\n\n<p><em>Gannon McGibbon</em></p>\n"
  },
  {
    "message": "*   `ActiveSupport::Testing::Parallelization.before_fork_hook` allows declaration of callbacks that\n    are invoked immediately before forking test workers.\n\n    *Mike Dalessio*",
    "project": "activesupport",
    "date_merged": 1738158431000,
    "author": "Mike Dalessio",
    "sha": "1709940bface730191e94a8cfd5720f1ad0bf34e",
    "pr": "54376",
    "merge_sha": "f132ba641a2720376f00071556fc85cbb2a6965f",
    "html": "<p><code>ActiveSupport::Testing::Parallelization.before_fork_hook</code> allows declaration of callbacks that<br />\nare invoked immediately before forking test workers.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Allow the `#freeze_time` testing helper to accept a date or time argument.\n\n    ```ruby\n    Time.current # => Sun, 09 Jul 2024 15:34:49 EST -05:00\n    freeze_time Time.current + 1.day\n    sleep 1\n    Time.current # => Mon, 10 Jul 2024 15:34:49 EST -05:00\n    ```\n\n    *Joshua Young*",
    "project": "activesupport",
    "date_merged": 1737578621000,
    "author": "Joshua Young",
    "sha": "a1b1edf1c5053a73d528e438a693bb04d62b0259",
    "pr": "54303",
    "merge_sha": "a274d4f942e3a9508caea1074d7c539cec2152c5",
    "html": "<p>Allow the <code>#freeze_time</code> testing helper to accept a date or time argument.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">Time</span><span class=\"p\">.</span><span class=\"nf\">current</span> <span class=\"c1\"># =&gt; Sun, 09 Jul 2024 15:34:49 EST -05:00</span>\n<span class=\"n\">freeze_time</span> <span class=\"no\">Time</span><span class=\"p\">.</span><span class=\"nf\">current</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"nf\">day</span>\n<span class=\"nb\">sleep</span> <span class=\"mi\">1</span>\n<span class=\"no\">Time</span><span class=\"p\">.</span><span class=\"nf\">current</span> <span class=\"c1\"># =&gt; Mon, 10 Jul 2024 15:34:49 EST -05:00</span>\n</code></pre></div></div>\n\n<p><em>Joshua Young</em></p>\n"
  },
  {
    "message": "*   `ActiveSupport::JSON` now accepts options\n\n    It is now possible to pass options to `ActiveSupport::JSON`:\n    ```ruby\n    ActiveSupport::JSON.decode('{\"key\": \"value\"}', symbolize_names: true) # => { key: \"value\" }\n    ```\n\n    *matthaigh27*",
    "project": "activesupport",
    "date_merged": 1737456235000,
    "author": "matt haigh",
    "sha": "65426afea6141bb489ee02d1513fe2c14b700700",
    "pr": "54172",
    "merge_sha": "eb503d80bf0030d9d66a576214dc21a467a1bc53",
    "html": "<p><code>ActiveSupport::JSON</code> now accepts options</p>\n\n<p>It is now possible to pass options to <code>ActiveSupport::JSON</code>:</p>\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">JSON</span><span class=\"p\">.</span><span class=\"nf\">decode</span><span class=\"p\">(</span><span class=\"s1\">'{\"key\": \"value\"}'</span><span class=\"p\">,</span> <span class=\"ss\">symbolize_names: </span><span class=\"kp\">true</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; { key: \"value\" }</span>\n</code></pre></div></div>\n\n<p><em>matthaigh27</em></p>\n"
  },
  {
    "message": "*   `ActiveSupport::Testing::NotificationAssertions`'s `assert_notification` now matches against payload subsets by default.\n\n    Previously the following assertion would fail due to excess key vals in the notification payload. Now with payload subset matching, it will pass.\n\n    ```ruby\n    assert_notification(\"post.submitted\", title: \"Cool Post\") do\n      ActiveSupport::Notifications.instrument(\"post.submitted\", title: \"Cool Post\", body: \"Cool Body\")\n    end\n    ```\n\n    Additionally, you can now persist a matched notification for more customized assertions.\n\n    ```ruby\n    notification = assert_notification(\"post.submitted\", title: \"Cool Post\") do\n      ActiveSupport::Notifications.instrument(\"post.submitted\", title: \"Cool Post\", body: Body.new(\"Cool Body\"))\n    end\n\n    assert_instance_of(Body, notification.payload[:body])\n    ```\n\n    *Nicholas La Roux*",
    "project": "activesupport",
    "date_merged": 1736379614000,
    "author": "Nicholas La Roux",
    "sha": "72eaf25eaed3a75b2fd8eb1c6365e432805b4122",
    "pr": "54126",
    "merge_sha": "da32425a0864f6da7bdd2a8d3a43027fbfb2a504",
    "html": "<p><code>ActiveSupport::Testing::NotificationAssertions</code>’s <code>assert_notification</code> now matches against payload subsets by default.</p>\n\n<p>Previously the following assertion would fail due to excess key vals in the notification payload. Now with payload subset matching, it will pass.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">assert_notification</span><span class=\"p\">(</span><span class=\"s2\">\"post.submitted\"</span><span class=\"p\">,</span> <span class=\"ss\">title: </span><span class=\"s2\">\"Cool Post\"</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">Notifications</span><span class=\"p\">.</span><span class=\"nf\">instrument</span><span class=\"p\">(</span><span class=\"s2\">\"post.submitted\"</span><span class=\"p\">,</span> <span class=\"ss\">title: </span><span class=\"s2\">\"Cool Post\"</span><span class=\"p\">,</span> <span class=\"ss\">body: </span><span class=\"s2\">\"Cool Body\"</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p>Additionally, you can now persist a matched notification for more customized assertions.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">notification</span> <span class=\"o\">=</span> <span class=\"n\">assert_notification</span><span class=\"p\">(</span><span class=\"s2\">\"post.submitted\"</span><span class=\"p\">,</span> <span class=\"ss\">title: </span><span class=\"s2\">\"Cool Post\"</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">Notifications</span><span class=\"p\">.</span><span class=\"nf\">instrument</span><span class=\"p\">(</span><span class=\"s2\">\"post.submitted\"</span><span class=\"p\">,</span> <span class=\"ss\">title: </span><span class=\"s2\">\"Cool Post\"</span><span class=\"p\">,</span> <span class=\"ss\">body: </span><span class=\"no\">Body</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"Cool Body\"</span><span class=\"p\">))</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">assert_instance_of</span><span class=\"p\">(</span><span class=\"no\">Body</span><span class=\"p\">,</span> <span class=\"n\">notification</span><span class=\"p\">.</span><span class=\"nf\">payload</span><span class=\"p\">[</span><span class=\"ss\">:body</span><span class=\"p\">])</span>\n</code></pre></div></div>\n\n<p><em>Nicholas La Roux</em></p>\n"
  },
  {
    "message": "*   Deprecate `String#mb_chars` and `ActiveSupport::Multibyte::Chars`.\n\n    These APIs are a relic of the Ruby 1.8 days when Ruby strings weren't encoding\n    aware. There is no legitimate reasons to need these APIs today.\n\n    *Jean Boussier*",
    "project": "activesupport",
    "date_merged": 1736330516000,
    "author": "Jean Boussier",
    "sha": "ebbbc488dbd88e3b27ced1178cc194332541e982",
    "pr": "54081",
    "merge_sha": "aaa111f4c39b441b45d8b1b1408ee0052ed27d9e",
    "html": "<p>Deprecate <code>String#mb_chars</code> and <code>ActiveSupport::Multibyte::Chars</code>.</p>\n\n<p>These APIs are a relic of the Ruby 1.8 days when Ruby strings weren’t encoding<br />\naware. There is no legitimate reasons to need these APIs today.</p>\n\n<p><em>Jean Boussier</em></p>\n"
  },
  {
    "message": "*   Deprecate `ActiveSupport::Configurable`\n\n    *Sean Doyle*",
    "project": "activesupport",
    "date_merged": 1736272637000,
    "author": "Sean Doyle",
    "sha": "da2fbb2ed3139989a41017dbe685e3ac1dcf5c64",
    "pr": "53970",
    "merge_sha": "1719d250961c74686ee3eceba47896bc1058dac5",
    "html": "<p>Deprecate <code>ActiveSupport::Configurable</code></p>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   `nil.to_query(\"key\")` now returns `key`.\n\n    Previously it would return `key=`, preventing round tripping with `Rack::Utils.parse_nested_query`.\n\n    *Erol Fornoles*",
    "project": "activesupport",
    "date_merged": 1734277258000,
    "author": "Jean Boussier",
    "sha": "2952e9a85d0a8a7f5057ef1f8aded9b7c0905327",
    "pr": "53962",
    "merge_sha": "abdbff56db0c0142027b3d674dd71b15f72da561",
    "html": "<p><code>nil.to_query(\"key\")</code> now returns <code>key</code>.</p>\n\n<p>Previously it would return <code>key=</code>, preventing round tripping with <code>Rack::Utils.parse_nested_query</code>.</p>\n\n<p><em>Erol Fornoles</em></p>\n"
  },
  {
    "message": "*   Avoid wrapping redis in a `ConnectionPool` when using `ActiveSupport::Cache::RedisCacheStore` if the `:redis`\n    option is already a `ConnectionPool`.\n\n    *Joshua Young*",
    "project": "activesupport",
    "date_merged": 1733473195000,
    "author": "Joshua Young",
    "sha": "ffa9f3bc899da5b3818a74d435436256052fc4eb",
    "pr": "53845",
    "merge_sha": "31c060c38225d36a73b5d4787cccc0cb7e1c944a",
    "html": "<p>Avoid wrapping redis in a <code>ConnectionPool</code> when using <code>ActiveSupport::Cache::RedisCacheStore</code> if the <code>:redis</code><br />\noption is already a <code>ConnectionPool</code>.</p>\n\n<p><em>Joshua Young</em></p>\n"
  },
  {
    "message": "*   Alter `ERB::Util.tokenize` to return :PLAIN token with full input string when string doesn't contain ERB tags.\n\n    *Martin Emde*",
    "project": "activesupport",
    "date_merged": 1732819839000,
    "author": "Martin Emde",
    "sha": "58b2d73f13d0f79b5ca618127edca3eea05114f1",
    "pr": "53763",
    "merge_sha": "a87bbdf3a716ef7987d0738afd8426ffa6dae2ec",
    "html": "<p>Alter <code>ERB::Util.tokenize</code> to return :PLAIN token with full input string when string doesn’t contain ERB tags.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Fix a bug in `ERB::Util.tokenize` that causes incorrect tokenization when ERB tags are preceded by multibyte characters.\n\n    *Martin Emde*",
    "project": "activesupport",
    "date_merged": 1743584048000,
    "author": "John Bampton",
    "sha": "5db3ed5ba91b409c9af2513ea753165b010953a8",
    "pr": "54852",
    "merge_sha": "0c90b26a53bd67173756553dc8c05d73cd48a0fd",
    "html": "<p>Fix a bug in <code>ERB::Util.tokenize</code> that causes incorrect tokenization when ERB tags are preceded by multibyte characters.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Add `ActiveSupport::Testing::NotificationAssertions` module to help with testing `ActiveSupport::Notifications`.\n\n    *Nicholas La Roux*, *Yishu See*, *Sean Doyle*",
    "project": "activesupport",
    "date_merged": 1731684718000,
    "author": "Nicholas La Roux",
    "sha": "5cfe5e639a95ea6067a2e5aca97ccbbb36abb1d3",
    "pr": "53065",
    "merge_sha": "c57da03e94a58e42abbb891597608898585b057b",
    "html": "<p>Add <code>ActiveSupport::Testing::NotificationAssertions</code> module to help with testing <code>ActiveSupport::Notifications</code>.</p>\n\n<p><em>Nicholas La Roux</em>, <em>Yishu See</em>, <em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   `ActiveSupport::CurrentAttributes#attributes` now will return a new hash object on each call.\n\n    Previously, the same hash object was returned each time that method was called.\n\n    *fatkodima*",
    "project": "activesupport",
    "date_merged": 1729807501000,
    "author": "fatkodima",
    "sha": "90a96b8eb814463049b2cb47c899dd24c5eba369",
    "pr": "53440",
    "merge_sha": "c8ad2b2abfc1b8c01e27457a237f90aff0003403",
    "html": "<p><code>ActiveSupport::CurrentAttributes#attributes</code> now will return a new hash object on each call.</p>\n\n<p>Previously, the same hash object was returned each time that method was called.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   `ActiveSupport::JSON.encode` supports CIDR notation.\n\n    Previously:\n\n    ```ruby\n    ActiveSupport::JSON.encode(IPAddr.new(\"172.16.0.0/24\")) # => \"\\\"172.16.0.0\\\"\"\n    ```\n\n    After this change:\n\n    ```ruby\n    ActiveSupport::JSON.encode(IPAddr.new(\"172.16.0.0/24\")) # => \"\\\"172.16.0.0/24\\\"\"\n    ```\n\n    *Taketo Takashima*",
    "project": "activesupport",
    "date_merged": 1729554475000,
    "author": "Taketo Takashima",
    "sha": "a11e7c263859e28468cd4cdcfadea4608e41ba66",
    "pr": "53393",
    "merge_sha": "546ca81125749e43e30de20684913a8385deafb9",
    "html": "<p><code>ActiveSupport::JSON.encode</code> supports CIDR notation.</p>\n\n<p>Previously:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">JSON</span><span class=\"p\">.</span><span class=\"nf\">encode</span><span class=\"p\">(</span><span class=\"no\">IPAddr</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"172.16.0.0/24\"</span><span class=\"p\">))</span> <span class=\"c1\"># =&gt; \"\\\"172.16.0.0\\\"\"</span>\n</code></pre></div></div>\n\n<p>After this change:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">JSON</span><span class=\"p\">.</span><span class=\"nf\">encode</span><span class=\"p\">(</span><span class=\"no\">IPAddr</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"172.16.0.0/24\"</span><span class=\"p\">))</span> <span class=\"c1\"># =&gt; \"\\\"172.16.0.0/24\\\"\"</span>\n</code></pre></div></div>\n\n<p><em>Taketo Takashima</em></p>\n"
  },
  {
    "message": "*   Make `ActiveSupport::FileUpdateChecker` faster when checking many file-extensions.\n\n    *Jonathan del Strother*",
    "project": "activesupport",
    "date_merged": 1732272149000,
    "author": "Jonathan del Strother",
    "sha": "cea72800784fd3d3e2e7432ace0604cd90908ddb",
    "pr": "53680",
    "merge_sha": "b7165a33649d9e4132730feb6fbd39d4ed49dc0d",
    "html": "<p>Make <code>ActiveSupport::FileUpdateChecker</code> faster when checking many file-extensions.</p>\n\n<p><em>Jonathan del Strother</em></p>\n"
  },
  {
    "message": "*   Respect `html_options[:form]` when `collection_checkboxes` generates the\n    hidden `<input>`.\n\n    *Riccardo Odone*",
    "project": "actionview",
    "date_merged": 1736352191000,
    "author": "3v0k4",
    "sha": "d4702f99e69e0c327419e7791dce5b969e361d89",
    "pr": "51746",
    "merge_sha": "f978e1dc7ca5bc570a21f8007e06a3a57ca93566",
    "html": "<p>Respect <code>html_options[:form]</code> when <code>collection_checkboxes</code> generates the<br />\nhidden <code>&lt;input&gt;</code>.</p>\n\n<p><em>Riccardo Odone</em></p>\n"
  },
  {
    "message": "*   Layouts have access to local variables passed to `render`.\n\n    This fixes #31680 which was a regression in Rails 5.1.\n\n    *Mike Dalessio*",
    "project": "actionview",
    "date_merged": 1736197671000,
    "author": "Mike Dalessio",
    "sha": "b35a9b6fc63246adbe98d141997f37434ad037ad",
    "pr": "54020",
    "merge_sha": "593d9d90972df11aea1a1d7bb8a5f5f84a1d1f27",
    "html": "<p>Layouts have access to local variables passed to <code>render</code>.</p>\n\n<p>This fixes #31680 which was a regression in Rails 5.1.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Argument errors related to strict locals in templates now raise an\n    `ActionView::StrictLocalsError`, and all other argument errors are reraised as-is.\n\n    Previously, any `ArgumentError` raised during template rendering was swallowed during strict\n    local error handling, so that an `ArgumentError` unrelated to strict locals (e.g., a helper\n    method invoked with incorrect arguments) would be replaced by a similar `ArgumentError` with an\n    unrelated backtrace, making it difficult to debug templates.\n\n    Now, any `ArgumentError` unrelated to strict locals is reraised, preserving the original\n    backtrace for developers.\n\n    Also note that `ActionView::StrictLocalsError` is a subclass of `ArgumentError`, so any existing\n    code that rescues `ArgumentError` will continue to work.\n\n    Fixes #52227.\n\n    *Mike Dalessio*",
    "project": "actionview",
    "date_merged": 1736195112000,
    "author": "Mike Dalessio",
    "sha": "c868503d313873edcd262c4d605c06d2d1ed703a",
    "pr": "54133",
    "merge_sha": "bc601a9ffe4d48045b9bfeec23e9e579a5709c7c",
    "html": "<p>Argument errors related to strict locals in templates now raise an<br />\n<code>ActionView::StrictLocalsError</code>, and all other argument errors are reraised as-is.</p>\n\n<p>Previously, any <code>ArgumentError</code> raised during template rendering was swallowed during strict<br />\nlocal error handling, so that an <code>ArgumentError</code> unrelated to strict locals (e.g., a helper<br />\nmethod invoked with incorrect arguments) would be replaced by a similar <code>ArgumentError</code> with an<br />\nunrelated backtrace, making it difficult to debug templates.</p>\n\n<p>Now, any <code>ArgumentError</code> unrelated to strict locals is reraised, preserving the original<br />\nbacktrace for developers.</p>\n\n<p>Also note that <code>ActionView::StrictLocalsError</code> is a subclass of <code>ArgumentError</code>, so any existing<br />\ncode that rescues <code>ArgumentError</code> will continue to work.</p>\n\n<p>Fixes #52227.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Improve error highlighting of multi-line methods in ERB templates or\n    templates where the error occurs within a do-end block.\n\n    *Martin Emde*",
    "project": "actionview",
    "date_merged": 1732819839000,
    "author": "Martin Emde",
    "sha": "a74d26378b665bf1a1a6c125f878000251102dbb",
    "pr": "53763",
    "merge_sha": "a87bbdf3a716ef7987d0738afd8426ffa6dae2ec",
    "html": "<p>Improve error highlighting of multi-line methods in ERB templates or<br />\ntemplates where the error occurs within a do-end block.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Fix a crash in ERB template error highlighting when the error occurs on a\n    line in the compiled template that is past the end of the source template.\n\n    *Martin Emde*",
    "project": "actionview",
    "date_merged": 1732254580000,
    "author": "Martin Emde",
    "sha": "5857b8f83ca51a38151bb107a03684320505421d",
    "pr": "53696",
    "merge_sha": "8cab71cd0441043ba1c3c201ef8b8282d6f13b63",
    "html": "<p>Fix a crash in ERB template error highlighting when the error occurs on a<br />\nline in the compiled template that is past the end of the source template.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Improve reliability of ERB template error highlighting.\n    Fix infinite loops and crashes in highlighting and\n    improve tolerance for alternate ERB handlers.\n\n    *Martin Emde*",
    "project": "actionview",
    "date_merged": 1732218987000,
    "author": "Martin Emde",
    "sha": "aaebc8635123537f60db62763e6d80489098060d",
    "pr": "53657",
    "merge_sha": "9add4d9786266cbebcc44c07963ceb589de9ce79",
    "html": "<p>Improve reliability of ERB template error highlighting.<br />\nFix infinite loops and crashes in highlighting and<br />\nimprove tolerance for alternate ERB handlers.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Allow `hidden_field` and `hidden_field_tag` to accept a custom autocomplete value.\n\n    *brendon*",
    "project": "actionview",
    "date_merged": 1731670127000,
    "author": "Brendon Muir",
    "sha": "09daec64ac5189799718d8805311ac1458021910",
    "pr": "53512",
    "merge_sha": "e5ad9e789966a2743da8f81b6ed5e80f2575a8d1",
    "html": "<p>Allow <code>hidden_field</code> and <code>hidden_field_tag</code> to accept a custom autocomplete value.</p>\n\n<p><em>brendon</em></p>\n"
  },
  {
    "message": "*   Add a new configuration `content_security_policy_nonce_auto` for automatically adding a nonce to the tags affected by the directives specified by the `content_security_policy_nonce_directives` configuration option.\n\n    *francktrouillez*",
    "project": "actionview",
    "date_merged": 1741086415000,
    "author": "Franck TROUILLEZ",
    "sha": "c7162d640b4e0d1031939496f86d043af38a7a03",
    "pr": "53835",
    "merge_sha": "7a031e38921bac41a6a97bbba861b406caebe164",
    "html": "<p>Add a new configuration <code>content_security_policy_nonce_auto</code> for automatically adding a nonce to the tags affected by the directives specified by the <code>content_security_policy_nonce_directives</code> configuration option.</p>\n\n<p><em>francktrouillez</em></p>\n"
  },
  {
    "message": "*   Add RuboCop cache restoration to RuboCop job in GitHub Actions workflow templates.\n\n    *Lovro Bikić*",
    "project": "railties",
    "date_merged": 1741958225000,
    "author": "Lovro Bikic",
    "sha": "ceb06782622b3dcaaf9bd0e95fa188f4d20f7949",
    "pr": "54754",
    "merge_sha": "951ea8f75d9bf6d2999df2f0497347976dce9476",
    "html": "<p>Add RuboCop cache restoration to RuboCop job in GitHub Actions workflow templates.</p>\n\n<p><em>Lovro Bikić</em></p>\n"
  },
  {
    "message": "*   Skip generating mailer-related files in authentication generator if the application does\n    not use ActionMailer\n\n    *Rami Massoud*",
    "project": "railties",
    "date_merged": 1741721225000,
    "author": "Rami Massoud",
    "sha": "e87af0f3235ca555f7864de9bb44da1d464d012d",
    "pr": "54686",
    "merge_sha": "af7ed3cae208d777fe993e37f7502f7ba1058dae",
    "html": "<p>Skip generating mailer-related files in authentication generator if the application does<br />\nnot use ActionMailer</p>\n\n<p><em>Rami Massoud</em></p>\n"
  },
  {
    "message": "*   Introduce `bin/ci` for running your tests, style checks, and security audits locally or in the cloud.\n\n    The specific steps are defined by a new DSL in `config/ci.rb`.\n\n    ```ruby\n    ActiveSupport::ContinuousIntegration.run do\n      step \"Setup\", \"bin/setup --skip-server\"\n      step \"Style: Ruby\", \"bin/rubocop\"\n      step \"Security: Gem audit\", \"bin/bundler-audit\"\n      step \"Tests: Rails\", \"bin/rails test test:system\"\n    end\n    ```\n\n    Optionally use [gh-signoff](https://github.com/basecamp/gh-signoff) to\n    set a green PR status - ready for merge.\n\n    *Jeremy Daer*, *DHH*",
    "project": "railties",
    "date_merged": 1741515059000,
    "author": "Jeremy Daer",
    "sha": "bcd5c93609c5854399dfb960b3666d318f469eb8",
    "pr": "54693",
    "merge_sha": "23956c7f94dffbddf257c0abb93231eb2be69d5e",
    "html": "<p>Introduce <code>bin/ci</code> for running your tests, style checks, and security audits locally or in the cloud.</p>\n\n<p>The specific steps are defined by a new DSL in <code>config/ci.rb</code>.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">ContinuousIntegration</span><span class=\"p\">.</span><span class=\"nf\">run</span> <span class=\"k\">do</span>\n  <span class=\"n\">step</span> <span class=\"s2\">\"Setup\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bin/setup --skip-server\"</span>\n  <span class=\"n\">step</span> <span class=\"s2\">\"Style: Ruby\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bin/rubocop\"</span>\n  <span class=\"n\">step</span> <span class=\"s2\">\"Security: Gem audit\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bin/bundler-audit\"</span>\n  <span class=\"n\">step</span> <span class=\"s2\">\"Tests: Rails\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bin/rails test test:system\"</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p>Optionally use <a href=\"https://github.com/basecamp/gh-signoff\">gh-signoff</a> to<br />\nset a green PR status - ready for merge.</p>\n\n<p><em>Jeremy Daer</em>, <em>DHH</em></p>\n"
  },
  {
    "message": "*   Generate session controller tests when running the authentication generator.\n\n    *Jerome Dalbert*",
    "project": "railties",
    "date_merged": 1741387412000,
    "author": "Jerome Dalbert",
    "sha": "1dba10c7fb53af9dcebd3451cf121967960144b3",
    "pr": "53726",
    "merge_sha": "ba6f20aa62d3456e06cee4621718066e57337aab",
    "html": "<p>Generate session controller tests when running the authentication generator.</p>\n\n<p><em>Jerome Dalbert</em></p>\n"
  },
  {
    "message": "*   Add bin/bundler-audit and config/bundler-audit.yml for discovering and managing known security problems with app gems.\n\n    *DHH*",
    "project": "railties",
    "date_merged": 1741266426000,
    "author": "David Heinemeier Hansson",
    "sha": "bdaab704416e3df86a9d4e86970fc45e6d79f065",
    "pr": "54695",
    "merge_sha": "c36a258f5cb1656903dcf66087cba2a768cf0b0c",
    "html": "<p>Add bin/bundler-audit and config/bundler-audit.yml for discovering and managing known security problems with app gems.</p>\n\n<p><em>DHH</em></p>\n"
  },
  {
    "message": "*   Rails no longer generates a `bin/bundle` binstub when creating new applications.\n\n    The `bin/bundle` binstub used to help activate the right version of bundler.\n    This is no longer necessary as this mechanism is now part of Rubygem itself.\n\n    *Edouard Chin*",
    "project": "railties",
    "date_merged": 1741151035000,
    "author": "Edouard CHIN",
    "sha": "7549ba77254f038b1ca6304a0be6cbda8e2a09c4",
    "pr": "54687",
    "merge_sha": "7b8ea0bb5c04f7de73661162a71de38f7843e29a",
    "html": "<p>Rails no longer generates a <code>bin/bundle</code> binstub when creating new applications.</p>\n\n<p>The <code>bin/bundle</code> binstub used to help activate the right version of bundler.<br />\nThis is no longer necessary as this mechanism is now part of Rubygem itself.</p>\n\n<p><em>Edouard Chin</em></p>\n"
  },
  {
    "message": "*   Add a `SessionTestHelper` module with `sign_in_as(user)` and `sign_out` test helpers when\n    running `rails g authentication`. Simplifies authentication in integration tests.\n\n    *Bijan Rahnema*",
    "project": "railties",
    "date_merged": 1740732368000,
    "author": "Bijan Rahnema",
    "sha": "800976975253be2912d09a80757ee70a2bb1e984",
    "pr": "53708",
    "merge_sha": "271dbd5d5c0bf62c972b7dd4891c6410ca87a22d",
    "html": "<p>Add a <code>SessionTestHelper</code> module with <code>sign_in_as(user)</code> and <code>sign_out</code> test helpers when<br />\nrunning <code>rails g authentication</code>. Simplifies authentication in integration tests.</p>\n\n<p><em>Bijan Rahnema</em></p>\n"
  },
  {
    "message": "*   Rate limit password resets in authentication generator\n\n    This helps mitigate abuse from attackers spamming the password reset form.\n\n    *Chris Oliver*",
    "project": "railties",
    "date_merged": 1738836333000,
    "author": "Chris Oliver",
    "sha": "92533b1569ba710e166fe6bf2a3249d115a74ad6",
    "pr": "54442",
    "merge_sha": "4e5a13a55b5960c9a35afdcecd1120bc926d377c",
    "html": "<p>Rate limit password resets in authentication generator</p>\n\n<p>This helps mitigate abuse from attackers spamming the password reset form.</p>\n\n<p><em>Chris Oliver</em></p>\n"
  },
  {
    "message": "*   Update `rails new --minimal` option\n\n    Extend the `--minimal` flag to exclude recently added features:\n    `skip_brakeman`, `skip_ci`, `skip_docker`, `skip_kamal`, `skip_rubocop`, `skip_solid` and `skip_thruster`.\n\n    *eelcoj*",
    "project": "railties",
    "date_merged": 1737751723000,
    "author": "eelco",
    "sha": "dad07631d99c96f015162d3cab83c41111adf401",
    "pr": "54313",
    "merge_sha": "cd171d69fa03e0a09133089eca672831d447d02a",
    "html": "<p>Update <code>rails new --minimal</code> option</p>\n\n<p>Extend the <code>--minimal</code> flag to exclude recently added features:<br />\n<code>skip_brakeman</code>, <code>skip_ci</code>, <code>skip_docker</code>, <code>skip_kamal</code>, <code>skip_rubocop</code>, <code>skip_solid</code> and <code>skip_thruster</code>.</p>\n\n<p><em>eelcoj</em></p>\n"
  },
  {
    "message": "*   Add `application-name` metadata to application layout\n\n    The following metatag will be added to `app/views/layouts/application.html.erb`\n\n    ```html\n    <meta name=\"application-name\" content=\"Name of Rails Application\">\n    ```\n\n    *Steve Polito*",
    "project": "railties",
    "date_merged": 1737148063000,
    "author": "Steve Polito",
    "sha": "9144324cb92da6a461be40fc02a532aef1b29194",
    "pr": "54257",
    "merge_sha": "abb7035e08c07bb4e2941c1c27003609ce81e77b",
    "html": "<p>Add <code>application-name</code> metadata to application layout</p>\n\n<p>The following metatag will be added to <code>app/views/layouts/application.html.erb</code></p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"application-name\"</span> <span class=\"na\">content=</span><span class=\"s\">\"Name of Rails Application\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p><em>Steve Polito</em></p>\n"
  },
  {
    "message": "*   Use `secret_key_base` from ENV or credentials when present locally.\n\n    When ENV[\"SECRET_KEY_BASE\"] or\n    `Rails.application.credentials.secret_key_base` is set for test or\n    development, it is used for the `Rails.config.secret_key_base`,\n    instead of generating a `tmp/local_secret.txt` file.\n\n    *Petrik de Heus*",
    "project": "railties",
    "date_merged": 1737144185000,
    "author": "Petrik",
    "sha": "8c5978c886d1511aecfa2f029478a03c91e7db75",
    "pr": "53705",
    "merge_sha": "4f2b9fe06a7ca5c44aab7abbab0353ed6d013d05",
    "html": "<p>Use <code>secret_key_base</code> from ENV or credentials when present locally.</p>\n\n<p>When ENV[“SECRET_KEY_BASE”] or<br />\n<code>Rails.application.credentials.secret_key_base</code> is set for test or<br />\ndevelopment, it is used for the <code>Rails.config.secret_key_base</code>,<br />\ninstead of generating a <code>tmp/local_secret.txt</code> file.</p>\n\n<p><em>Petrik de Heus</em></p>\n"
  },
  {
    "message": "*   Introduce `RAILS_MASTER_KEY` placeholder in generated ci.yml files\n\n    *Steve Polito*",
    "project": "railties",
    "date_merged": 1736274652000,
    "author": "Steve Polito",
    "sha": "f0f0a818ad34e9ab930db8981b03d65708e2659d",
    "pr": "52230",
    "merge_sha": "1914a7437270f1e74d31494675c9fddf244a7cf5",
    "html": "<p>Introduce <code>RAILS_MASTER_KEY</code> placeholder in generated ci.yml files</p>\n\n<p><em>Steve Polito</em></p>\n"
  },
  {
    "message": "*   Colorize the Rails console prompt even on non standard environments.\n\n    *Lorenzo Zabot*",
    "project": "railties",
    "date_merged": 1736267051000,
    "author": "Lorenzo Zabot",
    "sha": "b097cfbbb9c5c31b0ede2b8caae28dabf7aa9850",
    "pr": "53027",
    "merge_sha": "c8335e118ba14562d4755ba2dd28171996fea297",
    "html": "<p>Colorize the Rails console prompt even on non standard environments.</p>\n\n<p><em>Lorenzo Zabot</em></p>\n"
  },
  {
    "message": "*   Don't enable YJIT in development and test environments\n\n    Development and test environments tend to reload code and redefine methods (e.g. mocking),\n    hence YJIT isn't generally faster in these environments.\n\n    *Ali Ismayilov*, *Jean Boussier*",
    "project": "railties",
    "date_merged": 1732617959000,
    "author": "Ali Ismayilov",
    "sha": "76e2b7e529e6c8cc42de00c94408d008655385bb",
    "pr": "53746",
    "merge_sha": "723ca0c0a757e27ab23e60cd65767606b7f6c202",
    "html": "<p>Don’t enable YJIT in development and test environments</p>\n\n<p>Development and test environments tend to reload code and redefine methods (e.g. mocking),<br />\nhence YJIT isn’t generally faster in these environments.</p>\n\n<p><em>Ali Ismayilov</em>, <em>Jean Boussier</em></p>\n"
  },
  {
    "message": "*   Only include PermissionsPolicy::Middleware if policy is configured.\n\n    *Petrik de Heus*",
    "project": "railties",
    "date_merged": 1731706201000,
    "author": "Petrik",
    "sha": "987977c2809e57dc7f4d6e90d6aaa25e6a52f927",
    "pr": "53621",
    "merge_sha": "5a112f85638b75f2c461c2802ce1224235c910b7",
    "html": "<p>Only include PermissionsPolicy::Middleware if policy is configured.</p>\n\n<p><em>Petrik de Heus</em></p>\n"
  },
  {
    "message": "*   In the Active Job bug report template set the queue adapter to the\n    test adapter so that `assert_enqueued_with` can pass.\n\n    *Andrew White*",
    "project": "guides",
    "date_merged": 1734279797000,
    "author": "Andrew White",
    "sha": "8e0a3914cab6b564d7dbcbfec35184c3132a7116",
    "pr": "53963",
    "merge_sha": "92de92ae375657785b31756cdf9c38cfe0e8db49",
    "html": "<p>In the Active Job bug report template set the queue adapter to the<br />\ntest adapter so that <code>assert_enqueued_with</code> can pass.</p>\n\n<p><em>Andrew White</em></p>\n"
  },
  {
    "message": "*   Ensure all bug report templates set `config.secret_key_base` to avoid\n    generation of `tmp/local_secret.txt` files when running the report template.\n\n    *Andrew White*",
    "project": "guides",
    "date_merged": 1734279797000,
    "author": "Andrew White",
    "sha": "f17f2d1decf460033e46ba9c50a4924e9290a86f",
    "pr": "53963",
    "merge_sha": "92de92ae375657785b31756cdf9c38cfe0e8db49",
    "html": "<p>Ensure all bug report templates set <code>config.secret_key_base</code> to avoid<br />\ngeneration of <code>tmp/local_secret.txt</code> files when running the report template.</p>\n\n<p><em>Andrew White</em></p>\n"
  },
  {
    "message": "*   Include cookie name when calculating maximum allowed size.\n\n    *Hartley McGuire*",
    "project": "actionpack",
    "date_merged": 1743492989000,
    "author": "Hartley McGuire",
    "sha": "69a1e070c84ad63bd676f95021eca785e0502f80",
    "pr": "54843",
    "merge_sha": "a77a35872c159374e376c789ab2b4ba9f44a7318",
    "html": "<p>Include cookie name when calculating maximum allowed size.</p>\n\n<p><em>Hartley McGuire</em></p>\n"
  },
  {
    "message": "*   Implement `must-understand` directive according to RFC 9111.\n\n    The `must-understand` directive indicates that a cache must understand the semantics of the response status code, or discard the response. This directive is enforced to be used only with `no-store` to ensure proper cache behavior.\n\n    ```ruby\n    class ArticlesController < ApplicationController\n      def show\n        @article = Article.find(params[:id])\n\n        if @article.special_format?\n          must_understand\n          render status: 203 # Non-Authoritative Information\n        else\n          fresh_when @article\n        end\n      end\n    end\n    ```\n\n    *heka1024*",
    "project": "actionpack",
    "date_merged": 1743408334000,
    "author": "heka1024",
    "sha": "245234dd84e692414e797f9da2c901fdb5ff0db6",
    "pr": "54833",
    "merge_sha": "1c094d762d25805cc2d110ee2f7b54b33352e293",
    "html": "<p>Implement <code>must-understand</code> directive according to RFC 9111.</p>\n\n<p>The <code>must-understand</code> directive indicates that a cache must understand the semantics of the response status code, or discard the response. This directive is enforced to be used only with <code>no-store</code> to ensure proper cache behavior.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">ArticlesController</span> <span class=\"o\">&lt;</span> <span class=\"no\">ApplicationController</span>\n  <span class=\"k\">def</span> <span class=\"nf\">show</span>\n    <span class=\"vi\">@article</span> <span class=\"o\">=</span> <span class=\"no\">Article</span><span class=\"p\">.</span><span class=\"nf\">find</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"ss\">:id</span><span class=\"p\">])</span>\n\n    <span class=\"k\">if</span> <span class=\"vi\">@article</span><span class=\"p\">.</span><span class=\"nf\">special_format?</span>\n      <span class=\"n\">must_understand</span>\n      <span class=\"n\">render</span> <span class=\"ss\">status: </span><span class=\"mi\">203</span> <span class=\"c1\"># Non-Authoritative Information</span>\n    <span class=\"k\">else</span>\n      <span class=\"n\">fresh_when</span> <span class=\"vi\">@article</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>heka1024</em></p>\n"
  },
  {
    "message": "*   The JSON renderer doesn't escape HTML entities or Unicode line separators anymore.\n\n    Using `render json:` will no longer escape `<`, `>`, `&`, `U+2028` and `U+2029` characters that can cause errors\n    when the resulting JSON is embedded in JavaScript, or vulnerabilities when the resulting JSON is embedded in HTML.\n\n    Since the renderer is used to return a JSON document as `application/json`, it's typically not necessary to escape\n    those characters, and it improves performance.\n\n    Escaping will still occur when the `:callback` option is set, since the JSON is used as JavaScript code in this\n    situation (JSONP).\n\n    You can use the `:escape` option or set `config.action_controller.escape_json_responses` to `true` to restore the\n    escaping behavior.\n\n    ```ruby\n    class PostsController < ApplicationController\n      def index\n        render json: Post.last(30), escape: true\n      end\n    end\n    ```\n\n    *Étienne Barrié*, *Jean Boussier*",
    "project": "actionpack",
    "date_merged": 1743065459000,
    "author": "Étienne Barrié",
    "sha": "f0b8238f60d084c0ed643ecfba382ec97b5eedf2",
    "pr": "54643",
    "merge_sha": "d61a69c629e256fd57b0b40177db885f187d9208",
    "html": "<p>The JSON renderer doesn’t escape HTML entities or Unicode line separators anymore.</p>\n\n<p>Using <code>render json:</code> will no longer escape <code>&lt;</code>, <code>&gt;</code>, <code>&amp;</code>, <code>U+2028</code> and <code>U+2029</code> characters that can cause errors<br />\nwhen the resulting JSON is embedded in JavaScript, or vulnerabilities when the resulting JSON is embedded in HTML.</p>\n\n<p>Since the renderer is used to return a JSON document as <code>application/json</code>, it’s typically not necessary to escape<br />\nthose characters, and it improves performance.</p>\n\n<p>Escaping will still occur when the <code>:callback</code> option is set, since the JSON is used as JavaScript code in this<br />\nsituation (JSONP).</p>\n\n<p>You can use the <code>:escape</code> option or set <code>config.action_controller.escape_json_responses</code> to <code>true</code> to restore the<br />\nescaping behavior.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">PostsController</span> <span class=\"o\">&lt;</span> <span class=\"no\">ApplicationController</span>\n  <span class=\"k\">def</span> <span class=\"nf\">index</span>\n    <span class=\"n\">render</span> <span class=\"ss\">json: </span><span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">last</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">),</span> <span class=\"ss\">escape: </span><span class=\"kp\">true</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Étienne Barrié</em>, <em>Jean Boussier</em></p>\n"
  },
  {
    "message": "*   Load lazy route sets before inserting test routes\n\n    Without loading lazy route sets early, we miss `after_routes_loaded` callbacks, or risk\n    invoking them with the test routes instead of the real ones if another load is triggered by an engine.\n\n    *Gannon McGibbon*",
    "project": "actionpack",
    "date_merged": 1742316034000,
    "author": "Gannon McGibbon",
    "sha": "4c629b67deb6b6f184ba301e37045950df383a64",
    "pr": "54777",
    "merge_sha": "e9d7ca5e0b834ff2ce3d43965deac670ff8ac790",
    "html": "<p>Load lazy route sets before inserting test routes</p>\n\n<p>Without loading lazy route sets early, we miss <code>after_routes_loaded</code> callbacks, or risk<br />\ninvoking them with the test routes instead of the real ones if another load is triggered by an engine.</p>\n\n<p><em>Gannon McGibbon</em></p>\n"
  },
  {
    "message": "*   Raise `AbstractController::DoubleRenderError` if `head` is called after rendering.\n\n    After this change, invoking `head` will lead to an error if response body is already set:\n\n    ```ruby\n    class PostController < ApplicationController\n      def index\n        render locals: {}\n        head :ok\n      end\n    end\n    ```\n\n    *Iaroslav Kurbatov*",
    "project": "actionpack",
    "date_merged": 1741387779000,
    "author": "viralpraxis",
    "sha": "1e3968e673b5ff94ea5976f2421ecc977a813355",
    "pr": "54655",
    "merge_sha": "2470d5b6d326b771ce9bd8d3e7b2728e5603e55c",
    "html": "<p>Raise <code>AbstractController::DoubleRenderError</code> if <code>head</code> is called after rendering.</p>\n\n<p>After this change, invoking <code>head</code> will lead to an error if response body is already set:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">PostController</span> <span class=\"o\">&lt;</span> <span class=\"no\">ApplicationController</span>\n  <span class=\"k\">def</span> <span class=\"nf\">index</span>\n    <span class=\"n\">render</span> <span class=\"ss\">locals: </span><span class=\"p\">{}</span>\n    <span class=\"n\">head</span> <span class=\"ss\">:ok</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Iaroslav Kurbatov</em></p>\n"
  },
  {
    "message": "*   The Cookie Serializer can now serialize an Active Support SafeBuffer when using message pack.\n\n    Such code would previously produce an error if an application was using messagepack as its cookie serializer.\n\n    ```ruby\n    class PostController < ApplicationController\n      def index\n        flash.notice = t(:hello_html) # This would try to serialize a SafeBuffer, which was not possible.\n      end\n    end\n    ```\n\n    *Edouard Chin*",
    "project": "actionpack",
    "date_merged": 1740216705000,
    "author": "Edouard CHIN",
    "sha": "ae3eecb341b41724d69faed9b0f8f4f2fc624f7b",
    "pr": "54584",
    "merge_sha": "61bd6a7dd1d01538080e35fb594160fe8dcf2539",
    "html": "<p>The Cookie Serializer can now serialize an Active Support SafeBuffer when using message pack.</p>\n\n<p>Such code would previously produce an error if an application was using messagepack as its cookie serializer.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">PostController</span> <span class=\"o\">&lt;</span> <span class=\"no\">ApplicationController</span>\n  <span class=\"k\">def</span> <span class=\"nf\">index</span>\n    <span class=\"n\">flash</span><span class=\"p\">.</span><span class=\"nf\">notice</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"p\">(</span><span class=\"ss\">:hello_html</span><span class=\"p\">)</span> <span class=\"c1\"># This would try to serialize a SafeBuffer, which was not possible.</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Edouard Chin</em></p>\n"
  },
  {
    "message": "*   Fix `Rails.application.reload_routes!` from clearing almost all routes.\n\n    When calling `Rails.application.reload_routes!` inside a middleware of\n    a Rake task, it was possible under certain conditions that all routes would be cleared.\n    If ran inside a middleware, this would result in getting a 404 on most page you visit.\n    This issue was only happening in development.\n\n    *Edouard Chin*",
    "project": "actionpack",
    "date_merged": 1738008944000,
    "author": "Edouard CHIN",
    "sha": "b40d92eca1f3a07f72a3068b3eebdd41bbd670a1",
    "pr": "54306",
    "merge_sha": "d804d25f332da07570de84dd271a4db3c20e5571",
    "html": "<p>Fix <code>Rails.application.reload_routes!</code> from clearing almost all routes.</p>\n\n<p>When calling <code>Rails.application.reload_routes!</code> inside a middleware of<br />\na Rake task, it was possible under certain conditions that all routes would be cleared.<br />\nIf ran inside a middleware, this would result in getting a 404 on most page you visit.<br />\nThis issue was only happening in development.</p>\n\n<p><em>Edouard Chin</em></p>\n"
  },
  {
    "message": "*   Add resource name to the `ArgumentError` that's raised when invalid `:only` or `:except` options are given to `#resource` or `#resources`\n\n    This makes it easier to locate the source of the problem, especially for routes drawn by gems.\n\n    Before:\n    ```\n    :only and :except must include only [:index, :create, :new, :show, :update, :destroy, :edit], but also included [:foo, :bar]\n    ```\n\n    After:\n    ```\n    Route `resources :products` - :only and :except must include only [:index, :create, :new, :show, :update, :destroy, :edit], but also included [:foo, :bar]\n    ```\n\n    *Jeremy Green*",
    "project": "actionpack",
    "date_merged": 1736371445000,
    "author": "Jeremy Green",
    "sha": "a4305e17773939c21621754112a382b0a4b83ad6",
    "pr": "54163",
    "merge_sha": "1387af8e5f0b3e89d0c448af2f852b96b1f0f6fa",
    "html": "<p>Add resource name to the <code>ArgumentError</code> that’s raised when invalid <code>:only</code> or <code>:except</code> options are given to <code>#resource</code> or <code>#resources</code></p>\n\n<p>This makes it easier to locate the source of the problem, especially for routes drawn by gems.</p>\n\n<p>Before:</p>\n<pre><code>:only and :except must include only [:index, :create, :new, :show, :update, :destroy, :edit], but also included [:foo, :bar]\n</code></pre>\n\n<p>After:</p>\n<pre><code>Route `resources :products` - :only and :except must include only [:index, :create, :new, :show, :update, :destroy, :edit], but also included [:foo, :bar]\n</code></pre>\n\n<p><em>Jeremy Green</em></p>\n"
  },
  {
    "message": "*   Add `check_collisions` option to `ActionDispatch::Session::CacheStore`.\n\n    Newly generated session ids use 128 bits of randomness, which is more than\n    enough to ensure collisions can't happen, but if you need to harden sessions\n    even more, you can enable this option to check in the session store that the id\n    is indeed free you can enable that option. This however incurs an extra write\n    on session creation.\n\n    *Shia*",
    "project": "actionpack",
    "date_merged": 1734167903000,
    "author": "Shia",
    "sha": "4f63fde5de0c46acaad8d5119ecb8e44ae69ff4f",
    "pr": "53918",
    "merge_sha": "6a88a104909660f91a0c6a62ca23e2a8de667477",
    "html": "<p>Add <code>check_collisions</code> option to <code>ActionDispatch::Session::CacheStore</code>.</p>\n\n<p>Newly generated session ids use 128 bits of randomness, which is more than<br />\nenough to ensure collisions can’t happen, but if you need to harden sessions<br />\neven more, you can enable this option to check in the session store that the id<br />\nis indeed free you can enable that option. This however incurs an extra write<br />\non session creation.</p>\n\n<p><em>Shia</em></p>\n"
  },
  {
    "message": "*   In ExceptionWrapper, match backtrace lines with built templates more often,\n    allowing improved highlighting of errors within do-end blocks in templates.\n    Fix for Ruby 3.4 to match new method labels in backtrace.\n\n    *Martin Emde*",
    "project": "actionpack",
    "date_merged": 1732819839000,
    "author": "Martin Emde",
    "sha": "1f9295ed06a0e84a2561b8ae48a1baafb0981c62",
    "pr": "53763",
    "merge_sha": "a87bbdf3a716ef7987d0738afd8426ffa6dae2ec",
    "html": "<p>In ExceptionWrapper, match backtrace lines with built templates more often,<br />\nallowing improved highlighting of errors within do-end blocks in templates.<br />\nFix for Ruby 3.4 to match new method labels in backtrace.</p>\n\n<p><em>Martin Emde</em></p>\n"
  },
  {
    "message": "*   Allow setting content type with a symbol of the Mime type.\n\n    ```ruby\n    # Before\n    response.content_type = \"text/html\"\n\n    # After\n    response.content_type = :html\n    ```\n\n    *Petrik de Heus*",
    "project": "actionpack",
    "date_merged": 1731753392000,
    "author": "Petrik",
    "sha": "18cb9092526cfd2dd44b199b152c7f66ad1d2b50",
    "pr": "53236",
    "merge_sha": "ed72523a86fb6010e056667f294fee34ba276aed",
    "html": "<p>Allow setting content type with a symbol of the Mime type.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Before</span>\n<span class=\"n\">response</span><span class=\"p\">.</span><span class=\"nf\">content_type</span> <span class=\"o\">=</span> <span class=\"s2\">\"text/html\"</span>\n\n<span class=\"c1\"># After</span>\n<span class=\"n\">response</span><span class=\"p\">.</span><span class=\"nf\">content_type</span> <span class=\"o\">=</span> <span class=\"ss\">:html</span>\n</code></pre></div></div>\n\n<p><em>Petrik de Heus</em></p>\n"
  },
  {
    "message": "*   Encryption now supports `support_unencrypted_data: true` being set per-attribute.\n\n    Previously this only worked if `ActiveRecord::Encryption.config.support_unencrypted_data == true`.\n    Now, if the global config is turned off, you can still opt in for a specific attribute.\n\n    ```ruby\n    # ActiveRecord::Encryption.config.support_unencrypted_data = true\n    class User < ActiveRecord::Base\n      encrypts :name, support_unencrypted_data: false # only supports encrypted data\n      encrypts :email # supports encrypted or unencrypted data\n    end\n    ```\n\n    ```ruby\n    # ActiveRecord::Encryption.config.support_unencrypted_data = false\n    class User < ActiveRecord::Base\n      encrypts :name, support_unencrypted_data: true # supports encrypted or unencrypted data\n      encrypts :email  # only supports encrypted data\n    end\n    ```\n\n    *Alex Ghiculescu*",
    "project": "activerecord",
    "date_merged": 1744094399000,
    "author": "Alex Ghiculescu",
    "sha": "c3c33947160e473a3d41555f8cf3aee7f3a48c76",
    "pr": "51100",
    "merge_sha": null,
    "html": "<p>Encryption now supports <code>support_unencrypted_data: true</code> being set per-attribute.</p>\n\n<p>Previously this only worked if <code>ActiveRecord::Encryption.config.support_unencrypted_data == true</code>.<br />\nNow, if the global config is turned off, you can still opt in for a specific attribute.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># ActiveRecord::Encryption.config.support_unencrypted_data = true</span>\n<span class=\"k\">class</span> <span class=\"nc\">User</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">encrypts</span> <span class=\"ss\">:name</span><span class=\"p\">,</span> <span class=\"ss\">support_unencrypted_data: </span><span class=\"kp\">false</span> <span class=\"c1\"># only supports encrypted data</span>\n  <span class=\"n\">encrypts</span> <span class=\"ss\">:email</span> <span class=\"c1\"># supports encrypted or unencrypted data</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># ActiveRecord::Encryption.config.support_unencrypted_data = false</span>\n<span class=\"k\">class</span> <span class=\"nc\">User</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">encrypts</span> <span class=\"ss\">:name</span><span class=\"p\">,</span> <span class=\"ss\">support_unencrypted_data: </span><span class=\"kp\">true</span> <span class=\"c1\"># supports encrypted or unencrypted data</span>\n  <span class=\"n\">encrypts</span> <span class=\"ss\">:email</span>  <span class=\"c1\"># only supports encrypted data</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Alex Ghiculescu</em></p>\n"
  },
  {
    "message": "*   Model generator no longer needs a database connection to validate column types.\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1744011573000,
    "author": "Mike Dalessio",
    "sha": "f3b4cdb5f0326a142f19dfa3dc1e2cc294289e8d",
    "pr": "54875",
    "merge_sha": "c271686bcfbc312f5391204d331a6d3dd8214445",
    "html": "<p>Model generator no longer needs a database connection to validate column types.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Allow signed ID verifiers to be configurable via `Rails.application.message_verifiers`\n\n    Prior to this change, the primary way to configure signed ID verifiers was\n    to set `signed_id_verifier` on each model class:\n\n      ```ruby\n      Post.signed_id_verifier = ActiveSupport::MessageVerifier.new(...)\n      Comment.signed_id_verifier = ActiveSupport::MessageVerifier.new(...)\n      ```\n\n    And if the developer did not set `signed_id_verifier`, a verifier would be\n    instantiated with a secret derived from `secret_key_base` and the following\n    options:\n\n      ```ruby\n      { digest: \"SHA256\", serializer: JSON, url_safe: true }\n      ```\n\n    Thus it was cumbersome to rotate configuration for all verifiers.\n\n    This change defines a new Rails config: [`config.active_record.use_legacy_signed_id_verifier`][].\n    The default value is `:generate_and_verify`, which preserves the previous\n    behavior. However, when set to `:verify`, signed ID verifiers will use\n    configuration from `Rails.application.message_verifiers` (specifically,\n    `Rails.application.message_verifiers[\"active_record/signed_id\"]`) to\n    generate and verify signed IDs, but will also verify signed IDs using the\n    older configuration.\n\n    To avoid complication, the new behavior only applies when `signed_id_verifier_secret`\n    is not set on a model class or any of its ancestors. Additionally,\n    `signed_id_verifier_secret` is now deprecated. If you are currently setting\n    `signed_id_verifier_secret` on a model class, you can set `signed_id_verifier`\n    instead:\n\n      ```ruby\n      # BEFORE\n      Post.signed_id_verifier_secret = \"my secret\"\n\n      # AFTER\n      Post.signed_id_verifier = ActiveSupport::MessageVerifier.new(\"my secret\", digest: \"SHA256\", serializer: JSON, url_safe: true)\n      ```\n\n    To ease migration, `signed_id_verifier` has also been changed to behave as a\n    `class_attribute` (i.e. inheritable), but _only when `signed_id_verifier_secret`\n    is not set_:\n\n      ```ruby\n      # BEFORE\n      ActiveRecord::Base.signed_id_verifier = ActiveSupport::MessageVerifier.new(...)\n      Post.signed_id_verifier == ActiveRecord::Base.signed_id_verifier # => false\n\n      # AFTER\n      ActiveRecord::Base.signed_id_verifier = ActiveSupport::MessageVerifier.new(...)\n      Post.signed_id_verifier == ActiveRecord::Base.signed_id_verifier # => true\n\n      Post.signed_id_verifier_secret = \"my secret\" # => deprecation warning\n      Post.signed_id_verifier == ActiveRecord::Base.signed_id_verifier # => false\n      ```\n\n    Note, however, that it is recommended to eventually migrate from\n    model-specific verifiers to a unified configuration managed by\n    `Rails.application.message_verifiers`. `ActiveSupport::MessageVerifier#rotate`\n    can facilitate that transition. For example:\n\n      ```ruby\n      # BEFORE\n      # Generate and verify signed Post IDs using Post-specific configuration\n      Post.signed_id_verifier = ActiveSupport::MessageVerifier.new(\"post secret\", ...)\n\n      # AFTER\n      # Generate and verify signed Post IDs using the unified configuration\n      Post.signed_id_verifier = Post.signed_id_verifier.dup\n      # Fall back to Post-specific configuration when verifying signed IDs\n      Post.signed_id_verifier.rotate(\"post secret\", ...)\n      ```\n\n    [`config.active_record.use_legacy_signed_id_verifier`]: https://guides.rubyonrails.org/v8.1/configuring.html#config-active-record-use-legacy-signed-id-verifier\n\n    *Ali Sepehri*, *Jonathan Hefner*",
    "project": "activerecord",
    "date_merged": 1743961267000,
    "author": "Ali Sepehri",
    "sha": "e4218ff31b87faf73c967dc55c923d74636bf8de",
    "pr": "54422",
    "merge_sha": "7645f019b1de57ed087f8f44869a4e0ddad69026",
    "html": "<p>Allow signed ID verifiers to be configurable via <code>Rails.application.message_verifiers</code></p>\n\n<p>Prior to this change, the primary way to configure signed ID verifiers was<br />\nto set <code>signed_id_verifier</code> on each model class:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">=</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">MessageVerifier</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n  <span class=\"no\">Comment</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">=</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">MessageVerifier</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>And if the developer did not set <code>signed_id_verifier</code>, a verifier would be<br />\ninstantiated with a secret derived from <code>secret_key_base</code> and the following<br />\noptions:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"p\">{</span> <span class=\"ss\">digest: </span><span class=\"s2\">\"SHA256\"</span><span class=\"p\">,</span> <span class=\"ss\">serializer: </span><span class=\"no\">JSON</span><span class=\"p\">,</span> <span class=\"ss\">url_safe: </span><span class=\"kp\">true</span> <span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>Thus it was cumbersome to rotate configuration for all verifiers.</p>\n\n<p>This change defines a new Rails config: <a href=\"https://guides.rubyonrails.org/v8.1/configuring.html#config-active-record-use-legacy-signed-id-verifier\"><code>config.active_record.use_legacy_signed_id_verifier</code></a>.<br />\nThe default value is <code>:generate_and_verify</code>, which preserves the previous<br />\nbehavior. However, when set to <code>:verify</code>, signed ID verifiers will use<br />\nconfiguration from <code>Rails.application.message_verifiers</code> (specifically,<br />\n<code>Rails.application.message_verifiers[\"active_record/signed_id\"]</code>) to<br />\ngenerate and verify signed IDs, but will also verify signed IDs using the<br />\nolder configuration.</p>\n\n<p>To avoid complication, the new behavior only applies when <code>signed_id_verifier_secret</code><br />\nis not set on a model class or any of its ancestors. Additionally,<br />\n<code>signed_id_verifier_secret</code> is now deprecated. If you are currently setting<br />\n<code>signed_id_verifier_secret</code> on a model class, you can set <code>signed_id_verifier</code><br />\ninstead:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"c1\"># BEFORE</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier_secret</span> <span class=\"o\">=</span> <span class=\"s2\">\"my secret\"</span>\n\n  <span class=\"c1\"># AFTER</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">=</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">MessageVerifier</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"my secret\"</span><span class=\"p\">,</span> <span class=\"ss\">digest: </span><span class=\"s2\">\"SHA256\"</span><span class=\"p\">,</span> <span class=\"ss\">serializer: </span><span class=\"no\">JSON</span><span class=\"p\">,</span> <span class=\"ss\">url_safe: </span><span class=\"kp\">true</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>To ease migration, <code>signed_id_verifier</code> has also been changed to behave as a<br />\n<code>class_attribute</code> (i.e. inheritable), but <em>only when <code>signed_id_verifier_secret</code><br />\nis not set</em>:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"c1\"># BEFORE</span>\n  <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">=</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">MessageVerifier</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">==</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"c1\"># =&gt; false</span>\n\n  <span class=\"c1\"># AFTER</span>\n  <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">=</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">MessageVerifier</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">==</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"c1\"># =&gt; true</span>\n\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier_secret</span> <span class=\"o\">=</span> <span class=\"s2\">\"my secret\"</span> <span class=\"c1\"># =&gt; deprecation warning</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">==</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"c1\"># =&gt; false</span>\n</code></pre></div></div>\n\n<p>Note, however, that it is recommended to eventually migrate from<br />\nmodel-specific verifiers to a unified configuration managed by<br />\n<code>Rails.application.message_verifiers</code>. <code>ActiveSupport::MessageVerifier#rotate</code><br />\ncan facilitate that transition. For example:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"c1\"># BEFORE</span>\n  <span class=\"c1\"># Generate and verify signed Post IDs using Post-specific configuration</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">=</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">MessageVerifier</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"post secret\"</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n\n  <span class=\"c1\"># AFTER</span>\n  <span class=\"c1\"># Generate and verify signed Post IDs using the unified configuration</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span> <span class=\"o\">=</span> <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span><span class=\"p\">.</span><span class=\"nf\">dup</span>\n  <span class=\"c1\"># Fall back to Post-specific configuration when verifying signed IDs</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">signed_id_verifier</span><span class=\"p\">.</span><span class=\"nf\">rotate</span><span class=\"p\">(</span><span class=\"s2\">\"post secret\"</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><em>Ali Sepehri</em>, <em>Jonathan Hefner</em></p>\n"
  },
  {
    "message": "*   Prepend `extra_flags` in postgres' `structure_load`\n\n    When specifying `structure_load_flags` with a postgres adapter, the flags\n    were appended to the default flags, instead of prepended.\n    This caused issues with flags not being taken into account by postgres.\n\n    *Alice Loeser*",
    "project": "activerecord",
    "date_merged": 1743149246000,
    "author": "Alice Loeser",
    "sha": "6718aeb244b62bb8a369b8318f31a9469cd6aaf1",
    "pr": "54805",
    "merge_sha": "e2f36ff105602d365002a664a599bbbafd8241dc",
    "html": "<p>Prepend <code>extra_flags</code> in postgres’ <code>structure_load</code></p>\n\n<p>When specifying <code>structure_load_flags</code> with a postgres adapter, the flags<br />\nwere appended to the default flags, instead of prepended.<br />\nThis caused issues with flags not being taken into account by postgres.</p>\n\n<p><em>Alice Loeser</em></p>\n"
  },
  {
    "message": "*   Allow bypassing primary key/constraint addition in `implicit_order_column`\n\n    When specifying multiple columns in an array for `implicit_order_column`, adding\n    `nil` as the last element will prevent appending the primary key to order\n    conditions. This allows more precise control of indexes used by\n    generated queries. It should be noted that this feature does introduce the risk\n    of API misbehavior if the specified columns are not fully unique.\n\n    *Issy Long*",
    "project": "activerecord",
    "date_merged": 1741746751000,
    "author": "Issy Long",
    "sha": "c327b19b94a384b298d498fa19c93e68b3add7f9",
    "pr": "54679",
    "merge_sha": "a4065fb3686b219acc88a4a016d8f237e4cb5971",
    "html": "<p>Allow bypassing primary key/constraint addition in <code>implicit_order_column</code></p>\n\n<p>When specifying multiple columns in an array for <code>implicit_order_column</code>, adding<br />\n<code>nil</code> as the last element will prevent appending the primary key to order<br />\nconditions. This allows more precise control of indexes used by<br />\ngenerated queries. It should be noted that this feature does introduce the risk<br />\nof API misbehavior if the specified columns are not fully unique.</p>\n\n<p><em>Issy Long</em></p>\n"
  },
  {
    "message": "*   Allow setting the `schema_format` via database configuration.\n\n    ```\n    primary:\n      schema_format: ruby\n    ```\n\n    Useful for multi-database setups when apps require different formats per-database.\n\n    *T S Vallender*",
    "project": "activerecord",
    "date_merged": 1741195216000,
    "author": "eileencodes",
    "sha": "bd16ad7844076f0c662793d499ab741cf8b43781",
    "pr": "53666",
    "merge_sha": "c218fb6cd2bdd67771aac5bfce8097e43c05a26c",
    "html": "<p>Allow setting the <code>schema_format</code> via database configuration.</p>\n\n<pre><code>primary:\n  schema_format: ruby\n</code></pre>\n\n<p>Useful for multi-database setups when apps require different formats per-database.</p>\n\n<p><em>T S Vallender</em></p>\n"
  },
  {
    "message": "*   Support disabling indexes for MySQL v8.0.0+ and MariaDB v10.6.0+\n\n    MySQL 8.0.0 added an option to disable indexes from being used by the query\n    optimizer by making them \"invisible\". This allows the index to still be maintained\n    and updated but no queries will be permitted to use it. This can be useful for adding\n    new invisible indexes or making existing indexes invisible before dropping them\n    to ensure queries are not negatively affected.\n    See https://dev.mysql.com/blog-archive/mysql-8-0-invisible-indexes/ for more details.\n\n    MariaDB 10.6.0 also added support for this feature by allowing indexes to be \"ignored\"\n    in queries. See https://mariadb.com/kb/en/ignored-indexes/ for more details.\n\n    Active Record now supports this option for MySQL 8.0.0+ and MariaDB 10.6.0+ for\n    index creation and alteration where the new index option `enabled: true/false` can be\n    passed to column and index methods as below:\n\n    ```ruby\n    add_index :users, :email, enabled: false\n    enable_index :users, :email\n    add_column :users, :dob, :string, index: { enabled: false }\n\n    change_table :users do |t|\n      t.index :name, enabled: false\n      t.index :dob\n      t.disable_index :dob\n      t.column :username, :string, index: { enabled: false }\n      t.references :account, index: { enabled: false }\n    end\n\n    create_table :users do |t|\n      t.string :name, index: { enabled: false }\n      t.string :email\n      t.index :email, enabled: false\n    end\n    ```\n\n    *Merve Taner*",
    "project": "activerecord",
    "date_merged": 1740427962000,
    "author": "Merve Taner",
    "sha": "e614cf62ec31c9252eafe5c3ba22e25f2836d923",
    "pr": "54332",
    "merge_sha": "0702af7849d12fcb5ed19e1b6a2808c0579d6779",
    "html": "<p>Support disabling indexes for MySQL v8.0.0+ and MariaDB v10.6.0+</p>\n\n<p>MySQL 8.0.0 added an option to disable indexes from being used by the query<br />\noptimizer by making them “invisible”. This allows the index to still be maintained<br />\nand updated but no queries will be permitted to use it. This can be useful for adding<br />\nnew invisible indexes or making existing indexes invisible before dropping them<br />\nto ensure queries are not negatively affected.<br />\nSee https://dev.mysql.com/blog-archive/mysql-8-0-invisible-indexes/ for more details.</p>\n\n<p>MariaDB 10.6.0 also added support for this feature by allowing indexes to be “ignored”<br />\nin queries. See https://mariadb.com/kb/en/ignored-indexes/ for more details.</p>\n\n<p>Active Record now supports this option for MySQL 8.0.0+ and MariaDB 10.6.0+ for<br />\nindex creation and alteration where the new index option <code>enabled: true/false</code> can be<br />\npassed to column and index methods as below:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">add_index</span> <span class=\"ss\">:users</span><span class=\"p\">,</span> <span class=\"ss\">:email</span><span class=\"p\">,</span> <span class=\"ss\">enabled: </span><span class=\"kp\">false</span>\n<span class=\"n\">enable_index</span> <span class=\"ss\">:users</span><span class=\"p\">,</span> <span class=\"ss\">:email</span>\n<span class=\"n\">add_column</span> <span class=\"ss\">:users</span><span class=\"p\">,</span> <span class=\"ss\">:dob</span><span class=\"p\">,</span> <span class=\"ss\">:string</span><span class=\"p\">,</span> <span class=\"ss\">index: </span><span class=\"p\">{</span> <span class=\"ss\">enabled: </span><span class=\"kp\">false</span> <span class=\"p\">}</span>\n\n<span class=\"n\">change_table</span> <span class=\"ss\">:users</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">t</span><span class=\"o\">|</span>\n  <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"nf\">index</span> <span class=\"ss\">:name</span><span class=\"p\">,</span> <span class=\"ss\">enabled: </span><span class=\"kp\">false</span>\n  <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"nf\">index</span> <span class=\"ss\">:dob</span>\n  <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"nf\">disable_index</span> <span class=\"ss\">:dob</span>\n  <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"nf\">column</span> <span class=\"ss\">:username</span><span class=\"p\">,</span> <span class=\"ss\">:string</span><span class=\"p\">,</span> <span class=\"ss\">index: </span><span class=\"p\">{</span> <span class=\"ss\">enabled: </span><span class=\"kp\">false</span> <span class=\"p\">}</span>\n  <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"nf\">references</span> <span class=\"ss\">:account</span><span class=\"p\">,</span> <span class=\"ss\">index: </span><span class=\"p\">{</span> <span class=\"ss\">enabled: </span><span class=\"kp\">false</span> <span class=\"p\">}</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">create_table</span> <span class=\"ss\">:users</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">t</span><span class=\"o\">|</span>\n  <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"nf\">string</span> <span class=\"ss\">:name</span><span class=\"p\">,</span> <span class=\"ss\">index: </span><span class=\"p\">{</span> <span class=\"ss\">enabled: </span><span class=\"kp\">false</span> <span class=\"p\">}</span>\n  <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"nf\">string</span> <span class=\"ss\">:email</span>\n  <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"nf\">index</span> <span class=\"ss\">:email</span><span class=\"p\">,</span> <span class=\"ss\">enabled: </span><span class=\"kp\">false</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Merve Taner</em></p>\n"
  },
  {
    "message": "*   Respect `implicit_order_column` in `ActiveRecord::Relation#reverse_order`.\n\n    *Joshua Young*",
    "project": "activerecord",
    "date_merged": 1740402496000,
    "author": "Joshua Young",
    "sha": "e724ad0615ff6dc4d7f64e359eab8f3187deab3e",
    "pr": "54607",
    "merge_sha": "04775277406fe6bb26e7c8052d2459c568a780d8",
    "html": "<p>Respect <code>implicit_order_column</code> in <code>ActiveRecord::Relation#reverse_order</code>.</p>\n\n<p><em>Joshua Young</em></p>\n"
  },
  {
    "message": "*   Add column types to `ActiveRecord::Result` for SQLite3.\n\n    *Andrew Kane*",
    "project": "activerecord",
    "date_merged": 1740302063000,
    "author": "Andrew Kane",
    "sha": "6d9f72b2af680cf319d7b44c2359f0f0c12a562f",
    "pr": "54594",
    "merge_sha": "e36deb7c0527680a89782de624ee600ca8b9ae74",
    "html": "<p>Add column types to <code>ActiveRecord::Result</code> for SQLite3.</p>\n\n<p><em>Andrew Kane</em></p>\n"
  },
  {
    "message": "*   Raise `ActiveRecord::ReadOnlyError` when pessimistically locking with a readonly role.\n\n    *Joshua Young*",
    "project": "activerecord",
    "date_merged": 1740128305000,
    "author": "Joshua Young",
    "sha": "42e989154ddf80c1f0dcf21197f49650bb771dba",
    "pr": "53758",
    "merge_sha": "324fccf4f98f8c8b8583361edaa53301800e4c64",
    "html": "<p>Raise <code>ActiveRecord::ReadOnlyError</code> when pessimistically locking with a readonly role.</p>\n\n<p><em>Joshua Young</em></p>\n"
  },
  {
    "message": "*   Fix using the `SQLite3Adapter`'s `dbconsole` method outside of a Rails application.\n\n    *Hartley McGuire*",
    "project": "activerecord",
    "date_merged": 1739338683000,
    "author": "Hartley McGuire",
    "sha": "52f55ddd914b64cfc6221db3270c6755a1e21488",
    "pr": "54498",
    "merge_sha": "66a9322cdad99cdd5c61a73bdda6125e0e7dfa4a",
    "html": "<p>Fix using the <code>SQLite3Adapter</code>’s <code>dbconsole</code> method outside of a Rails application.</p>\n\n<p><em>Hartley McGuire</em></p>\n"
  },
  {
    "message": "*   Fix migrating multiple databases with `ActiveRecord::PendingMigration` action.\n\n    *Gannon McGibbon*",
    "project": "activerecord",
    "date_merged": 1738877392000,
    "author": "Gannon McGibbon",
    "sha": "3f177286a7fc385920da28bf9e8d9298f683bab2",
    "pr": "54456",
    "merge_sha": "730e815ccc65523c7fc012a2ce154e96d78d49d0",
    "html": "<p>Fix migrating multiple databases with <code>ActiveRecord::PendingMigration</code> action.</p>\n\n<p><em>Gannon McGibbon</em></p>\n"
  },
  {
    "message": "*   Enable automatically retrying idempotent association queries on connection\n    errors.\n\n    *Hartley McGuire*",
    "project": "activerecord",
    "date_merged": 1738872953000,
    "author": "Hartley McGuire",
    "sha": "4b8288e53ac5bf9eb4d25c2639ea14b3b7061281",
    "pr": "54436",
    "merge_sha": "2990ce3fd0a350a822e2f9631e06f217cb459b27",
    "html": "<p>Enable automatically retrying idempotent association queries on connection<br />\nerrors.</p>\n\n<p><em>Hartley McGuire</em></p>\n"
  },
  {
    "message": "*   Add `allow_retry` to `sql.active_record` instrumentation.\n\n    This enables identifying queries which queries are automatically retryable on connection errors.\n\n    *Hartley McGuire*",
    "project": "activerecord",
    "date_merged": 1738872102000,
    "author": "Hartley McGuire",
    "sha": "48ee7db3d1875bb337e8e0d47603d6b27bb092a8",
    "pr": "54454",
    "merge_sha": "fc01241bc0c9b0c6c23621531a657c4db68cf715",
    "html": "<p>Add <code>allow_retry</code> to <code>sql.active_record</code> instrumentation.</p>\n\n<p>This enables identifying queries which queries are automatically retryable on connection errors.</p>\n\n<p><em>Hartley McGuire</em></p>\n"
  },
  {
    "message": "*   Better support UPDATE with JOIN for Postgresql and SQLite3\n\n    Previously when generating update queries with one or more JOIN clauses,\n    Active Record would use a sub query which would prevent to reference the joined\n    tables in the `SET` clause, for instance:\n\n    ```ruby\n    Comment.joins(:post).update_all(\"title = posts.title\")\n    ```\n\n    This is now supported as long as the relation doesn't also use a `LIMIT`, `ORDER` or\n    `GROUP BY` clause. This was supported by the MySQL adapter for a long time.\n\n    *Jean Boussier*",
    "project": "activerecord",
    "date_merged": 1738839257000,
    "author": "Jean Boussier",
    "sha": "a6bc4b2c138d2ff44f3a56492453af2dee78a954",
    "pr": "53950",
    "merge_sha": "c50d860c940e2dba003962f87f60a1bcdf3186ce",
    "html": "<p>Better support UPDATE with JOIN for Postgresql and SQLite3</p>\n\n<p>Previously when generating update queries with one or more JOIN clauses,<br />\nActive Record would use a sub query which would prevent to reference the joined<br />\ntables in the <code>SET</code> clause, for instance:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">Comment</span><span class=\"p\">.</span><span class=\"nf\">joins</span><span class=\"p\">(</span><span class=\"ss\">:post</span><span class=\"p\">).</span><span class=\"nf\">update_all</span><span class=\"p\">(</span><span class=\"s2\">\"title = posts.title\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>This is now supported as long as the relation doesn’t also use a <code>LIMIT</code>, <code>ORDER</code> or<br />\n<code>GROUP BY</code> clause. This was supported by the MySQL adapter for a long time.</p>\n\n<p><em>Jean Boussier</em></p>\n"
  },
  {
    "message": "*   Introduce a before-fork hook in `ActiveSupport::Testing::Parallelization` to clear existing\n    connections, to avoid fork-safety issues with the mysql2 adapter.\n\n    Fixes #41776\n\n    *Mike Dalessio*, *Donal McBreen*",
    "project": "activerecord",
    "date_merged": 1738158431000,
    "author": "Mike Dalessio",
    "sha": "1709940bface730191e94a8cfd5720f1ad0bf34e",
    "pr": "54376",
    "merge_sha": "f132ba641a2720376f00071556fc85cbb2a6965f",
    "html": "<p>Introduce a before-fork hook in <code>ActiveSupport::Testing::Parallelization</code> to clear existing<br />\nconnections, to avoid fork-safety issues with the mysql2 adapter.</p>\n\n<p>Fixes #41776</p>\n\n<p><em>Mike Dalessio</em>, <em>Donal McBreen</em></p>\n"
  },
  {
    "message": "*   PoolConfig no longer keeps a reference to the connection class.\n\n    Keeping a reference to the class caused subtle issues when combined with reloading in\n    development. Fixes #54343.\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1737998581000,
    "author": "Mike Dalessio",
    "sha": "2a90dbcdf6738a544bc2062823c56040feadabe0",
    "pr": "54366",
    "merge_sha": "b8b00ef28b60dab47d546f104109948ae560c5ad",
    "html": "<p>PoolConfig no longer keeps a reference to the connection class.</p>\n\n<p>Keeping a reference to the class caused subtle issues when combined with reloading in<br />\ndevelopment. Fixes #54343.</p>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Fix SQL notifications sometimes not sent when using async queries.\n\n    ```ruby\n    Post.async_count\n    ActiveSupport::Notifications.subscribed(->(*) { \"Will never reach here\" }) do\n      Post.count\n    end\n    ```\n\n    In rare circumstances and under the right race condition, Active Support notifications\n    would no longer be dispatched after using an asynchronous query.\n    This is now fixed.\n\n    *Edouard Chin*",
    "project": "activerecord",
    "date_merged": 1737753562000,
    "author": "Edouard CHIN",
    "sha": "dc522a3e6933e014c691e06c5d866d6351d6640d",
    "pr": "54344",
    "merge_sha": "2ca006fb7fe881c225c000d9ab11e2a3554b70fa",
    "html": "<p>Fix SQL notifications sometimes not sent when using async queries.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">async_count</span>\n<span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">Notifications</span><span class=\"p\">.</span><span class=\"nf\">subscribed</span><span class=\"p\">(</span><span class=\"o\">-&gt;</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"s2\">\"Will never reach here\"</span> <span class=\"p\">})</span> <span class=\"k\">do</span>\n  <span class=\"no\">Post</span><span class=\"p\">.</span><span class=\"nf\">count</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p>In rare circumstances and under the right race condition, Active Support notifications<br />\nwould no longer be dispatched after using an asynchronous query.<br />\nThis is now fixed.</p>\n\n<p><em>Edouard Chin</em></p>\n"
  },
  {
    "message": "*   Eliminate queries loading dumped schema cache on Postgres\n\n    Improve resiliency by avoiding needing to open a database connection to load the\n    type map while defining attribute methods at boot when a schema cache file is\n    configured on PostgreSQL databases.\n\n    *James Coleman*",
    "project": "activerecord",
    "date_merged": 1737674292000,
    "author": "jcoleman",
    "sha": "9ad36e067222478090b36a985090475bb03e398c",
    "pr": "54333",
    "merge_sha": "e82b645262b2c4e499428d95cbb99e0352c977eb",
    "html": "<p>Eliminate queries loading dumped schema cache on Postgres</p>\n\n<p>Improve resiliency by avoiding needing to open a database connection to load the<br />\ntype map while defining attribute methods at boot when a schema cache file is<br />\nconfigured on PostgreSQL databases.</p>\n\n<p><em>James Coleman</em></p>\n"
  },
  {
    "message": "*   `ActiveRecord::Coder::JSON` can be instantiated\n\n    Options can now be passed to `ActiveRecord::Coder::JSON` when instantiating the coder. This allows:\n    ```ruby\n    serialize :config, coder: ActiveRecord::Coder::JSON.new(symbolize_names: true)\n    ```\n    *matthaigh27*",
    "project": "activerecord",
    "date_merged": 1737456235000,
    "author": "matt haigh",
    "sha": "65426afea6141bb489ee02d1513fe2c14b700700",
    "pr": "54172",
    "merge_sha": "eb503d80bf0030d9d66a576214dc21a467a1bc53",
    "html": "<p><code>ActiveRecord::Coder::JSON</code> can be instantiated</p>\n\n<p>Options can now be passed to <code>ActiveRecord::Coder::JSON</code> when instantiating the coder. This allows:</p>\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">serialize</span> <span class=\"ss\">:config</span><span class=\"p\">,</span> <span class=\"ss\">coder: </span><span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Coder</span><span class=\"o\">::</span><span class=\"no\">JSON</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"ss\">symbolize_names: </span><span class=\"kp\">true</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<p><em>matthaigh27</em></p>\n"
  },
  {
    "message": "*   Deprecate using `insert_all`/`upsert_all` with unpersisted records in associations.\n\n    Using these methods on associations containing unpersisted records will now\n    show a deprecation warning, as the unpersisted records will be lost after\n    the operation.\n\n    *Nick Schwaderer*",
    "project": "activerecord",
    "date_merged": 1737397236000,
    "author": "Nick Schwaderer",
    "sha": "5eeb9a76ff0445bdfdfd000c7474d80b9ba8bf49",
    "pr": "53920",
    "merge_sha": "b1d19454df2f5eb055254811bbbac0c6e997da3f",
    "html": "<p>Deprecate using <code>insert_all</code>/<code>upsert_all</code> with unpersisted records in associations.</p>\n\n<p>Using these methods on associations containing unpersisted records will now<br />\nshow a deprecation warning, as the unpersisted records will be lost after<br />\nthe operation.</p>\n\n<p><em>Nick Schwaderer</em></p>\n"
  },
  {
    "message": "*   Make column name optional for `index_exists?`.\n\n    This aligns well with `remove_index` signature as well, where\n    index name doesn't need to be derived from the column names.\n\n    *Ali Ismayiliov*",
    "project": "activerecord",
    "date_merged": 1737364831000,
    "author": "Ali Ismayilov",
    "sha": "08a0b4d49849605cf29498d113b12eedbb2ae49f",
    "pr": "54298",
    "merge_sha": "2e382ef0f6e9f2549ecc316212f1b0289d4162f7",
    "html": "<p>Make column name optional for <code>index_exists?</code>.</p>\n\n<p>This aligns well with <code>remove_index</code> signature as well, where<br />\nindex name doesn’t need to be derived from the column names.</p>\n\n<p><em>Ali Ismayiliov</em></p>\n"
  },
  {
    "message": "*   Change the payload name of `sql.active_record` notification for eager\n    loading from \"SQL\" to \"#{model.name} Eager Load\".\n\n    *zzak*",
    "project": "activerecord",
    "date_merged": 1737142980000,
    "author": "zzak",
    "sha": "d71310553e5360a93a32f91e5f99ec851cb7afc5",
    "pr": "54278",
    "merge_sha": "b458ed824c290f77a656accc457700c45733f4aa",
    "html": "<p>Change the payload name of <code>sql.active_record</code> notification for eager<br />\nloading from “SQL” to “#{model.name} Eager Load”.</p>\n\n<p><em>zzak</em></p>\n"
  },
  {
    "message": "*   Enable automatically retrying idempotent `#exists?` queries on connection\n    errors.\n\n    *Hartley McGuire*, *classidied*",
    "project": "activerecord",
    "date_merged": 1736877067000,
    "author": "Hartley McGuire",
    "sha": "be42d45578d9f002cd3e6cd60ba0466392ae5d4a",
    "pr": "54243",
    "merge_sha": "116a5e4309a189f9111c85334c418856b81cd91a",
    "html": "<p>Enable automatically retrying idempotent <code>#exists?</code> queries on connection<br />\nerrors.</p>\n\n<p><em>Hartley McGuire</em>, <em>classidied</em></p>\n"
  },
  {
    "message": "*   Deprecate usage of unsupported methods in conjunction with `update_all`:\n\n    `update_all` will now print a deprecation message if a query includes either `WITH`,\n    `WITH RECURSIVE` or `DISTINCT` statements. Those were never supported and were ignored\n    when generating the SQL query.\n\n    An error will be raised in a future Rails release. This behaviour will be consistent\n    with `delete_all` which currently raises an error for unsupported statements.\n\n    *Edouard Chin*",
    "project": "activerecord",
    "date_merged": 1736844484000,
    "author": "Edouard CHIN",
    "sha": "1585064d71ccee48e52940a723867758740233b8",
    "pr": "54231",
    "merge_sha": "3b6b6c25ffa44279b967378bce97bc4a169eb29d",
    "html": "<p>Deprecate usage of unsupported methods in conjunction with <code>update_all</code>:</p>\n\n<p><code>update_all</code> will now print a deprecation message if a query includes either <code>WITH</code>,<br />\n<code>WITH RECURSIVE</code> or <code>DISTINCT</code> statements. Those were never supported and were ignored<br />\nwhen generating the SQL query.</p>\n\n<p>An error will be raised in a future Rails release. This behaviour will be consistent<br />\nwith <code>delete_all</code> which currently raises an error for unsupported statements.</p>\n\n<p><em>Edouard Chin</em></p>\n"
  },
  {
    "message": "*   The table columns inside `schema.rb` are now sorted alphabetically.\n\n    Previously they'd be sorted by creation order, which can cause merge conflicts when two\n    branches modify the same table concurrently.\n\n    *John Duff*",
    "project": "activerecord",
    "date_merged": 1736248377000,
    "author": "John Duff",
    "sha": "e403adf8720a77b9481eb6f4e4b3e39cc91356d5",
    "pr": "53281",
    "merge_sha": "1edb8083b8d0de1ba9c09502d28add96ac20d659",
    "html": "<p>The table columns inside <code>schema.rb</code> are now sorted alphabetically.</p>\n\n<p>Previously they’d be sorted by creation order, which can cause merge conflicts when two<br />\nbranches modify the same table concurrently.</p>\n\n<p><em>John Duff</em></p>\n"
  },
  {
    "message": "*   Introduce versions formatter for the schema dumper.\n\n    It is now possible to override how schema dumper formats versions information inside the\n    `structure.sql` file. Currently, the versions are simply sorted in the decreasing order.\n    Within large teams, this can potentially cause many merge conflicts near the top of the list.\n\n    Now, the custom formatter can be provided with a custom sorting logic (e.g. by hash values\n    of the versions), which can greatly reduce the number of conflicts.\n\n    *fatkodima*",
    "project": "activerecord",
    "date_merged": 1735304063000,
    "author": "fatkodima",
    "sha": "0cc1842d3844411f77d9e6fbb6980ff2fbfaf868",
    "pr": "53797",
    "merge_sha": "0bded31622d4f4e126fb43aad742fbcaecf76cf8",
    "html": "<p>Introduce versions formatter for the schema dumper.</p>\n\n<p>It is now possible to override how schema dumper formats versions information inside the<br />\n<code>structure.sql</code> file. Currently, the versions are simply sorted in the decreasing order.<br />\nWithin large teams, this can potentially cause many merge conflicts near the top of the list.</p>\n\n<p>Now, the custom formatter can be provided with a custom sorting logic (e.g. by hash values<br />\nof the versions), which can greatly reduce the number of conflicts.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   Serialized attributes can now be marked as comparable.\n\n    A not rare issue when working with serialized attributes is that the serialized representation of an object\n    can change over time. Either because you are migrating from one serializer to the other (e.g. YAML to JSON or to msgpack),\n    or because the serializer used subtly changed its output.\n\n    One example is libyaml that used to have some extra trailing whitespaces, and recently fixed that.\n    When this sorts of thing happen, you end up with lots of records that report being changed even though\n    they aren't, which in the best case leads to a lot more writes to the database and in the worst case lead to nasty bugs.\n\n    The solution is to instead compare the deserialized representation of the object, however Active Record\n    can't assume the deserialized object has a working `==` method. Hence why this new functionality is opt-in.\n\n    ```ruby\n    serialize :config, type: Hash, coder: JSON, comparable: true\n    ```\n\n    *Jean Boussier*",
    "project": "activerecord",
    "date_merged": 1734180452000,
    "author": "Jean Boussier",
    "sha": "6a71a2ffea9f77228e3e13d5b3becac17449f2d8",
    "pr": "53946",
    "merge_sha": "9424179306c9c7eb70d7fa4eca9994c4285e6ac6",
    "html": "<p>Serialized attributes can now be marked as comparable.</p>\n\n<p>A not rare issue when working with serialized attributes is that the serialized representation of an object<br />\ncan change over time. Either because you are migrating from one serializer to the other (e.g. YAML to JSON or to msgpack),<br />\nor because the serializer used subtly changed its output.</p>\n\n<p>One example is libyaml that used to have some extra trailing whitespaces, and recently fixed that.<br />\nWhen this sorts of thing happen, you end up with lots of records that report being changed even though<br />\nthey aren’t, which in the best case leads to a lot more writes to the database and in the worst case lead to nasty bugs.</p>\n\n<p>The solution is to instead compare the deserialized representation of the object, however Active Record<br />\ncan’t assume the deserialized object has a working <code>==</code> method. Hence why this new functionality is opt-in.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">serialize</span> <span class=\"ss\">:config</span><span class=\"p\">,</span> <span class=\"ss\">type: </span><span class=\"no\">Hash</span><span class=\"p\">,</span> <span class=\"ss\">coder: </span><span class=\"no\">JSON</span><span class=\"p\">,</span> <span class=\"ss\">comparable: </span><span class=\"kp\">true</span>\n</code></pre></div></div>\n\n<p><em>Jean Boussier</em></p>\n"
  },
  {
    "message": "*   Fix MySQL default functions getting dropped when changing a column's nullability.\n\n    *Bastian Bartmann*",
    "project": "activerecord",
    "date_merged": 1733821459000,
    "author": "Bastian Bartmann",
    "sha": "ffa9d6dfbbb465ac36246c0de28e0a4ff5312738",
    "pr": "53838",
    "merge_sha": "ab3b87e536fc27004629aa5f32bdbe5353626111",
    "html": "<p>Fix MySQL default functions getting dropped when changing a column’s nullability.</p>\n\n<p><em>Bastian Bartmann</em></p>\n"
  },
  {
    "message": "*   SQLite extensions can be configured in `config/database.yml`.\n\n    The database configuration option `extensions:` allows an application to load SQLite extensions\n    when using `sqlite3` >= v2.4.0. The array members may be filesystem paths or the names of\n    modules that respond to `.to_path`:\n\n    ``` yaml\n    development:\n      adapter: sqlite3\n      extensions:\n        - SQLean::UUID                     # module name responding to `.to_path`\n        - .sqlpkg/nalgeon/crypto/crypto.so # or a filesystem path\n        - <%= AppExtensions.location %>    # or ruby code returning a path\n    ```\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1733344482000,
    "author": "Mike Dalessio",
    "sha": "b599d4cea0b1688493837e7895b54f35e84049f7",
    "pr": "53827",
    "merge_sha": "91d456366638ac6c3f6dec38670c8ada5e7c69b1",
    "html": "<p>SQLite extensions can be configured in <code>config/database.yml</code>.</p>\n\n<p>The database configuration option <code>extensions:</code> allows an application to load SQLite extensions<br />\nwhen using <code>sqlite3</code> &gt;= v2.4.0. The array members may be filesystem paths or the names of<br />\nmodules that respond to <code>.to_path</code>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">development</span><span class=\"pi\">:</span>\n  <span class=\"na\">adapter</span><span class=\"pi\">:</span> <span class=\"s\">sqlite3</span>\n  <span class=\"na\">extensions</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">SQLean::UUID</span>                     <span class=\"c1\"># module name responding to `.to_path`</span>\n    <span class=\"pi\">-</span> <span class=\"s\">.sqlpkg/nalgeon/crypto/crypto.so</span> <span class=\"c1\"># or a filesystem path</span>\n    <span class=\"pi\">-</span> <span class=\"s\">&lt;%= AppExtensions.location %&gt;</span>    <span class=\"c1\"># or ruby code returning a path</span>\n</code></pre></div></div>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   `ActiveRecord::Middleware::ShardSelector` supports granular database connection switching.\n\n    A new configuration option, `class_name:`, is introduced to\n    `config.active_record.shard_selector` to allow an application to specify the abstract connection\n    class to be switched by the shard selection middleware. The default class is\n    `ActiveRecord::Base`.\n\n    For example, this configuration tells `ShardSelector` to switch shards using\n    `AnimalsRecord.connected_to`:\n\n    ```\n    config.active_record.shard_selector = { class_name: \"AnimalsRecord\" }\n    ```\n\n    *Mike Dalessio*",
    "project": "activerecord",
    "date_merged": 1733262413000,
    "author": "Mike Dalessio",
    "sha": "58480682ede0291055b64f627b53fab07c459a81",
    "pr": "53783",
    "merge_sha": "4dd8fb30986f7b1f824ebad5d5ec7620685071d4",
    "html": "<p><code>ActiveRecord::Middleware::ShardSelector</code> supports granular database connection switching.</p>\n\n<p>A new configuration option, <code>class_name:</code>, is introduced to<br />\n<code>config.active_record.shard_selector</code> to allow an application to specify the abstract connection<br />\nclass to be switched by the shard selection middleware. The default class is<br />\n<code>ActiveRecord::Base</code>.</p>\n\n<p>For example, this configuration tells <code>ShardSelector</code> to switch shards using<br />\n<code>AnimalsRecord.connected_to</code>:</p>\n\n<pre><code>config.active_record.shard_selector = { class_name: \"AnimalsRecord\" }\n</code></pre>\n\n<p><em>Mike Dalessio</em></p>\n"
  },
  {
    "message": "*   Reset relations after `insert_all`/`upsert_all`.\n\n    Bulk insert/upsert methods will now call `reset` if used on a relation, matching the behavior of `update_all`.\n\n    *Milo Winningham*",
    "project": "activerecord",
    "date_merged": 1733206087000,
    "author": "Milo Winningham",
    "sha": "a0591974a88b8e8eebe27fa011cb8aa84d998298",
    "pr": "45943",
    "merge_sha": "eb06dce17f6be8911b2e2f0b0f28c37dd207d202",
    "html": "<p>Reset relations after <code>insert_all</code>/<code>upsert_all</code>.</p>\n\n<p>Bulk insert/upsert methods will now call <code>reset</code> if used on a relation, matching the behavior of <code>update_all</code>.</p>\n\n<p><em>Milo Winningham</em></p>\n"
  },
  {
    "message": "*   Use `_N` as a parallel tests databases suffixes\n\n    Peviously, `-N` was used as a suffix. This can cause problems for RDBMSes\n    which do not support dashes in database names.\n\n    *fatkodima*",
    "project": "activerecord",
    "date_merged": 1733128168000,
    "author": "fatkodima",
    "sha": "e04a9085fdef1ef87bbf27a96cd719ff15cb5b78",
    "pr": "53790",
    "merge_sha": "4060253ea7bf1a04c7b2368ffc17ddcf991997f9",
    "html": "<p>Use <code>_N</code> as a parallel tests databases suffixes</p>\n\n<p>Peviously, <code>-N</code> was used as a suffix. This can cause problems for RDBMSes<br />\nwhich do not support dashes in database names.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   Remember when a database connection has recently been verified (for\n    two seconds, by default), to avoid repeated reverifications during a\n    single request.\n\n    This should recreate a similar rate of verification as in Rails 7.1,\n    where connections are leased for the duration of a request, and thus\n    only verified once.\n\n    *Matthew Draper*",
    "project": "activerecord",
    "date_merged": 1732772577000,
    "author": "Matthew Draper",
    "sha": "a4cefc19b1810ba0048f635f53e4a986da921973",
    "pr": "53672",
    "merge_sha": "8b544b2689f97f57c97bee59f45920bd99bda047",
    "html": "<p>Remember when a database connection has recently been verified (for<br />\ntwo seconds, by default), to avoid repeated reverifications during a<br />\nsingle request.</p>\n\n<p>This should recreate a similar rate of verification as in Rails 7.1,<br />\nwhere connections are leased for the duration of a request, and thus<br />\nonly verified once.</p>\n\n<p><em>Matthew Draper</em></p>\n"
  },
  {
    "message": "*   Allow to reset cache counters for multiple records.\n\n    ```\n    Aircraft.reset_counters([1, 2, 3], :wheels_count)\n    ```\n\n    It produces much fewer queries compared to the custom implementation using looping over ids.\n    Previously: `O(ids.size * counters.size)` queries, now: `O(ids.size + counters.size)` queries.\n\n    *fatkodima*",
    "project": "activerecord",
    "date_merged": 1731780012000,
    "author": "fatkodima",
    "sha": "0e6706c456f9e8175edfbaf2a39ef279b3dba14d",
    "pr": "44971",
    "merge_sha": "fe0270c36883b0ccae318ce9603c6f005134ff04",
    "html": "<p>Allow to reset cache counters for multiple records.</p>\n\n<pre><code>Aircraft.reset_counters([1, 2, 3], :wheels_count)\n</code></pre>\n\n<p>It produces much fewer queries compared to the custom implementation using looping over ids.<br />\nPreviously: <code>O(ids.size * counters.size)</code> queries, now: <code>O(ids.size + counters.size)</code> queries.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   Add `affected_rows` to `sql.active_record` Notification.\n\n    *Hartley McGuire*",
    "project": "activerecord",
    "date_merged": 1731752981000,
    "author": "Hartley McGuire",
    "sha": "a029da566f0b9716d90aa670edf04f90b8d72b89",
    "pr": "53277",
    "merge_sha": "c165c070e54ed1855d0a50c47283201ba4750d95",
    "html": "<p>Add <code>affected_rows</code> to <code>sql.active_record</code> Notification.</p>\n\n<p><em>Hartley McGuire</em></p>\n"
  },
  {
    "message": "*   Fix `sum` when performing a grouped calculation.\n\n    `User.group(:friendly).sum` no longer worked. This is fixed.\n\n    *Edouard Chin*",
    "project": "activerecord",
    "date_merged": 1731556607000,
    "author": "Edouard CHIN",
    "sha": "aaad4932b26d731d9aa2b14f21207d6ddf83ea73",
    "pr": "53625",
    "merge_sha": "f7f7d8e63ae60bb7edc5c50b6f7cac3c922574a8",
    "html": "<p>Fix <code>sum</code> when performing a grouped calculation.</p>\n\n<p><code>User.group(:friendly).sum</code> no longer worked. This is fixed.</p>\n\n<p><em>Edouard Chin</em></p>\n"
  },
  {
    "message": "*   Add support for enabling or disabling transactional tests per database.\n\n    A test class can now override the default `use_transactional_tests` setting\n    for individual databases, which can be useful if some databases need their\n    current state to be accessible to an external process while tests are running.\n\n    ```ruby\n    class MostlyTransactionalTest < ActiveSupport::TestCase\n      self.use_transactional_tests = true\n      skip_transactional_tests_for_database :shared\n    end\n    ```\n\n    *Matthew Cheetham*, *Morgan Mareve*",
    "project": "activerecord",
    "date_merged": 1730907092000,
    "author": "Matthew John Cheetham",
    "sha": "c68482f5714c1dd82e84e255aded630700184b72",
    "pr": "53139",
    "merge_sha": "f8d74e27212f8d852a3d5ca7eb7766807a89b0a2",
    "html": "<p>Add support for enabling or disabling transactional tests per database.</p>\n\n<p>A test class can now override the default <code>use_transactional_tests</code> setting<br />\nfor individual databases, which can be useful if some databases need their<br />\ncurrent state to be accessible to an external process while tests are running.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">MostlyTransactionalTest</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">TestCase</span>\n  <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">use_transactional_tests</span> <span class=\"o\">=</span> <span class=\"kp\">true</span>\n  <span class=\"n\">skip_transactional_tests_for_database</span> <span class=\"ss\">:shared</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<p><em>Matthew Cheetham</em>, <em>Morgan Mareve</em></p>\n"
  },
  {
    "message": "*   Cast `query_cache` value when using URL configuration.\n\n    *zzak*",
    "project": "activerecord",
    "date_merged": 1730292324000,
    "author": "zzak",
    "sha": "af9b0f2be4c677772bca5c0b0d947bcd7b8d2fe4",
    "pr": "53491",
    "merge_sha": "a807d585fadff5d1964a32088100017e41cc5c5d",
    "html": "<p>Cast <code>query_cache</code> value when using URL configuration.</p>\n\n<p><em>zzak</em></p>\n"
  },
  {
    "message": "*   NULLS NOT DISTINCT works with UNIQUE CONSTRAINT as well as UNIQUE INDEX.\n\n    *Ryuta Kamizono*",
    "project": "activerecord",
    "date_merged": 1729999169000,
    "author": "Ryuta Kamizono",
    "sha": "38489e43f2c865f888f9b5af0219a8280fc54429",
    "pr": "53456",
    "merge_sha": "e6429269fd5a8a7d728557f4e7d7f82c0ad1478c",
    "html": "<p>NULLS NOT DISTINCT works with UNIQUE CONSTRAINT as well as UNIQUE INDEX.</p>\n\n<p><em>Ryuta Kamizono</em></p>\n"
  },
  {
    "message": "*   `PG::UnableToSend: no connection to the server` is now retryable as a connection-related exception\n\n    *Kazuma Watanabe*",
    "project": "activerecord",
    "date_merged": 1729756158000,
    "author": "wata727",
    "sha": "d0edda3315455660a387fb3cd6313b589a235e3a",
    "pr": "53400",
    "merge_sha": "7fac5d14d00fcc8dc60b49729abe78223ad3bf00",
    "html": "<p><code>PG::UnableToSend: no connection to the server</code> is now retryable as a connection-related exception</p>\n\n<p><em>Kazuma Watanabe</em></p>\n"
  },
  {
    "message": "*   Delegate `ActiveStorage::Filename#to_str` to `#to_s`\n\n    Supports checking String equality:\n\n    ```ruby\n    filename = ActiveStorage::Filename.new(\"file.txt\")\n    filename == \"file.txt\" # => true\n    filename in \"file.txt\" # => true\n    \"file.txt\" == filename # => true\n    ```\n\n    *Sean Doyle*",
    "project": "activestorage",
    "date_merged": 1736536509000,
    "author": "Sean Doyle",
    "sha": "73133fa37f52204fe797d58d508806e5517f04b3",
    "pr": "54185",
    "merge_sha": "7ec153158e418c8c51bdee170fc06795db3a61ed",
    "html": "<p>Delegate <code>ActiveStorage::Filename#to_str</code> to <code>#to_s</code></p>\n\n<p>Supports checking String equality:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"no\">ActiveStorage</span><span class=\"o\">::</span><span class=\"no\">Filename</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">\"file.txt\"</span><span class=\"p\">)</span>\n<span class=\"n\">filename</span> <span class=\"o\">==</span> <span class=\"s2\">\"file.txt\"</span> <span class=\"c1\"># =&gt; true</span>\n<span class=\"n\">filename</span> <span class=\"k\">in</span> <span class=\"s2\">\"file.txt\"</span> <span class=\"c1\"># =&gt; true</span>\n<span class=\"s2\">\"file.txt\"</span> <span class=\"o\">==</span> <span class=\"n\">filename</span> <span class=\"c1\"># =&gt; true</span>\n</code></pre></div></div>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Add support for alternative MD5 implementation through `config.active_storage.checksum_implementation`.\n\n    Also automatically degrade to using the slower `Digest::MD5` implementation if `OpenSSL::Digest::MD5`\n    is found to be disabled because of OpenSSL FIPS mode.\n\n    *Matt Pasquini*, *Jean Boussier*",
    "project": "activestorage",
    "date_merged": 1735992548000,
    "author": "Matt Pasquini",
    "sha": "bbc0cf1712da74d52874a4e012321b5e27e85e39",
    "pr": "54040",
    "merge_sha": "e64e5d31cdeafee142e32e604b513a39de779651",
    "html": "<p>Add support for alternative MD5 implementation through <code>config.active_storage.checksum_implementation</code>.</p>\n\n<p>Also automatically degrade to using the slower <code>Digest::MD5</code> implementation if <code>OpenSSL::Digest::MD5</code><br />\nis found to be disabled because of OpenSSL FIPS mode.</p>\n\n<p><em>Matt Pasquini</em>, <em>Jean Boussier</em></p>\n"
  },
  {
    "message": "*   A Blob will no longer autosave associated Attachment.\n\n    This fixes an issue where a record with an attachment would have\n    its dirty attributes reset, preventing your `after commit` callbacks\n    on that record to behave as expected.\n\n    Note that this change doesn't require any changes on your application\n    and is supposed to be internal. Active Storage Attachment will continue\n    to be autosaved (through a different relation).\n\n    *Edouard-chin*",
    "project": "activestorage",
    "date_merged": 1734601190000,
    "author": "Edouard CHIN",
    "sha": "e70f504271864e32a5f27a35fe0d0865f5d95527",
    "pr": "53623",
    "merge_sha": "cfc6c5656f10452f354cd5bd28dd4ae020834a40",
    "html": "<p>A Blob will no longer autosave associated Attachment.</p>\n\n<p>This fixes an issue where a record with an attachment would have<br />\nits dirty attributes reset, preventing your <code>after commit</code> callbacks<br />\non that record to behave as expected.</p>\n\n<p>Note that this change doesn’t require any changes on your application<br />\nand is supposed to be internal. Active Storage Attachment will continue<br />\nto be autosaved (through a different relation).</p>\n\n<p><em>Edouard-chin</em></p>\n"
  },
  {
    "message": "*   Change `ActionText::RichText#embeds` assignment from `before_save` to `before_validation`\n\n    *Sean Doyle*",
    "project": "actiontext",
    "date_merged": 1733784985000,
    "author": "Sean Doyle",
    "sha": "0eb9fa47168db84e79f5a200af470acca3ba8c31",
    "pr": "53847",
    "merge_sha": "0efc3e899a0cade4e1b7c626d1df043dadf2d2a2",
    "html": "<p>Change <code>ActionText::RichText#embeds</code> assignment from <code>before_save</code> to <code>before_validation</code></p>\n\n<p><em>Sean Doyle</em></p>\n"
  },
  {
    "message": "*   Add `report:` option to `ActiveJob::Base#retry_on` and `#discard_on`\n\n    When the `report:` option is passed, errors will be reported to the error reporter\n    before being retried / discarded.\n\n    *Andrew Novoselac*",
    "project": "activejob",
    "date_merged": 1740129016000,
    "author": "andrew.novoselac@shopify.com",
    "sha": "3ff8c45e7b525c6b947d6f4f3350366b0d7e97ed",
    "pr": "54541",
    "merge_sha": "7df1b84335298140116a59cad1bffea6c6a91747",
    "html": "<p>Add <code>report:</code> option to <code>ActiveJob::Base#retry_on</code> and <code>#discard_on</code></p>\n\n<p>When the <code>report:</code> option is passed, errors will be reported to the error reporter<br />\nbefore being retried / discarded.</p>\n\n<p><em>Andrew Novoselac</em></p>\n"
  },
  {
    "message": "*   Accept a block for `ActiveJob::ConfiguredJob#perform_later`.\n\n    This was inconsistent with a regular `ActiveJob::Base#perform_later`.\n\n    *fatkodima*",
    "project": "activejob",
    "date_merged": 1733489505000,
    "author": "fatkodima",
    "sha": "f70cca178f35f703245de62c74d078f54fd17572",
    "pr": "53859",
    "merge_sha": "31aec233a17a44cb4666aa074243f0961798ed46",
    "html": "<p>Accept a block for <code>ActiveJob::ConfiguredJob#perform_later</code>.</p>\n\n<p>This was inconsistent with a regular <code>ActiveJob::Base#perform_later</code>.</p>\n\n<p><em>fatkodima</em></p>\n"
  },
  {
    "message": "*   Raise a more specific error during deserialization when a previously serialized job class is now unknown.\n\n    `ActiveJob::UnknownJobClassError` will be raised instead of a more generic\n    `NameError` to make it easily possible for adapters to tell if the `NameError`\n    was raised during job execution or deserialization.\n\n    *Earlopain*",
    "project": "activejob",
    "date_merged": 1732822493000,
    "author": "Earlopain",
    "sha": "5a04667a89b41da272214e53c0111e7d5b2d3219",
    "pr": "53770",
    "merge_sha": "e15be8c98e39a96d33be9331f9649bade402f9bf",
    "html": "<p>Raise a more specific error during deserialization when a previously serialized job class is now unknown.</p>\n\n<p><code>ActiveJob::UnknownJobClassError</code> will be raised instead of a more generic<br />\n<code>NameError</code> to make it easily possible for adapters to tell if the <code>NameError</code><br />\nwas raised during job execution or deserialization.</p>\n\n<p><em>Earlopain</em></p>\n"
  }
]