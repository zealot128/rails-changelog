<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
<title>Rails Changelog</title>
<link>https://zealot128.github.io/rails-changelog</link>
<description>Changelog for Rails</description>
<atom:link href="https://zealot128.github.io/rails-changelog/feed.xml" rel="self" type="application/rss+xml" />
  <item>
    <title>activerecord: Fix an issue where the IDs reader method did not return expected results
</title>
    <link>https://github.com/rails/rails/issues/51167</link>
    <guid>https://github.com/rails/rails/issues/51167</guid>
    <description>*   Fix an issue where the IDs reader method did not return expected results
    for preloaded associations in models using composite primary keys.

    *Jay Ang*</description>
    <pubDate>Wed, 05 Jun 2024 14:55:08 +0000</pubDate>
    <author>Jay Ang</author>
    <content:encoded><![CDATA[<p>Fix an issue where the IDs reader method did not return expected results<br />
for preloaded associations in models using composite primary keys.</p>

<p><em>Jay Ang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow to configure `strict_loading_mode` globally or within a model.
</title>
    <link>https://github.com/rails/rails/issues/51339</link>
    <guid>https://github.com/rails/rails/issues/51339</guid>
    <description>*   Allow to configure `strict_loading_mode` globally or within a model.

    Defaults to `:all`, can be changed to `:n_plus_one_only`.

    *Garen Torikian*</description>
    <pubDate>Mon, 03 Jun 2024 13:12:04 +0000</pubDate>
    <author>Garen J. Torikian</author>
    <content:encoded><![CDATA[<p>Allow to configure <code>strict_loading_mode</code> globally or within a model.</p>

<p>Defaults to <code>:all</code>, can be changed to <code>:n_plus_one_only</code>.</p>

<p><em>Garen Torikian</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `ActiveRecord::Relation#readonly?`.
</title>
    <link>https://github.com/rails/rails/issues/51943</link>
    <guid>https://github.com/rails/rails/issues/51943</guid>
    <description>*   Add `ActiveRecord::Relation#readonly?`.

    Reflects if the relation has been marked as readonly.

    *Theodor Tonum*</description>
    <pubDate>Wed, 29 May 2024 19:05:24 +0000</pubDate>
    <author>Carlos Antonio da Silva</author>
    <content:encoded><![CDATA[<p>Add <code>ActiveRecord::Relation#readonly?</code>.</p>

<p>Reflects if the relation has been marked as readonly.</p>

<p><em>Theodor Tonum</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Improve `ActiveRecord::Store` to raise a descriptive exception if the column is not either
</title>
    <link>https://github.com/rails/rails/issues/51898</link>
    <guid>https://github.com/rails/rails/issues/51898</guid>
    <description>*   Improve `ActiveRecord::Store` to raise a descriptive exception if the column is not either
    structured (e.g., PostgreSQL +hstore+/+json+, or MySQL +json+) or declared serializable via
    `ActiveRecord.store`.

    Previously, a `NoMethodError` would be raised when the accessor was read or written:

        NoMethodError: undefined method `accessor&#39; for an instance of ActiveRecord::Type::Text

    Now, a descriptive `ConfigurationError` is raised:

        ActiveRecord::ConfigurationError: the column &#39;metadata&#39; has not been configured as a store.
          Please make sure the column is declared serializable via &#39;ActiveRecord.store&#39; or, if your
          database supports it, use a structured column type like hstore or json.

    *Mike Dalessio*</description>
    <pubDate>Fri, 24 May 2024 06:34:42 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>Improve <code>ActiveRecord::Store</code> to raise a descriptive exception if the column is not either<br />
structured (e.g., PostgreSQL +hstore+/+json+, or MySQL +json+) or declared serializable via<br />
<code>ActiveRecord.store</code>.</p>

<p>Previously, a <code>NoMethodError</code> would be raised when the accessor was read or written:</p>

<pre><code>NoMethodError: undefined method `accessor' for an instance of ActiveRecord::Type::Text
</code></pre>

<p>Now, a descriptive <code>ConfigurationError</code> is raised:</p>

<pre><code>ActiveRecord::ConfigurationError: the column 'metadata' has not been configured as a store.
  Please make sure the column is declared serializable via 'ActiveRecord.store' or, if your
  database supports it, use a structured column type like hstore or json.
</code></pre>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix inference of association model on nested models with the same demodularized name.
</title>
    <link>https://github.com/rails/rails/issues/51720</link>
    <guid>https://github.com/rails/rails/issues/51720</guid>
    <description>*   Fix inference of association model on nested models with the same demodularized name.

    E.g. with the following setup:

    ```ruby
    class Nested::Post &lt; ApplicationRecord
      has_one :post, through: :other
    end
    ```

    Before, `#post` would infer the model as `Nested::Post`, but now it correctly infers `Post`.

    *Joshua Young*</description>
    <pubDate>Wed, 22 May 2024 23:46:14 +0000</pubDate>
    <author>Joshua Young</author>
    <content:encoded><![CDATA[<p>Fix inference of association model on nested models with the same demodularized name.</p>

<p>E.g. with the following setup:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Nested::Post</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">has_one</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">through: :other</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Before, <code>#post</code> would infer the model as <code>Nested::Post</code>, but now it correctly infers <code>Post</code>.</p>

<p><em>Joshua Young</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add public method for checking if a table is ignored by the schema cache.
</title>
    <link>https://github.com/rails/rails/issues/51878</link>
    <guid>https://github.com/rails/rails/issues/51878</guid>
    <description>*   Add public method for checking if a table is ignored by the schema cache.

    Previously, an application would need to reimplement `ignored_table?` from the schema cache class to check if a table was set to be ignored. This adds a public method to support this and updates the schema cache to use that directly.

    ```ruby
    ActiveRecord.schema_cache_ignored_tables = [&quot;developers&quot;]
    ActiveRecord.schema_cache_ignored_table?(&quot;developers&quot;)
    =&gt; true
    ```

    *Eileen M. Uchitelle*</description>
    <pubDate>Tue, 21 May 2024 19:33:51 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Add public method for checking if a table is ignored by the schema cache.</p>

<p>Previously, an application would need to reimplement <code>ignored_table?</code> from the schema cache class to check if a table was set to be ignored. This adds a public method to support this and updates the schema cache to use that directly.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="p">.</span><span class="nf">schema_cache_ignored_tables</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"developers"</span><span class="p">]</span>
<span class="no">ActiveRecord</span><span class="p">.</span><span class="nf">schema_cache_ignored_table?</span><span class="p">(</span><span class="s2">"developers"</span><span class="p">)</span>
<span class="o">=&gt;</span> <span class="kp">true</span>
</code></pre></div></div>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add `:wasm_unsafe_eval` mapping for `content_security_policy`
</title>
    <link>https://github.com/rails/rails/issues/51944</link>
    <guid>https://github.com/rails/rails/issues/51944</guid>
    <description>*   Add `:wasm_unsafe_eval` mapping for `content_security_policy`

    ```ruby
    # Before
    policy.script_src &quot;&#39;wasm-unsafe-eval&#39;&quot;

    # After
    policy.script_src :wasm_unsafe_eval
    ```

    *Joe Haig*</description>
    <pubDate>Wed, 29 May 2024 21:18:43 +0000</pubDate>
    <author>Cyril Blaecke</author>
    <content:encoded><![CDATA[<p>Add <code>:wasm_unsafe_eval</code> mapping for <code>content_security_policy</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Before</span>
<span class="n">policy</span><span class="p">.</span><span class="nf">script_src</span> <span class="s2">"'wasm-unsafe-eval'"</span>

<span class="c1"># After</span>
<span class="n">policy</span><span class="p">.</span><span class="nf">script_src</span> <span class="ss">:wasm_unsafe_eval</span>
</code></pre></div></div>

<p><em>Joe Haig</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add `display_capture` and `keyboard_map` in `permissions_policy`
</title>
    <link>https://github.com/rails/rails/issues/51944</link>
    <guid>https://github.com/rails/rails/issues/51944</guid>
    <description>*   Add `display_capture` and `keyboard_map` in `permissions_policy`

    *Cyril Blaecke*</description>
    <pubDate>Wed, 29 May 2024 21:18:43 +0000</pubDate>
    <author>Cyril Blaecke</author>
    <content:encoded><![CDATA[<p>Add <code>display_capture</code> and <code>keyboard_map</code> in <code>permissions_policy</code></p>

<p><em>Cyril Blaecke</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add Rubocop and GitHub Actions to plugin generator.
</title>
    <link>https://github.com/rails/rails/issues/51822</link>
    <guid>https://github.com/rails/rails/issues/51822</guid>
    <description>*   Add Rubocop and GitHub Actions to plugin generator.
    This can be skipped using --skip-rubocop and --skip-ci.

    *Chris Oliver*</description>
    <pubDate>Thu, 23 May 2024 18:08:58 +0000</pubDate>
    <author>Chris Oliver</author>
    <content:encoded><![CDATA[<p>Add Rubocop and GitHub Actions to plugin generator.<br />
This can be skipped using –skip-rubocop and –skip-ci.</p>

<p><em>Chris Oliver</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Use Kamal for deployment by default, which includes generating a Rails-specific config/deploy.yml.
</title>
    <link>https://github.com/rails/rails/issues/51798</link>
    <guid>https://github.com/rails/rails/issues/51798</guid>
    <description>*   Use Kamal for deployment by default, which includes generating a Rails-specific config/deploy.yml.
    This can be skipped using --skip-kamal. See more: https://kamal-deploy.org/

    *DHH*</description>
    <pubDate>Tue, 14 May 2024 00:37:39 +0000</pubDate>
    <author>David Heinemeier Hansson</author>
    <content:encoded><![CDATA[<p>Use Kamal for deployment by default, which includes generating a Rails-specific config/deploy.yml.<br />
This can be skipped using –skip-kamal. See more: https://kamal-deploy.org/</p>

<p><em>DHH</em></p>
]]></content:encoded>
  </item>
</channel>
</rss>


