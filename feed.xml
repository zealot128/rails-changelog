<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
<title>Rails Changelog</title>
<link>https://zealot128.github.io/rails-changelog</link>
<description>Changelog for Rails</description>
<atom:link href="https://zealot128.github.io/rails-changelog/feed.xml" rel="self" type="application/rss+xml" />
  <item>
    <title>activemodel: Backport `ActiveRecord::Normalization` to `ActiveModel::Attributes::Normalization`
</title>
    <link>https://github.com/rails/rails/issues/53955</link>
    <guid>https://github.com/rails/rails/issues/53955</guid>
    <description>*   Backport `ActiveRecord::Normalization` to `ActiveModel::Attributes::Normalization`

    ```ruby
    class User
      include ActiveModel::Attributes
      include ActiveModel::Attributes::Normalization

      attribute :email, :string

      normalizes :email, with: -&gt; email { email.strip.downcase }
    end

    user = User.new
    user.email =    &quot; CRUISE-CONTROL@EXAMPLE.COM\n&quot;
    user.email # =&gt; &quot;cruise-control@example.com&quot;
    ```

    *Sean Doyle*</description>
    <pubDate>Tue, 07 Jan 2025 16:14:03 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Backport <code>ActiveRecord::Normalization</code> to <code>ActiveModel::Attributes::Normalization</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span>
  <span class="kp">include</span> <span class="no">ActiveModel</span><span class="o">::</span><span class="no">Attributes</span>
  <span class="kp">include</span> <span class="no">ActiveModel</span><span class="o">::</span><span class="no">Attributes</span><span class="o">::</span><span class="no">Normalization</span>

  <span class="n">attribute</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:string</span>

  <span class="n">normalizes</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">with: </span><span class="o">-&gt;</span> <span class="n">email</span> <span class="p">{</span> <span class="n">email</span><span class="p">.</span><span class="nf">strip</span><span class="p">.</span><span class="nf">downcase</span> <span class="p">}</span>
<span class="k">end</span>

<span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">new</span>
<span class="n">user</span><span class="p">.</span><span class="nf">email</span> <span class="o">=</span>    <span class="s2">" CRUISE-CONTROL@EXAMPLE.COM</span><span class="se">\n</span><span class="s2">"</span>
<span class="n">user</span><span class="p">.</span><span class="nf">email</span> <span class="c1"># =&gt; "cruise-control@example.com"</span>
</code></pre></div></div>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix migrating multiple databases with `ActiveRecord::PendingMigration` action.
</title>
    <link>https://github.com/rails/rails/issues/54456</link>
    <guid>https://github.com/rails/rails/issues/54456</guid>
    <description>*   Fix migrating multiple databases with `ActiveRecord::PendingMigration` action.

    *Gannon McGibbon*</description>
    <pubDate>Thu, 06 Feb 2025 21:29:52 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Fix migrating multiple databases with <code>ActiveRecord::PendingMigration</code> action.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Enable automatically retrying idempotent association queries on connection
</title>
    <link>https://github.com/rails/rails/issues/54436</link>
    <guid>https://github.com/rails/rails/issues/54436</guid>
    <description>*   Enable automatically retrying idempotent association queries on connection
    errors.

    *Hartley McGuire*</description>
    <pubDate>Thu, 06 Feb 2025 20:15:53 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Enable automatically retrying idempotent association queries on connection<br />
errors.</p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `allow_retry` to `sql.active_record` instrumentation.
</title>
    <link>https://github.com/rails/rails/issues/54454</link>
    <guid>https://github.com/rails/rails/issues/54454</guid>
    <description>*   Add `allow_retry` to `sql.active_record` instrumentation.

    This enables identifying queries which queries are automatically retryable on connection errors.

    *Hartley McGuire*</description>
    <pubDate>Thu, 06 Feb 2025 20:01:42 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Add <code>allow_retry</code> to <code>sql.active_record</code> instrumentation.</p>

<p>This enables identifying queries which queries are automatically retryable on connection errors.</p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Better support UPDATE with JOIN for Postgresql and SQLite3
</title>
    <link>https://github.com/rails/rails/issues/53950</link>
    <guid>https://github.com/rails/rails/issues/53950</guid>
    <description>*   Better support UPDATE with JOIN for Postgresql and SQLite3

    Previously when generating update queries with one or more JOIN clauses,
    Active Record would use a sub query which would prevent to reference the joined
    tables in the `SET` clause, for instance:

    ```ruby
    Comment.joins(:post).update_all(&quot;title = posts.title&quot;)
    ```

    This is now supported as long as the relation doesn&#39;t also use a `LIMIT`, `ORDER` or
    `GROUP BY` clause. This was supported by the MySQL adapter for a long time.

    *Jean Boussier*</description>
    <pubDate>Thu, 06 Feb 2025 10:54:17 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Better support UPDATE with JOIN for Postgresql and SQLite3</p>

<p>Previously when generating update queries with one or more JOIN clauses,<br />
Active Record would use a sub query which would prevent to reference the joined<br />
tables in the <code>SET</code> clause, for instance:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Comment</span><span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:post</span><span class="p">).</span><span class="nf">update_all</span><span class="p">(</span><span class="s2">"title = posts.title"</span><span class="p">)</span>
</code></pre></div></div>

<p>This is now supported as long as the relation doesn’t also use a <code>LIMIT</code>, <code>ORDER</code> or<br />
<code>GROUP BY</code> clause. This was supported by the MySQL adapter for a long time.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Introduce a before-fork hook in `ActiveSupport::Testing::Parallelization` to clear existing
</title>
    <link>https://github.com/rails/rails/issues/54376</link>
    <guid>https://github.com/rails/rails/issues/54376</guid>
    <description>*   Introduce a before-fork hook in `ActiveSupport::Testing::Parallelization` to clear existing
    connections, to avoid fork-safety issues with the mysql2 adapter.

    Fixes #41776

    *Mike Dalessio*, *Donal McBreen*</description>
    <pubDate>Wed, 29 Jan 2025 13:47:11 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>Introduce a before-fork hook in <code>ActiveSupport::Testing::Parallelization</code> to clear existing<br />
connections, to avoid fork-safety issues with the mysql2 adapter.</p>

<p>Fixes #41776</p>

<p><em>Mike Dalessio</em>, <em>Donal McBreen</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: PoolConfig no longer keeps a reference to the connection class.
</title>
    <link>https://github.com/rails/rails/issues/54366</link>
    <guid>https://github.com/rails/rails/issues/54366</guid>
    <description>*   PoolConfig no longer keeps a reference to the connection class.

    Keeping a reference to the class caused subtle issues when combined with reloading in
    development. Fixes #54343.

    *Mike Dalessio*</description>
    <pubDate>Mon, 27 Jan 2025 17:23:01 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>PoolConfig no longer keeps a reference to the connection class.</p>

<p>Keeping a reference to the class caused subtle issues when combined with reloading in<br />
development. Fixes #54343.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix SQL notifications sometimes not sent when using async queries.
</title>
    <link>https://github.com/rails/rails/issues/54344</link>
    <guid>https://github.com/rails/rails/issues/54344</guid>
    <description>*   Fix SQL notifications sometimes not sent when using async queries.

    ```ruby
    Post.async_count
    ActiveSupport::Notifications.subscribed(-&gt;(*) { &quot;Will never reach here&quot; }) do
      Post.count
    end
    ```

    In rare circumstances and under the right race condition, Active Support notifications
    would no longer be dispatched after using an asynchronous query.
    This is now fixed.

    *Edouard Chin*</description>
    <pubDate>Fri, 24 Jan 2025 21:19:22 +0000</pubDate>
    <author>Edouard CHIN</author>
    <content:encoded><![CDATA[<p>Fix SQL notifications sometimes not sent when using async queries.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span><span class="p">.</span><span class="nf">async_count</span>
<span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Notifications</span><span class="p">.</span><span class="nf">subscribed</span><span class="p">(</span><span class="o">-&gt;</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="p">{</span> <span class="s2">"Will never reach here"</span> <span class="p">})</span> <span class="k">do</span>
  <span class="no">Post</span><span class="p">.</span><span class="nf">count</span>
<span class="k">end</span>
</code></pre></div></div>

<p>In rare circumstances and under the right race condition, Active Support notifications<br />
would no longer be dispatched after using an asynchronous query.<br />
This is now fixed.</p>

<p><em>Edouard Chin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Eliminate queries loading dumped schema cache on Postgres
</title>
    <link>https://github.com/rails/rails/issues/54333</link>
    <guid>https://github.com/rails/rails/issues/54333</guid>
    <description>*   Eliminate queries loading dumped schema cache on Postgres

    Improve resiliency by avoiding needing to open a database connection to load the
    type map while defining attribute methods at boot when a schema cache file is
    configured on PostgreSQL databases.

    *James Coleman*</description>
    <pubDate>Thu, 23 Jan 2025 23:18:12 +0000</pubDate>
    <author>jcoleman</author>
    <content:encoded><![CDATA[<p>Eliminate queries loading dumped schema cache on Postgres</p>

<p>Improve resiliency by avoiding needing to open a database connection to load the<br />
type map while defining attribute methods at boot when a schema cache file is<br />
configured on PostgreSQL databases.</p>

<p><em>James Coleman</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `ActiveRecord::Coder::JSON` can be instantiated
</title>
    <link>https://github.com/rails/rails/issues/54172</link>
    <guid>https://github.com/rails/rails/issues/54172</guid>
    <description>*   `ActiveRecord::Coder::JSON` can be instantiated

    Options can now be passed to `ActiveRecord::Coder::JSON` when instantiating the coder. This allows:
    ```ruby
    serialize :config, coder: ActiveRecord::Coder::JSON.new(symbolize_names: true)
    ```
    *matthaigh27*</description>
    <pubDate>Tue, 21 Jan 2025 10:43:55 +0000</pubDate>
    <author>matt haigh</author>
    <content:encoded><![CDATA[<p><code>ActiveRecord::Coder::JSON</code> can be instantiated</p>

<p>Options can now be passed to <code>ActiveRecord::Coder::JSON</code> when instantiating the coder. This allows:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">serialize</span> <span class="ss">:config</span><span class="p">,</span> <span class="ss">coder: </span><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Coder</span><span class="o">::</span><span class="no">JSON</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">symbolize_names: </span><span class="kp">true</span><span class="p">)</span>
</code></pre></div></div>
<p><em>matthaigh27</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Deprecate using `insert_all`/`upsert_all` with unpersisted records in associations.
</title>
    <link>https://github.com/rails/rails/issues/53920</link>
    <guid>https://github.com/rails/rails/issues/53920</guid>
    <description>*   Deprecate using `insert_all`/`upsert_all` with unpersisted records in associations.

    Using these methods on associations containing unpersisted records will now
    show a deprecation warning, as the unpersisted records will be lost after
    the operation.

    *Nick Schwaderer*</description>
    <pubDate>Mon, 20 Jan 2025 18:20:36 +0000</pubDate>
    <author>Nick Schwaderer</author>
    <content:encoded><![CDATA[<p>Deprecate using <code>insert_all</code>/<code>upsert_all</code> with unpersisted records in associations.</p>

<p>Using these methods on associations containing unpersisted records will now<br />
show a deprecation warning, as the unpersisted records will be lost after<br />
the operation.</p>

<p><em>Nick Schwaderer</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Make column name optional for `index_exists?`.
</title>
    <link>https://github.com/rails/rails/issues/54298</link>
    <guid>https://github.com/rails/rails/issues/54298</guid>
    <description>*   Make column name optional for `index_exists?`.

    This aligns well with `remove_index` signature as well, where
    index name doesn&#39;t need to be derived from the column names.

    *Ali Ismayiliov*</description>
    <pubDate>Mon, 20 Jan 2025 09:20:31 +0000</pubDate>
    <author>Ali Ismayilov</author>
    <content:encoded><![CDATA[<p>Make column name optional for <code>index_exists?</code>.</p>

<p>This aligns well with <code>remove_index</code> signature as well, where<br />
index name doesn’t need to be derived from the column names.</p>

<p><em>Ali Ismayiliov</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Change the payload name of `sql.active_record` notification for eager
</title>
    <link>https://github.com/rails/rails/issues/54278</link>
    <guid>https://github.com/rails/rails/issues/54278</guid>
    <description>*   Change the payload name of `sql.active_record` notification for eager
    loading from &quot;SQL&quot; to &quot;#{model.name} Eager Load&quot;.

    *zzak*</description>
    <pubDate>Fri, 17 Jan 2025 19:43:00 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Change the payload name of <code>sql.active_record</code> notification for eager<br />
loading from “SQL” to “#{model.name} Eager Load”.</p>

<p><em>zzak</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Enable automatically retrying idempotent `#exists?` queries on connection
</title>
    <link>https://github.com/rails/rails/issues/54243</link>
    <guid>https://github.com/rails/rails/issues/54243</guid>
    <description>*   Enable automatically retrying idempotent `#exists?` queries on connection
    errors.

    *Hartley McGuire*, *classidied*</description>
    <pubDate>Tue, 14 Jan 2025 17:51:07 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Enable automatically retrying idempotent <code>#exists?</code> queries on connection<br />
errors.</p>

<p><em>Hartley McGuire</em>, <em>classidied</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Deprecate usage of unsupported methods in conjunction with `update_all`:
</title>
    <link>https://github.com/rails/rails/issues/54231</link>
    <guid>https://github.com/rails/rails/issues/54231</guid>
    <description>*   Deprecate usage of unsupported methods in conjunction with `update_all`:

    `update_all` will now print a deprecation message if a query includes either `WITH`,
    `WITH RECURSIVE` or `DISTINCT` statements. Those were never supported and were ignored
    when generating the SQL query.

    An error will be raised in a future Rails release. This behaviour will be consistent
    with `delete_all` which currently raises an error for unsupported statements.

    *Edouard Chin*</description>
    <pubDate>Tue, 14 Jan 2025 08:48:04 +0000</pubDate>
    <author>Edouard CHIN</author>
    <content:encoded><![CDATA[<p>Deprecate usage of unsupported methods in conjunction with <code>update_all</code>:</p>

<p><code>update_all</code> will now print a deprecation message if a query includes either <code>WITH</code>,<br />
<code>WITH RECURSIVE</code> or <code>DISTINCT</code> statements. Those were never supported and were ignored<br />
when generating the SQL query.</p>

<p>An error will be raised in a future Rails release. This behaviour will be consistent<br />
with <code>delete_all</code> which currently raises an error for unsupported statements.</p>

<p><em>Edouard Chin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: The table columns inside `schema.rb` are now sorted alphabetically.
</title>
    <link>https://github.com/rails/rails/issues/53281</link>
    <guid>https://github.com/rails/rails/issues/53281</guid>
    <description>*   The table columns inside `schema.rb` are now sorted alphabetically.

    Previously they&#39;d be sorted by creation order, which can cause merge conflicts when two
    branches modify the same table concurrently.

    *John Duff*</description>
    <pubDate>Tue, 07 Jan 2025 11:12:57 +0000</pubDate>
    <author>John Duff</author>
    <content:encoded><![CDATA[<p>The table columns inside <code>schema.rb</code> are now sorted alphabetically.</p>

<p>Previously they’d be sorted by creation order, which can cause merge conflicts when two<br />
branches modify the same table concurrently.</p>

<p><em>John Duff</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Introduce versions formatter for the schema dumper.
</title>
    <link>https://github.com/rails/rails/issues/53797</link>
    <guid>https://github.com/rails/rails/issues/53797</guid>
    <description>*   Introduce versions formatter for the schema dumper.

    It is now possible to override how schema dumper formats versions information inside the
    `structure.sql` file. Currently, the versions are simply sorted in the decreasing order.
    Within large teams, this can potentially cause many merge conflicts near the top of the list.

    Now, the custom formatter can be provided with a custom sorting logic (e.g. by hash values
    of the versions), which can greatly reduce the number of conflicts.

    *fatkodima*</description>
    <pubDate>Fri, 27 Dec 2024 12:54:23 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Introduce versions formatter for the schema dumper.</p>

<p>It is now possible to override how schema dumper formats versions information inside the<br />
<code>structure.sql</code> file. Currently, the versions are simply sorted in the decreasing order.<br />
Within large teams, this can potentially cause many merge conflicts near the top of the list.</p>

<p>Now, the custom formatter can be provided with a custom sorting logic (e.g. by hash values<br />
of the versions), which can greatly reduce the number of conflicts.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Serialized attributes can now be marked as comparable.
</title>
    <link>https://github.com/rails/rails/issues/53946</link>
    <guid>https://github.com/rails/rails/issues/53946</guid>
    <description>*   Serialized attributes can now be marked as comparable.

    A not rare issue when working with serialized attributes is that the serialized representation of an object
    can change over time. Either because you are migrating from one serializer to the other (e.g. YAML to JSON or to msgpack),
    or because the serializer used subtly changed its output.

    One example is libyaml that used to have some extra trailing whitespaces, and recently fixed that.
    When this sorts of thing happen, you end up with lots of records that report being changed even though
    they aren&#39;t, which in the best case leads to a lot more writes to the database and in the worst case lead to nasty bugs.

    The solution is to instead compare the deserialized representation of the object, however Active Record
    can&#39;t assume the deserialized object has a working `==` method. Hence why this new functionality is opt-in.

    ```ruby
    serialize :config, type: Hash, coder: JSON, comparable: true
    ```

    *Jean Boussier*</description>
    <pubDate>Sat, 14 Dec 2024 12:47:32 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Serialized attributes can now be marked as comparable.</p>

<p>A not rare issue when working with serialized attributes is that the serialized representation of an object<br />
can change over time. Either because you are migrating from one serializer to the other (e.g. YAML to JSON or to msgpack),<br />
or because the serializer used subtly changed its output.</p>

<p>One example is libyaml that used to have some extra trailing whitespaces, and recently fixed that.<br />
When this sorts of thing happen, you end up with lots of records that report being changed even though<br />
they aren’t, which in the best case leads to a lot more writes to the database and in the worst case lead to nasty bugs.</p>

<p>The solution is to instead compare the deserialized representation of the object, however Active Record<br />
can’t assume the deserialized object has a working <code>==</code> method. Hence why this new functionality is opt-in.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">serialize</span> <span class="ss">:config</span><span class="p">,</span> <span class="ss">type: </span><span class="no">Hash</span><span class="p">,</span> <span class="ss">coder: </span><span class="no">JSON</span><span class="p">,</span> <span class="ss">comparable: </span><span class="kp">true</span>
</code></pre></div></div>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix MySQL default functions getting dropped when changing a column&#39;s nullability.
</title>
    <link>https://github.com/rails/rails/issues/53838</link>
    <guid>https://github.com/rails/rails/issues/53838</guid>
    <description>*   Fix MySQL default functions getting dropped when changing a column&#39;s nullability.

    *Bastian Bartmann*</description>
    <pubDate>Tue, 10 Dec 2024 09:04:19 +0000</pubDate>
    <author>Bastian Bartmann</author>
    <content:encoded><![CDATA[<p>Fix MySQL default functions getting dropped when changing a column’s nullability.</p>

<p><em>Bastian Bartmann</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: SQLite extensions can be configured in `config/database.yml`.
</title>
    <link>https://github.com/rails/rails/issues/53827</link>
    <guid>https://github.com/rails/rails/issues/53827</guid>
    <description>*   SQLite extensions can be configured in `config/database.yml`.

    The database configuration option `extensions:` allows an application to load SQLite extensions
    when using `sqlite3` &gt;= v2.4.0. The array members may be filesystem paths or the names of
    modules that respond to `.to_path`:

    ``` yaml
    development:
      adapter: sqlite3
      extensions:
        - SQLean::UUID                     # module name responding to `.to_path`
        - .sqlpkg/nalgeon/crypto/crypto.so # or a filesystem path
        - &lt;%= AppExtensions.location %&gt;    # or ruby code returning a path
    ```

    *Mike Dalessio*</description>
    <pubDate>Wed, 04 Dec 2024 20:34:42 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>SQLite extensions can be configured in <code>config/database.yml</code>.</p>

<p>The database configuration option <code>extensions:</code> allows an application to load SQLite extensions<br />
when using <code>sqlite3</code> &gt;= v2.4.0. The array members may be filesystem paths or the names of<br />
modules that respond to <code>.to_path</code>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">development</span><span class="pi">:</span>
  <span class="na">adapter</span><span class="pi">:</span> <span class="s">sqlite3</span>
  <span class="na">extensions</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">SQLean::UUID</span>                     <span class="c1"># module name responding to `.to_path`</span>
    <span class="pi">-</span> <span class="s">.sqlpkg/nalgeon/crypto/crypto.so</span> <span class="c1"># or a filesystem path</span>
    <span class="pi">-</span> <span class="s">&lt;%= AppExtensions.location %&gt;</span>    <span class="c1"># or ruby code returning a path</span>
</code></pre></div></div>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `ActiveRecord::Middleware::ShardSelector` supports granular database connection switching.
</title>
    <link>https://github.com/rails/rails/issues/53783</link>
    <guid>https://github.com/rails/rails/issues/53783</guid>
    <description>*   `ActiveRecord::Middleware::ShardSelector` supports granular database connection switching.

    A new configuration option, `class_name:`, is introduced to
    `config.active_record.shard_selector` to allow an application to specify the abstract connection
    class to be switched by the shard selection middleware. The default class is
    `ActiveRecord::Base`.

    For example, this configuration tells `ShardSelector` to switch shards using
    `AnimalsRecord.connected_to`:

    ```
    config.active_record.shard_selector = { class_name: &quot;AnimalsRecord&quot; }
    ```

    *Mike Dalessio*</description>
    <pubDate>Tue, 03 Dec 2024 21:46:53 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p><code>ActiveRecord::Middleware::ShardSelector</code> supports granular database connection switching.</p>

<p>A new configuration option, <code>class_name:</code>, is introduced to<br />
<code>config.active_record.shard_selector</code> to allow an application to specify the abstract connection<br />
class to be switched by the shard selection middleware. The default class is<br />
<code>ActiveRecord::Base</code>.</p>

<p>For example, this configuration tells <code>ShardSelector</code> to switch shards using<br />
<code>AnimalsRecord.connected_to</code>:</p>

<pre><code>config.active_record.shard_selector = { class_name: "AnimalsRecord" }
</code></pre>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Reset relations after `insert_all`/`upsert_all`.
</title>
    <link>https://github.com/rails/rails/issues/45943</link>
    <guid>https://github.com/rails/rails/issues/45943</guid>
    <description>*   Reset relations after `insert_all`/`upsert_all`.

    Bulk insert/upsert methods will now call `reset` if used on a relation, matching the behavior of `update_all`.

    *Milo Winningham*</description>
    <pubDate>Tue, 03 Dec 2024 06:08:07 +0000</pubDate>
    <author>Milo Winningham</author>
    <content:encoded><![CDATA[<p>Reset relations after <code>insert_all</code>/<code>upsert_all</code>.</p>

<p>Bulk insert/upsert methods will now call <code>reset</code> if used on a relation, matching the behavior of <code>update_all</code>.</p>

<p><em>Milo Winningham</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Use `_N` as a parallel tests databases suffixes
</title>
    <link>https://github.com/rails/rails/issues/53790</link>
    <guid>https://github.com/rails/rails/issues/53790</guid>
    <description>*   Use `_N` as a parallel tests databases suffixes

    Peviously, `-N` was used as a suffix. This can cause problems for RDBMSes
    which do not support dashes in database names.

    *fatkodima*</description>
    <pubDate>Mon, 02 Dec 2024 08:29:28 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Use <code>_N</code> as a parallel tests databases suffixes</p>

<p>Peviously, <code>-N</code> was used as a suffix. This can cause problems for RDBMSes<br />
which do not support dashes in database names.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Remember when a database connection has recently been verified (for
</title>
    <link>https://github.com/rails/rails/issues/53672</link>
    <guid>https://github.com/rails/rails/issues/53672</guid>
    <description>*   Remember when a database connection has recently been verified (for
    two seconds, by default), to avoid repeated reverifications during a
    single request.

    This should recreate a similar rate of verification as in Rails 7.1,
    where connections are leased for the duration of a request, and thus
    only verified once.

    *Matthew Draper*</description>
    <pubDate>Thu, 28 Nov 2024 05:42:57 +0000</pubDate>
    <author>Matthew Draper</author>
    <content:encoded><![CDATA[<p>Remember when a database connection has recently been verified (for<br />
two seconds, by default), to avoid repeated reverifications during a<br />
single request.</p>

<p>This should recreate a similar rate of verification as in Rails 7.1,<br />
where connections are leased for the duration of a request, and thus<br />
only verified once.</p>

<p><em>Matthew Draper</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow to reset cache counters for multiple records.
</title>
    <link>https://github.com/rails/rails/issues/44971</link>
    <guid>https://github.com/rails/rails/issues/44971</guid>
    <description>*   Allow to reset cache counters for multiple records.

    ```
    Aircraft.reset_counters([1, 2, 3], :wheels_count)
    ```

    It produces much fewer queries compared to the custom implementation using looping over ids.
    Previously: `O(ids.size * counters.size)` queries, now: `O(ids.size + counters.size)` queries.

    *fatkodima*</description>
    <pubDate>Sat, 16 Nov 2024 18:00:12 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Allow to reset cache counters for multiple records.</p>

<pre><code>Aircraft.reset_counters([1, 2, 3], :wheels_count)
</code></pre>

<p>It produces much fewer queries compared to the custom implementation using looping over ids.<br />
Previously: <code>O(ids.size * counters.size)</code> queries, now: <code>O(ids.size + counters.size)</code> queries.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `affected_rows` to `sql.active_record` Notification.
</title>
    <link>https://github.com/rails/rails/issues/53277</link>
    <guid>https://github.com/rails/rails/issues/53277</guid>
    <description>*   Add `affected_rows` to `sql.active_record` Notification.

    *Hartley McGuire*</description>
    <pubDate>Sat, 16 Nov 2024 10:29:41 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Add <code>affected_rows</code> to <code>sql.active_record</code> Notification.</p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `sum` when performing a grouped calculation.
</title>
    <link>https://github.com/rails/rails/issues/53625</link>
    <guid>https://github.com/rails/rails/issues/53625</guid>
    <description>*   Fix `sum` when performing a grouped calculation.

    `User.group(:friendly).sum` no longer worked. This is fixed.

    *Edouard Chin*</description>
    <pubDate>Thu, 14 Nov 2024 03:56:47 +0000</pubDate>
    <author>Edouard CHIN</author>
    <content:encoded><![CDATA[<p>Fix <code>sum</code> when performing a grouped calculation.</p>

<p><code>User.group(:friendly).sum</code> no longer worked. This is fixed.</p>

<p><em>Edouard Chin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add support for enabling or disabling transactional tests per database.
</title>
    <link>https://github.com/rails/rails/issues/53139</link>
    <guid>https://github.com/rails/rails/issues/53139</guid>
    <description>*   Add support for enabling or disabling transactional tests per database.

    A test class can now override the default `use_transactional_tests` setting
    for individual databases, which can be useful if some databases need their
    current state to be accessible to an external process while tests are running.

    ```ruby
    class MostlyTransactionalTest &lt; ActiveSupport::TestCase
      self.use_transactional_tests = true
      skip_transactional_tests_for_database :shared
    end
    ```

    *Matthew Cheetham*, *Morgan Mareve*</description>
    <pubDate>Wed, 06 Nov 2024 15:31:32 +0000</pubDate>
    <author>Matthew John Cheetham</author>
    <content:encoded><![CDATA[<p>Add support for enabling or disabling transactional tests per database.</p>

<p>A test class can now override the default <code>use_transactional_tests</code> setting<br />
for individual databases, which can be useful if some databases need their<br />
current state to be accessible to an external process while tests are running.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MostlyTransactionalTest</span> <span class="o">&lt;</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="nb">self</span><span class="p">.</span><span class="nf">use_transactional_tests</span> <span class="o">=</span> <span class="kp">true</span>
  <span class="n">skip_transactional_tests_for_database</span> <span class="ss">:shared</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Matthew Cheetham</em>, <em>Morgan Mareve</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Cast `query_cache` value when using URL configuration.
</title>
    <link>https://github.com/rails/rails/issues/53491</link>
    <guid>https://github.com/rails/rails/issues/53491</guid>
    <description>*   Cast `query_cache` value when using URL configuration.

    *zzak*</description>
    <pubDate>Wed, 30 Oct 2024 12:45:24 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Cast <code>query_cache</code> value when using URL configuration.</p>

<p><em>zzak</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: NULLS NOT DISTINCT works with UNIQUE CONSTRAINT as well as UNIQUE INDEX.
</title>
    <link>https://github.com/rails/rails/issues/53456</link>
    <guid>https://github.com/rails/rails/issues/53456</guid>
    <description>*   NULLS NOT DISTINCT works with UNIQUE CONSTRAINT as well as UNIQUE INDEX.

    *Ryuta Kamizono*</description>
    <pubDate>Sun, 27 Oct 2024 03:19:29 +0000</pubDate>
    <author>Ryuta Kamizono</author>
    <content:encoded><![CDATA[<p>NULLS NOT DISTINCT works with UNIQUE CONSTRAINT as well as UNIQUE INDEX.</p>

<p><em>Ryuta Kamizono</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `PG::UnableToSend: no connection to the server` is now retryable as a connection-related exception
</title>
    <link>https://github.com/rails/rails/issues/53400</link>
    <guid>https://github.com/rails/rails/issues/53400</guid>
    <description>*   `PG::UnableToSend: no connection to the server` is now retryable as a connection-related exception

    *Kazuma Watanabe*</description>
    <pubDate>Thu, 24 Oct 2024 07:49:18 +0000</pubDate>
    <author>wata727</author>
    <content:encoded><![CDATA[<p><code>PG::UnableToSend: no connection to the server</code> is now retryable as a connection-related exception</p>

<p><em>Kazuma Watanabe</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Fix `Rails.application.reload_routes!` from clearing almost all routes.
</title>
    <link>https://github.com/rails/rails/issues/54306</link>
    <guid>https://github.com/rails/rails/issues/54306</guid>
    <description>*   Fix `Rails.application.reload_routes!` from clearing almost all routes.

    When calling `Rails.application.reload_routes!` inside a middleware of
    a Rake task, it was possible under certain conditions that all routes would be cleared.
    If ran inside a middleware, this would result in getting a 404 on most page you visit.
    This issue was only happening in development.

    *Edouard Chin*</description>
    <pubDate>Mon, 27 Jan 2025 20:15:44 +0000</pubDate>
    <author>Edouard CHIN</author>
    <content:encoded><![CDATA[<p>Fix <code>Rails.application.reload_routes!</code> from clearing almost all routes.</p>

<p>When calling <code>Rails.application.reload_routes!</code> inside a middleware of<br />
a Rake task, it was possible under certain conditions that all routes would be cleared.<br />
If ran inside a middleware, this would result in getting a 404 on most page you visit.<br />
This issue was only happening in development.</p>

<p><em>Edouard Chin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add resource name to the `ArgumentError` that&#39;s raised when invalid `:only` or `:except` options are given to `#resource` or `#resources`
</title>
    <link>https://github.com/rails/rails/issues/54163</link>
    <guid>https://github.com/rails/rails/issues/54163</guid>
    <description>*   Add resource name to the `ArgumentError` that&#39;s raised when invalid `:only` or `:except` options are given to `#resource` or `#resources`

    This makes it easier to locate the source of the problem, especially for routes drawn by gems.

    Before:
    ```
    :only and :except must include only [:index, :create, :new, :show, :update, :destroy, :edit], but also included [:foo, :bar]
    ```

    After:
    ```
    Route `resources :products` - :only and :except must include only [:index, :create, :new, :show, :update, :destroy, :edit], but also included [:foo, :bar]
    ```

    *Jeremy Green*</description>
    <pubDate>Wed, 08 Jan 2025 21:24:05 +0000</pubDate>
    <author>Jeremy Green</author>
    <content:encoded><![CDATA[<p>Add resource name to the <code>ArgumentError</code> that’s raised when invalid <code>:only</code> or <code>:except</code> options are given to <code>#resource</code> or <code>#resources</code></p>

<p>This makes it easier to locate the source of the problem, especially for routes drawn by gems.</p>

<p>Before:</p>
<pre><code>:only and :except must include only [:index, :create, :new, :show, :update, :destroy, :edit], but also included [:foo, :bar]
</code></pre>

<p>After:</p>
<pre><code>Route `resources :products` - :only and :except must include only [:index, :create, :new, :show, :update, :destroy, :edit], but also included [:foo, :bar]
</code></pre>

<p><em>Jeremy Green</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add `check_collisions` option to `ActionDispatch::Session::CacheStore`.
</title>
    <link>https://github.com/rails/rails/issues/53918</link>
    <guid>https://github.com/rails/rails/issues/53918</guid>
    <description>*   Add `check_collisions` option to `ActionDispatch::Session::CacheStore`.

    Newly generated session ids use 128 bits of randomness, which is more than
    enough to ensure collisions can&#39;t happen, but if you need to harden sessions
    even more, you can enable this option to check in the session store that the id
    is indeed free you can enable that option. This however incurs an extra write
    on session creation.

    *Shia*</description>
    <pubDate>Sat, 14 Dec 2024 09:18:23 +0000</pubDate>
    <author>Shia</author>
    <content:encoded><![CDATA[<p>Add <code>check_collisions</code> option to <code>ActionDispatch::Session::CacheStore</code>.</p>

<p>Newly generated session ids use 128 bits of randomness, which is more than<br />
enough to ensure collisions can’t happen, but if you need to harden sessions<br />
even more, you can enable this option to check in the session store that the id<br />
is indeed free you can enable that option. This however incurs an extra write<br />
on session creation.</p>

<p><em>Shia</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: In ExceptionWrapper, match backtrace lines with built templates more often,
</title>
    <link>https://github.com/rails/rails/issues/53763</link>
    <guid>https://github.com/rails/rails/issues/53763</guid>
    <description>*   In ExceptionWrapper, match backtrace lines with built templates more often,
    allowing improved highlighting of errors within do-end blocks in templates.
    Fix for Ruby 3.4 to match new method labels in backtrace.

    *Martin Emde*</description>
    <pubDate>Thu, 28 Nov 2024 18:50:39 +0000</pubDate>
    <author>Martin Emde</author>
    <content:encoded><![CDATA[<p>In ExceptionWrapper, match backtrace lines with built templates more often,<br />
allowing improved highlighting of errors within do-end blocks in templates.<br />
Fix for Ruby 3.4 to match new method labels in backtrace.</p>

<p><em>Martin Emde</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow setting content type with a symbol of the Mime type.
</title>
    <link>https://github.com/rails/rails/issues/53236</link>
    <guid>https://github.com/rails/rails/issues/53236</guid>
    <description>*   Allow setting content type with a symbol of the Mime type.

    ```ruby
    # Before
    response.content_type = &quot;text/html&quot;

    # After
    response.content_type = :html
    ```

    *Petrik de Heus*</description>
    <pubDate>Sat, 16 Nov 2024 10:36:32 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Allow setting content type with a symbol of the Mime type.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Before</span>
<span class="n">response</span><span class="p">.</span><span class="nf">content_type</span> <span class="o">=</span> <span class="s2">"text/html"</span>

<span class="c1"># After</span>
<span class="n">response</span><span class="p">.</span><span class="nf">content_type</span> <span class="o">=</span> <span class="ss">:html</span>
</code></pre></div></div>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Accept a block for `ActiveJob::ConfiguredJob#perform_later`.
</title>
    <link>https://github.com/rails/rails/issues/53859</link>
    <guid>https://github.com/rails/rails/issues/53859</guid>
    <description>*   Accept a block for `ActiveJob::ConfiguredJob#perform_later`.

    This was inconsistent with a regular `ActiveJob::Base#perform_later`.

    *fatkodima*</description>
    <pubDate>Fri, 06 Dec 2024 12:51:45 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Accept a block for <code>ActiveJob::ConfiguredJob#perform_later</code>.</p>

<p>This was inconsistent with a regular <code>ActiveJob::Base#perform_later</code>.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Raise a more specific error during deserialization when a previously serialized job class is now unknown.
</title>
    <link>https://github.com/rails/rails/issues/53770</link>
    <guid>https://github.com/rails/rails/issues/53770</guid>
    <description>*   Raise a more specific error during deserialization when a previously serialized job class is now unknown.

    `ActiveJob::UnknownJobClassError` will be raised instead of a more generic
    `NameError` to make it easily possible for adapters to tell if the `NameError`
    was raised during job execution or deserialization.

    *Earlopain*</description>
    <pubDate>Thu, 28 Nov 2024 19:34:53 +0000</pubDate>
    <author>Earlopain</author>
    <content:encoded><![CDATA[<p>Raise a more specific error during deserialization when a previously serialized job class is now unknown.</p>

<p><code>ActiveJob::UnknownJobClassError</code> will be raised instead of a more generic<br />
<code>NameError</code> to make it easily possible for adapters to tell if the <code>NameError</code><br />
was raised during job execution or deserialization.</p>

<p><em>Earlopain</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Change execution wrapping to report all exceptions, including `Exception`.
</title>
    <link>https://github.com/rails/rails/issues/54469</link>
    <guid>https://github.com/rails/rails/issues/54469</guid>
    <description>*   Change execution wrapping to report all exceptions, including `Exception`.

    If a more serious error like `SystemStackError` or `NoMemoryError` happens,
    the error reporter should be able to report these kinds of exceptions.

    *Gannon McGibbon*</description>
    <pubDate>Sat, 08 Feb 2025 10:25:00 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Change execution wrapping to report all exceptions, including <code>Exception</code>.</p>

<p>If a more serious error like <code>SystemStackError</code> or <code>NoMemoryError</code> happens,<br />
the error reporter should be able to report these kinds of exceptions.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::Testing::Parallelization.before_fork_hook` allows declaration of callbacks that
</title>
    <link>https://github.com/rails/rails/issues/54376</link>
    <guid>https://github.com/rails/rails/issues/54376</guid>
    <description>*   `ActiveSupport::Testing::Parallelization.before_fork_hook` allows declaration of callbacks that
    are invoked immediately before forking test workers.

    *Mike Dalessio*</description>
    <pubDate>Wed, 29 Jan 2025 13:47:11 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::Testing::Parallelization.before_fork_hook</code> allows declaration of callbacks that<br />
are invoked immediately before forking test workers.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Allow the `#freeze_time` testing helper to accept a date or time argument.
</title>
    <link>https://github.com/rails/rails/issues/54303</link>
    <guid>https://github.com/rails/rails/issues/54303</guid>
    <description>*   Allow the `#freeze_time` testing helper to accept a date or time argument.

    ```ruby
    Time.current # =&gt; Sun, 09 Jul 2024 15:34:49 EST -05:00
    freeze_time Time.current + 1.day
    sleep 1
    Time.current # =&gt; Mon, 10 Jul 2024 15:34:49 EST -05:00
    ```

    *Joshua Young*</description>
    <pubDate>Wed, 22 Jan 2025 20:43:41 +0000</pubDate>
    <author>Joshua Young</author>
    <content:encoded><![CDATA[<p>Allow the <code>#freeze_time</code> testing helper to accept a date or time argument.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Time</span><span class="p">.</span><span class="nf">current</span> <span class="c1"># =&gt; Sun, 09 Jul 2024 15:34:49 EST -05:00</span>
<span class="n">freeze_time</span> <span class="no">Time</span><span class="p">.</span><span class="nf">current</span> <span class="o">+</span> <span class="mi">1</span><span class="p">.</span><span class="nf">day</span>
<span class="nb">sleep</span> <span class="mi">1</span>
<span class="no">Time</span><span class="p">.</span><span class="nf">current</span> <span class="c1"># =&gt; Mon, 10 Jul 2024 15:34:49 EST -05:00</span>
</code></pre></div></div>

<p><em>Joshua Young</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::JSON` now accepts options
</title>
    <link>https://github.com/rails/rails/issues/54172</link>
    <guid>https://github.com/rails/rails/issues/54172</guid>
    <description>*   `ActiveSupport::JSON` now accepts options

    It is now possible to pass options to `ActiveSupport::JSON`:
    ```ruby
    ActiveSupport::JSON.decode(&#39;{&quot;key&quot;: &quot;value&quot;}&#39;, symbolize_names: true) # =&gt; { key: &quot;value&quot; }
    ```

    *matthaigh27*</description>
    <pubDate>Tue, 21 Jan 2025 10:43:55 +0000</pubDate>
    <author>matt haigh</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::JSON</code> now accepts options</p>

<p>It is now possible to pass options to <code>ActiveSupport::JSON</code>:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">JSON</span><span class="p">.</span><span class="nf">decode</span><span class="p">(</span><span class="s1">'{"key": "value"}'</span><span class="p">,</span> <span class="ss">symbolize_names: </span><span class="kp">true</span><span class="p">)</span> <span class="c1"># =&gt; { key: "value" }</span>
</code></pre></div></div>

<p><em>matthaigh27</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::Testing::NotificationAssertions`&#39;s `assert_notification` now matches against payload subsets by default.
</title>
    <link>https://github.com/rails/rails/issues/54126</link>
    <guid>https://github.com/rails/rails/issues/54126</guid>
    <description>*   `ActiveSupport::Testing::NotificationAssertions`&#39;s `assert_notification` now matches against payload subsets by default.

    Previously the following assertion would fail due to excess key vals in the notification payload. Now with payload subset matching, it will pass.

    ```ruby
    assert_notification(&quot;post.submitted&quot;, title: &quot;Cool Post&quot;) do
      ActiveSupport::Notifications.instrument(&quot;post.submitted&quot;, title: &quot;Cool Post&quot;, body: &quot;Cool Body&quot;)
    end
    ```

    Additionally, you can now persist a matched notification for more customized assertions.

    ```ruby
    notification = assert_notification(&quot;post.submitted&quot;, title: &quot;Cool Post&quot;) do
      ActiveSupport::Notifications.instrument(&quot;post.submitted&quot;, title: &quot;Cool Post&quot;, body: Body.new(&quot;Cool Body&quot;))
    end

    assert_instance_of(Body, notification.payload[:body])
    ```

    *Nicholas La Roux*</description>
    <pubDate>Wed, 08 Jan 2025 23:40:14 +0000</pubDate>
    <author>Nicholas La Roux</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::Testing::NotificationAssertions</code>’s <code>assert_notification</code> now matches against payload subsets by default.</p>

<p>Previously the following assertion would fail due to excess key vals in the notification payload. Now with payload subset matching, it will pass.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assert_notification</span><span class="p">(</span><span class="s2">"post.submitted"</span><span class="p">,</span> <span class="ss">title: </span><span class="s2">"Cool Post"</span><span class="p">)</span> <span class="k">do</span>
  <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Notifications</span><span class="p">.</span><span class="nf">instrument</span><span class="p">(</span><span class="s2">"post.submitted"</span><span class="p">,</span> <span class="ss">title: </span><span class="s2">"Cool Post"</span><span class="p">,</span> <span class="ss">body: </span><span class="s2">"Cool Body"</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Additionally, you can now persist a matched notification for more customized assertions.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">notification</span> <span class="o">=</span> <span class="n">assert_notification</span><span class="p">(</span><span class="s2">"post.submitted"</span><span class="p">,</span> <span class="ss">title: </span><span class="s2">"Cool Post"</span><span class="p">)</span> <span class="k">do</span>
  <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Notifications</span><span class="p">.</span><span class="nf">instrument</span><span class="p">(</span><span class="s2">"post.submitted"</span><span class="p">,</span> <span class="ss">title: </span><span class="s2">"Cool Post"</span><span class="p">,</span> <span class="ss">body: </span><span class="no">Body</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"Cool Body"</span><span class="p">))</span>
<span class="k">end</span>

<span class="n">assert_instance_of</span><span class="p">(</span><span class="no">Body</span><span class="p">,</span> <span class="n">notification</span><span class="p">.</span><span class="nf">payload</span><span class="p">[</span><span class="ss">:body</span><span class="p">])</span>
</code></pre></div></div>

<p><em>Nicholas La Roux</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate `String#mb_chars` and `ActiveSupport::Multibyte::Chars`.
</title>
    <link>https://github.com/rails/rails/issues/54081</link>
    <guid>https://github.com/rails/rails/issues/54081</guid>
    <description>*   Deprecate `String#mb_chars` and `ActiveSupport::Multibyte::Chars`.

    These APIs are a relic of the Ruby 1.8 days when Ruby strings weren&#39;t encoding
    aware. There is no legitimate reasons to need these APIs today.

    *Jean Boussier*</description>
    <pubDate>Wed, 08 Jan 2025 10:01:56 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Deprecate <code>String#mb_chars</code> and <code>ActiveSupport::Multibyte::Chars</code>.</p>

<p>These APIs are a relic of the Ruby 1.8 days when Ruby strings weren’t encoding<br />
aware. There is no legitimate reasons to need these APIs today.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate `ActiveSupport::Configurable`
</title>
    <link>https://github.com/rails/rails/issues/53970</link>
    <guid>https://github.com/rails/rails/issues/53970</guid>
    <description>*   Deprecate `ActiveSupport::Configurable`

    *Sean Doyle*</description>
    <pubDate>Tue, 07 Jan 2025 17:57:17 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Deprecate <code>ActiveSupport::Configurable</code></p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `nil.to_query(&quot;key&quot;)` now returns `key`.
</title>
    <link>https://github.com/rails/rails/issues/53962</link>
    <guid>https://github.com/rails/rails/issues/53962</guid>
    <description>*   `nil.to_query(&quot;key&quot;)` now returns `key`.

    Previously it would return `key=`, preventing round tripping with `Rack::Utils.parse_nested_query`.

    *Erol Fornoles*</description>
    <pubDate>Sun, 15 Dec 2024 15:40:58 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>nil.to_query("key")</code> now returns <code>key</code>.</p>

<p>Previously it would return <code>key=</code>, preventing round tripping with <code>Rack::Utils.parse_nested_query</code>.</p>

<p><em>Erol Fornoles</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Avoid wrapping redis in a `ConnectionPool` when using `ActiveSupport::Cache::RedisCacheStore` if the `:redis`
</title>
    <link>https://github.com/rails/rails/issues/53845</link>
    <guid>https://github.com/rails/rails/issues/53845</guid>
    <description>*   Avoid wrapping redis in a `ConnectionPool` when using `ActiveSupport::Cache::RedisCacheStore` if the `:redis`
    option is already a `ConnectionPool`.

    *Joshua Young*</description>
    <pubDate>Fri, 06 Dec 2024 08:19:55 +0000</pubDate>
    <author>Joshua Young</author>
    <content:encoded><![CDATA[<p>Avoid wrapping redis in a <code>ConnectionPool</code> when using <code>ActiveSupport::Cache::RedisCacheStore</code> if the <code>:redis</code><br />
option is already a <code>ConnectionPool</code>.</p>

<p><em>Joshua Young</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Alter `ERB::Util.tokenize` to return :PLAIN token with full input string when string doesn&#39;t contain ERB tags.
</title>
    <link>https://github.com/rails/rails/issues/53763</link>
    <guid>https://github.com/rails/rails/issues/53763</guid>
    <description>*   Alter `ERB::Util.tokenize` to return :PLAIN token with full input string when string doesn&#39;t contain ERB tags.

    *Martin Emde*</description>
    <pubDate>Thu, 28 Nov 2024 18:50:39 +0000</pubDate>
    <author>Martin Emde</author>
    <content:encoded><![CDATA[<p>Alter <code>ERB::Util.tokenize</code> to return :PLAIN token with full input string when string doesn’t contain ERB tags.</p>

<p><em>Martin Emde</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix a bug in `ERB::Util.tokenize` that causes incorrect tokenization when ERB tags are preceeded by multibyte characters.
</title>
    <link>https://github.com/rails/rails/issues/53655</link>
    <guid>https://github.com/rails/rails/issues/53655</guid>
    <description>*   Fix a bug in `ERB::Util.tokenize` that causes incorrect tokenization when ERB tags are preceeded by multibyte characters.

    *Martin Emde*</description>
    <pubDate>Sun, 17 Nov 2024 15:11:19 +0000</pubDate>
    <author>Martin Emde</author>
    <content:encoded><![CDATA[<p>Fix a bug in <code>ERB::Util.tokenize</code> that causes incorrect tokenization when ERB tags are preceeded by multibyte characters.</p>

<p><em>Martin Emde</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `ActiveSupport::Testing::NotificationAssertions` module to help with testing `ActiveSupport::Notifications`.
</title>
    <link>https://github.com/rails/rails/issues/53065</link>
    <guid>https://github.com/rails/rails/issues/53065</guid>
    <description>*   Add `ActiveSupport::Testing::NotificationAssertions` module to help with testing `ActiveSupport::Notifications`.

    *Nicholas La Roux*, *Yishu See*, *Sean Doyle*</description>
    <pubDate>Fri, 15 Nov 2024 15:31:58 +0000</pubDate>
    <author>Nicholas La Roux</author>
    <content:encoded><![CDATA[<p>Add <code>ActiveSupport::Testing::NotificationAssertions</code> module to help with testing <code>ActiveSupport::Notifications</code>.</p>

<p><em>Nicholas La Roux</em>, <em>Yishu See</em>, <em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::CurrentAttributes#attributes` now will return a new hash object on each call.
</title>
    <link>https://github.com/rails/rails/issues/53440</link>
    <guid>https://github.com/rails/rails/issues/53440</guid>
    <description>*   `ActiveSupport::CurrentAttributes#attributes` now will return a new hash object on each call.

    Previously, the same hash object was returned each time that method was called.

    *fatkodima*</description>
    <pubDate>Thu, 24 Oct 2024 22:05:01 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::CurrentAttributes#attributes</code> now will return a new hash object on each call.</p>

<p>Previously, the same hash object was returned each time that method was called.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::JSON.encode` supports CIDR notation.
</title>
    <link>https://github.com/rails/rails/issues/53393</link>
    <guid>https://github.com/rails/rails/issues/53393</guid>
    <description>*   `ActiveSupport::JSON.encode` supports CIDR notation.

    Previously:

    ```ruby
    ActiveSupport::JSON.encode(IPAddr.new(&quot;172.16.0.0/24&quot;)) # =&gt; &quot;\&quot;172.16.0.0\&quot;&quot;
    ```

    After this change:

    ```ruby
    ActiveSupport::JSON.encode(IPAddr.new(&quot;172.16.0.0/24&quot;)) # =&gt; &quot;\&quot;172.16.0.0/24\&quot;&quot;
    ```

    *Taketo Takashima*</description>
    <pubDate>Mon, 21 Oct 2024 23:47:55 +0000</pubDate>
    <author>Taketo Takashima</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::JSON.encode</code> supports CIDR notation.</p>

<p>Previously:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">JSON</span><span class="p">.</span><span class="nf">encode</span><span class="p">(</span><span class="no">IPAddr</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"172.16.0.0/24"</span><span class="p">))</span> <span class="c1"># =&gt; "\"172.16.0.0\""</span>
</code></pre></div></div>

<p>After this change:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">JSON</span><span class="p">.</span><span class="nf">encode</span><span class="p">(</span><span class="no">IPAddr</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"172.16.0.0/24"</span><span class="p">))</span> <span class="c1"># =&gt; "\"172.16.0.0/24\""</span>
</code></pre></div></div>

<p><em>Taketo Takashima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Make `ActiveSupport::FileUpdateChecker` faster when checking many file-extensions.
</title>
    <link>https://github.com/rails/rails/issues/53680</link>
    <guid>https://github.com/rails/rails/issues/53680</guid>
    <description>*   Make `ActiveSupport::FileUpdateChecker` faster when checking many file-extensions.

    *Jonathan del Strother*</description>
    <pubDate>Fri, 22 Nov 2024 10:42:29 +0000</pubDate>
    <author>Jonathan del Strother</author>
    <content:encoded><![CDATA[<p>Make <code>ActiveSupport::FileUpdateChecker</code> faster when checking many file-extensions.</p>

<p><em>Jonathan del Strother</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>guides: In the Active Job bug report template set the queue adapter to the
</title>
    <link>https://github.com/rails/rails/issues/53963</link>
    <guid>https://github.com/rails/rails/issues/53963</guid>
    <description>*   In the Active Job bug report template set the queue adapter to the
    test adapter so that `assert_enqueued_with` can pass.

    *Andrew White*</description>
    <pubDate>Sun, 15 Dec 2024 16:23:17 +0000</pubDate>
    <author>Andrew White</author>
    <content:encoded><![CDATA[<p>In the Active Job bug report template set the queue adapter to the<br />
test adapter so that <code>assert_enqueued_with</code> can pass.</p>

<p><em>Andrew White</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>guides: Ensure all bug report templates set `config.secret_key_base` to avoid
</title>
    <link>https://github.com/rails/rails/issues/53963</link>
    <guid>https://github.com/rails/rails/issues/53963</guid>
    <description>*   Ensure all bug report templates set `config.secret_key_base` to avoid
    generation of `tmp/local_secret.txt` files when running the report template.

    *Andrew White*</description>
    <pubDate>Sun, 15 Dec 2024 16:23:17 +0000</pubDate>
    <author>Andrew White</author>
    <content:encoded><![CDATA[<p>Ensure all bug report templates set <code>config.secret_key_base</code> to avoid<br />
generation of <code>tmp/local_secret.txt</code> files when running the report template.</p>

<p><em>Andrew White</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailbox: Add `reply_to_address` extension method on `Mail::Message`.
</title>
    <link>https://github.com/rails/rails/issues/53513</link>
    <guid>https://github.com/rails/rails/issues/53513</guid>
    <description>*   Add `reply_to_address` extension method on `Mail::Message`.

    *Mr0grog*</description>
    <pubDate>Mon, 27 Jan 2025 10:03:49 +0000</pubDate>
    <author>Rob Brackett</author>
    <content:encoded><![CDATA[<p>Add <code>reply_to_address</code> extension method on <code>Mail::Message</code>.</p>

<p><em>Mr0grog</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Change `ActionText::RichText#embeds` assignment from `before_save` to `before_validation`
</title>
    <link>https://github.com/rails/rails/issues/53847</link>
    <guid>https://github.com/rails/rails/issues/53847</guid>
    <description>*   Change `ActionText::RichText#embeds` assignment from `before_save` to `before_validation`

    *Sean Doyle*</description>
    <pubDate>Mon, 09 Dec 2024 22:56:25 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Change <code>ActionText::RichText#embeds</code> assignment from <code>before_save</code> to <code>before_validation</code></p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Respect `html_options[:form]` when `collection_checkboxes` generates the
</title>
    <link>https://github.com/rails/rails/issues/51746</link>
    <guid>https://github.com/rails/rails/issues/51746</guid>
    <description>*   Respect `html_options[:form]` when `collection_checkboxes` generates the
    hidden `&lt;input&gt;`.

    *Riccardo Odone*</description>
    <pubDate>Wed, 08 Jan 2025 16:03:11 +0000</pubDate>
    <author>3v0k4</author>
    <content:encoded><![CDATA[<p>Respect <code>html_options[:form]</code> when <code>collection_checkboxes</code> generates the<br />
hidden <code>&lt;input&gt;</code>.</p>

<p><em>Riccardo Odone</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Layouts have access to local variables passed to `render`.
</title>
    <link>https://github.com/rails/rails/issues/54020</link>
    <guid>https://github.com/rails/rails/issues/54020</guid>
    <description>*   Layouts have access to local variables passed to `render`.

    This fixes #31680 which was a regression in Rails 5.1.

    *Mike Dalessio*</description>
    <pubDate>Mon, 06 Jan 2025 21:07:51 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>Layouts have access to local variables passed to <code>render</code>.</p>

<p>This fixes #31680 which was a regression in Rails 5.1.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Argument errors related to strict locals in templates now raise an
</title>
    <link>https://github.com/rails/rails/issues/54133</link>
    <guid>https://github.com/rails/rails/issues/54133</guid>
    <description>*   Argument errors related to strict locals in templates now raise an
    `ActionView::StrictLocalsError`, and all other argument errors are reraised as-is.

    Previously, any `ArgumentError` raised during template rendering was swallowed during strict
    local error handling, so that an `ArgumentError` unrelated to strict locals (e.g., a helper
    method invoked with incorrect arguments) would be replaced by a similar `ArgumentError` with an
    unrelated backtrace, making it difficult to debug templates.

    Now, any `ArgumentError` unrelated to strict locals is reraised, preserving the original
    backtrace for developers.

    Also note that `ActionView::StrictLocalsError` is a subclass of `ArgumentError`, so any existing
    code that rescues `ArgumentError` will continue to work.

    Fixes #52227.

    *Mike Dalessio*</description>
    <pubDate>Mon, 06 Jan 2025 20:25:12 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>Argument errors related to strict locals in templates now raise an<br />
<code>ActionView::StrictLocalsError</code>, and all other argument errors are reraised as-is.</p>

<p>Previously, any <code>ArgumentError</code> raised during template rendering was swallowed during strict<br />
local error handling, so that an <code>ArgumentError</code> unrelated to strict locals (e.g., a helper<br />
method invoked with incorrect arguments) would be replaced by a similar <code>ArgumentError</code> with an<br />
unrelated backtrace, making it difficult to debug templates.</p>

<p>Now, any <code>ArgumentError</code> unrelated to strict locals is reraised, preserving the original<br />
backtrace for developers.</p>

<p>Also note that <code>ActionView::StrictLocalsError</code> is a subclass of <code>ArgumentError</code>, so any existing<br />
code that rescues <code>ArgumentError</code> will continue to work.</p>

<p>Fixes #52227.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Improve error highlighting of multi-line methods in ERB templates or
</title>
    <link>https://github.com/rails/rails/issues/53763</link>
    <guid>https://github.com/rails/rails/issues/53763</guid>
    <description>*   Improve error highlighting of multi-line methods in ERB templates or
    templates where the error occurs within a do-end block.

    *Martin Emde*</description>
    <pubDate>Thu, 28 Nov 2024 18:50:39 +0000</pubDate>
    <author>Martin Emde</author>
    <content:encoded><![CDATA[<p>Improve error highlighting of multi-line methods in ERB templates or<br />
templates where the error occurs within a do-end block.</p>

<p><em>Martin Emde</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Fix a crash in ERB template error highlighting when the error occurs on a
</title>
    <link>https://github.com/rails/rails/issues/53696</link>
    <guid>https://github.com/rails/rails/issues/53696</guid>
    <description>*   Fix a crash in ERB template error highlighting when the error occurs on a
    line in the compiled template that is past the end of the source template.

    *Martin Emde*</description>
    <pubDate>Fri, 22 Nov 2024 05:49:40 +0000</pubDate>
    <author>Martin Emde</author>
    <content:encoded><![CDATA[<p>Fix a crash in ERB template error highlighting when the error occurs on a<br />
line in the compiled template that is past the end of the source template.</p>

<p><em>Martin Emde</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Improve reliability of ERB template error highlighting.
</title>
    <link>https://github.com/rails/rails/issues/53657</link>
    <guid>https://github.com/rails/rails/issues/53657</guid>
    <description>*   Improve reliability of ERB template error highlighting.
    Fix infinite loops and crashes in highlighting and
    improve tolerance for alternate ERB handlers.

    *Martin Emde*</description>
    <pubDate>Thu, 21 Nov 2024 19:56:27 +0000</pubDate>
    <author>Martin Emde</author>
    <content:encoded><![CDATA[<p>Improve reliability of ERB template error highlighting.<br />
Fix infinite loops and crashes in highlighting and<br />
improve tolerance for alternate ERB handlers.</p>

<p><em>Martin Emde</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Allow `hidden_field` and `hidden_field_tag` to accept a custom autocomplete value.
</title>
    <link>https://github.com/rails/rails/issues/53512</link>
    <guid>https://github.com/rails/rails/issues/53512</guid>
    <description>*   Allow `hidden_field` and `hidden_field_tag` to accept a custom autocomplete value.

    *brendon*</description>
    <pubDate>Fri, 15 Nov 2024 11:28:47 +0000</pubDate>
    <author>Brendon Muir</author>
    <content:encoded><![CDATA[<p>Allow <code>hidden_field</code> and <code>hidden_field_tag</code> to accept a custom autocomplete value.</p>

<p><em>brendon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Delegate `ActiveStorage::Filename#to_str` to `#to_s`
</title>
    <link>https://github.com/rails/rails/issues/54185</link>
    <guid>https://github.com/rails/rails/issues/54185</guid>
    <description>*   Delegate `ActiveStorage::Filename#to_str` to `#to_s`

    Supports checking String equality:

    ```ruby
    filename = ActiveStorage::Filename.new(&quot;file.txt&quot;)
    filename == &quot;file.txt&quot; # =&gt; true
    filename in &quot;file.txt&quot; # =&gt; true
    &quot;file.txt&quot; == filename # =&gt; true
    ```

    *Sean Doyle*</description>
    <pubDate>Fri, 10 Jan 2025 19:15:09 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Delegate <code>ActiveStorage::Filename#to_str</code> to <code>#to_s</code></p>

<p>Supports checking String equality:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">filename</span> <span class="o">=</span> <span class="no">ActiveStorage</span><span class="o">::</span><span class="no">Filename</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"file.txt"</span><span class="p">)</span>
<span class="n">filename</span> <span class="o">==</span> <span class="s2">"file.txt"</span> <span class="c1"># =&gt; true</span>
<span class="n">filename</span> <span class="k">in</span> <span class="s2">"file.txt"</span> <span class="c1"># =&gt; true</span>
<span class="s2">"file.txt"</span> <span class="o">==</span> <span class="n">filename</span> <span class="c1"># =&gt; true</span>
</code></pre></div></div>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Add support for alternative MD5 implementation through `config.active_storage.checksum_implementation`.
</title>
    <link>https://github.com/rails/rails/issues/54040</link>
    <guid>https://github.com/rails/rails/issues/54040</guid>
    <description>*   Add support for alternative MD5 implementation through `config.active_storage.checksum_implementation`.

    Also automatically degrade to using the slower `Digest::MD5` implementation if `OpenSSL::Digest::MD5`
    is found to be disabled because of OpenSSL FIPS mode.

    *Matt Pasquini*, *Jean Boussier*</description>
    <pubDate>Sat, 04 Jan 2025 12:09:08 +0000</pubDate>
    <author>Matt Pasquini</author>
    <content:encoded><![CDATA[<p>Add support for alternative MD5 implementation through <code>config.active_storage.checksum_implementation</code>.</p>

<p>Also automatically degrade to using the slower <code>Digest::MD5</code> implementation if <code>OpenSSL::Digest::MD5</code><br />
is found to be disabled because of OpenSSL FIPS mode.</p>

<p><em>Matt Pasquini</em>, <em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: A Blob will no longer autosave associated Attachment.
</title>
    <link>https://github.com/rails/rails/issues/53623</link>
    <guid>https://github.com/rails/rails/issues/53623</guid>
    <description>*   A Blob will no longer autosave associated Attachment.

    This fixes an issue where a record with an attachment would have
    its dirty attributes reset, preventing your `after commit` callbacks
    on that record to behave as expected.

    Note that this change doesn&#39;t require any changes on your application
    and is supposed to be internal. Active Storage Attachment will continue
    to be autosaved (through a different relation).

    *Edouard-chin*</description>
    <pubDate>Thu, 19 Dec 2024 09:39:50 +0000</pubDate>
    <author>Edouard CHIN</author>
    <content:encoded><![CDATA[<p>A Blob will no longer autosave associated Attachment.</p>

<p>This fixes an issue where a record with an attachment would have<br />
its dirty attributes reset, preventing your <code>after commit</code> callbacks<br />
on that record to behave as expected.</p>

<p>Note that this change doesn’t require any changes on your application<br />
and is supposed to be internal. Active Storage Attachment will continue<br />
to be autosaved (through a different relation).</p>

<p><em>Edouard-chin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Rate limit password resets in authentication generator
</title>
    <link>https://github.com/rails/rails/issues/54442</link>
    <guid>https://github.com/rails/rails/issues/54442</guid>
    <description>*   Rate limit password resets in authentication generator

    This helps mitigate abuse from attackers spamming the password reset form.

    *Chris Oliver*</description>
    <pubDate>Thu, 06 Feb 2025 10:05:33 +0000</pubDate>
    <author>Chris Oliver</author>
    <content:encoded><![CDATA[<p>Rate limit password resets in authentication generator</p>

<p>This helps mitigate abuse from attackers spamming the password reset form.</p>

<p><em>Chris Oliver</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Update `rails new --minimal` option
</title>
    <link>https://github.com/rails/rails/issues/54313</link>
    <guid>https://github.com/rails/rails/issues/54313</guid>
    <description>*   Update `rails new --minimal` option

    Extend the `--minimal` flag to exlcude recently added features:
    `skip_brakeman`, `skip_ci`, `skip_docker`, `skip_kamal`, `skip_rubocop`, `skip_solid` and `skip_thruster`.

    *eelcoj*</description>
    <pubDate>Fri, 24 Jan 2025 20:48:43 +0000</pubDate>
    <author>eelco</author>
    <content:encoded><![CDATA[<p>Update <code>rails new --minimal</code> option</p>

<p>Extend the <code>--minimal</code> flag to exlcude recently added features:<br />
<code>skip_brakeman</code>, <code>skip_ci</code>, <code>skip_docker</code>, <code>skip_kamal</code>, <code>skip_rubocop</code>, <code>skip_solid</code> and <code>skip_thruster</code>.</p>

<p><em>eelcoj</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `application-name` metadata to application layout
</title>
    <link>https://github.com/rails/rails/issues/54257</link>
    <guid>https://github.com/rails/rails/issues/54257</guid>
    <description>*   Add `application-name` metadata to application layout

    The following metatag will be added to `app/views/layouts/application.html.erb`

    ```html
    &lt;meta name=&quot;application-name&quot; content=&quot;Name of Rails Application&quot;&gt;
    ```

    *Steve Polito*</description>
    <pubDate>Fri, 17 Jan 2025 21:07:43 +0000</pubDate>
    <author>Steve Polito</author>
    <content:encoded><![CDATA[<p>Add <code>application-name</code> metadata to application layout</p>

<p>The following metatag will be added to <code>app/views/layouts/application.html.erb</code></p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"application-name"</span> <span class="na">content=</span><span class="s">"Name of Rails Application"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p><em>Steve Polito</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Use `secret_key_base` from ENV or credentials when present locally.
</title>
    <link>https://github.com/rails/rails/issues/53705</link>
    <guid>https://github.com/rails/rails/issues/53705</guid>
    <description>*   Use `secret_key_base` from ENV or credentials when present locally.

    When ENV[&quot;SECRET_KEY_BASE&quot;] or
    `Rails.application.credentials.secret_key_base` is set for test or
    development, it is used for the `Rails.config.secret_key_base`,
    instead of generating a `tmp/local_secret.txt` file.

    *Petrik de Heus*</description>
    <pubDate>Fri, 17 Jan 2025 20:03:05 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Use <code>secret_key_base</code> from ENV or credentials when present locally.</p>

<p>When ENV[“SECRET_KEY_BASE”] or<br />
<code>Rails.application.credentials.secret_key_base</code> is set for test or<br />
development, it is used for the <code>Rails.config.secret_key_base</code>,<br />
instead of generating a <code>tmp/local_secret.txt</code> file.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Introduce `RAILS_MASTER_KEY` placeholder in generated ci.yml files
</title>
    <link>https://github.com/rails/rails/issues/52230</link>
    <guid>https://github.com/rails/rails/issues/52230</guid>
    <description>*   Introduce `RAILS_MASTER_KEY` placeholder in generated ci.yml files

    *Steve Polito*</description>
    <pubDate>Tue, 07 Jan 2025 18:30:52 +0000</pubDate>
    <author>Steve Polito</author>
    <content:encoded><![CDATA[<p>Introduce <code>RAILS_MASTER_KEY</code> placeholder in generated ci.yml files</p>

<p><em>Steve Polito</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Colorize the Rails console prompt even on non standard environments.
</title>
    <link>https://github.com/rails/rails/issues/53027</link>
    <guid>https://github.com/rails/rails/issues/53027</guid>
    <description>*   Colorize the Rails console prompt even on non standard environments.

    *Lorenzo Zabot*</description>
    <pubDate>Tue, 07 Jan 2025 16:24:11 +0000</pubDate>
    <author>Lorenzo Zabot</author>
    <content:encoded><![CDATA[<p>Colorize the Rails console prompt even on non standard environments.</p>

<p><em>Lorenzo Zabot</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Don&#39;t enable YJIT in development and test environments
</title>
    <link>https://github.com/rails/rails/issues/53746</link>
    <guid>https://github.com/rails/rails/issues/53746</guid>
    <description>*   Don&#39;t enable YJIT in development and test environments

    Development and test environments tend to reload code and redefine methods (e.g. mocking),
    hence YJIT isn&#39;t generally faster in these environments.

    *Ali Ismayilov*, *Jean Boussier*</description>
    <pubDate>Tue, 26 Nov 2024 10:45:59 +0000</pubDate>
    <author>Ali Ismayilov</author>
    <content:encoded><![CDATA[<p>Don’t enable YJIT in development and test environments</p>

<p>Development and test environments tend to reload code and redefine methods (e.g. mocking),<br />
hence YJIT isn’t generally faster in these environments.</p>

<p><em>Ali Ismayilov</em>, <em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Only include PermissionsPolicy::Middleware if policy is configured.
</title>
    <link>https://github.com/rails/rails/issues/53621</link>
    <guid>https://github.com/rails/rails/issues/53621</guid>
    <description>*   Only include PermissionsPolicy::Middleware if policy is configured.

    *Petrik de Heus*</description>
    <pubDate>Fri, 15 Nov 2024 21:30:01 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Only include PermissionsPolicy::Middleware if policy is configured.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
</channel>
</rss>


