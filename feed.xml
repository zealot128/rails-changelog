<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
<title>Rails Changelog</title>
<link>https://zealot128.github.io/rails-changelog</link>
<description>Changelog for Rails</description>
<atom:link href="https://zealot128.github.io/rails-changelog/feed.xml" rel="self" type="application/rss+xml" />
  <item>
    <title>activestorage: Disables the session in `ActiveStorage::Blobs::ProxyController`
</title>
    <link>https://github.com/rails/rails/issues/48869</link>
    <guid>https://github.com/rails/rails/issues/48869</guid>
    <description>*   Disables the session in `ActiveStorage::Blobs::ProxyController`
    and `ActiveStorage::Representations::ProxyController`
    in order to allow caching by default in some CDNs as CloudFlare

    Fixes #44136

    *Bruno Prieto*</description>
    <pubDate>Thu, 03 Aug 2023 20:00:34 +0000</pubDate>
    <author>Bruno Prieto</author>
    <content:encoded><![CDATA[<p>Disables the session in <code>ActiveStorage::Blobs::ProxyController</code><br />
and <code>ActiveStorage::Representations::ProxyController</code><br />
in order to allow caching by default in some CDNs as CloudFlare</p>

<p>Fixes #44136</p>

<p><em>Bruno Prieto</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Add `tags` to `ActiveStorage::Analyzer::AudioAnalyzer` output
</title>
    <link>https://github.com/rails/rails/issues/48823</link>
    <guid>https://github.com/rails/rails/issues/48823</guid>
    <description>*   Add `tags` to `ActiveStorage::Analyzer::AudioAnalyzer` output

    *Keaton Roux*</description>
    <pubDate>Fri, 28 Jul 2023 00:38:28 +0000</pubDate>
    <author>Keaton Roux</author>
    <content:encoded><![CDATA[<p>Add <code>tags</code> to <code>ActiveStorage::Analyzer::AudioAnalyzer</code> output</p>

<p><em>Keaton Roux</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Add an option to preprocess variants
</title>
    <link>https://github.com/rails/rails/issues/47473</link>
    <guid>https://github.com/rails/rails/issues/47473</guid>
    <description>*   Add an option to preprocess variants

    ActiveStorage variants are processed on the fly when they are needed but
    sometimes we&#39;re sure that they are accessed and want to processed them
    upfront.

    `preprocessed` option is added when declaring variants.

    ```
    class User &lt; ApplicationRecord
      has_one_attached :avatar do |attachable|
        attachable.variant :thumb, resize_to_limit: [100, 100], preprocessed: true
      end
    end
    ```

    *Shouichi Kamiya*</description>
    <pubDate>Mon, 03 Jul 2023 13:25:03 +0000</pubDate>
    <author>Shouichi Kamiya</author>
    <content:encoded><![CDATA[<p>Add an option to preprocess variants</p>

<p>ActiveStorage variants are processed on the fly when they are needed but<br />
sometimes we’re sure that they are accessed and want to processed them<br />
upfront.</p>

<p><code>preprocessed</code> option is added when declaring variants.</p>

<pre><code>class User &lt; ApplicationRecord
  has_one_attached :avatar do |attachable|
    attachable.variant :thumb, resize_to_limit: [100, 100], preprocessed: true
  end
end
</code></pre>

<p><em>Shouichi Kamiya</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Fix variants not included when eager loading multiple records containing a single attachment
</title>
    <link>https://github.com/rails/rails/issues/47370</link>
    <guid>https://github.com/rails/rails/issues/47370</guid>
    <description>*   Fix variants not included when eager loading multiple records containing a single attachment

    When using the `with_attached_#{name}` scope for a `has_one_attached` relation,
    attachment variants were not eagerly loaded.

    *Russell Porter*</description>
    <pubDate>Thu, 29 Jun 2023 19:28:06 +0000</pubDate>
    <author>Russell Porter</author>
    <content:encoded><![CDATA[<p>Fix variants not included when eager loading multiple records containing a single attachment</p>

<p>When using the <code>with_attached_#{name}</code> scope for a <code>has_one_attached</code> relation,<br />
attachment variants were not eagerly loaded.</p>

<p><em>Russell Porter</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Allow an ActiveStorage attachment to be removed via a form post
</title>
    <link>https://github.com/rails/rails/issues/48339</link>
    <guid>https://github.com/rails/rails/issues/48339</guid>
    <description>*   Allow an ActiveStorage attachment to be removed via a form post

    Attachments can already be removed by updating the attachment to be nil such as:
    ```ruby
    User.find(params[:id]).update!(avatar: nil)
    ```

    However, a form cannot post a nil param, it can only post an empty string. But, posting an
    empty string would result in an `ActiveSupport::MessageVerifier::InvalidSignature: mismatched digest`
    error being raised, because it&#39;s being treated as a signed blob id.

    Now, nil and an empty string are treated as a delete, which allows attachments to be removed via:
    ```ruby
    User.find(params[:id]).update!(params.require(:user).permit(:avatar))

    ```

    *Nate Matykiewicz*</description>
    <pubDate>Thu, 01 Jun 2023 23:17:02 +0000</pubDate>
    <author>Nate Matykiewicz</author>
    <content:encoded><![CDATA[<p>Allow an ActiveStorage attachment to be removed via a form post</p>

<p>Attachments can already be removed by updating the attachment to be nil such as:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">User</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">]).</span><span class="nf">update!</span><span class="p">(</span><span class="ss">avatar: </span><span class="kp">nil</span><span class="p">)</span>
</code></pre></div></div>

<p>However, a form cannot post a nil param, it can only post an empty string. But, posting an<br />
empty string would result in an <code>ActiveSupport::MessageVerifier::InvalidSignature: mismatched digest</code><br />
error being raised, because it’s being treated as a signed blob id.</p>

<p>Now, nil and an empty string are treated as a delete, which allows attachments to be removed via:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">User</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">]).</span><span class="nf">update!</span><span class="p">(</span><span class="n">params</span><span class="p">.</span><span class="nf">require</span><span class="p">(</span><span class="ss">:user</span><span class="p">).</span><span class="nf">permit</span><span class="p">(</span><span class="ss">:avatar</span><span class="p">))</span>

</code></pre></div></div>

<p><em>Nate Matykiewicz</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Remove mini_mime usage in favour of marcel.
</title>
    <link>https://github.com/rails/rails/issues/47754</link>
    <guid>https://github.com/rails/rails/issues/47754</guid>
    <description>*   Remove mini_mime usage in favour of marcel.

    We have two libraries that are have similar usage. This change removes
    dependency on mini_mime and makes use of similar methods from marcel.

    *Vipul A M*</description>
    <pubDate>Mon, 27 Mar 2023 18:54:16 +0000</pubDate>
    <author>Vipul A M</author>
    <content:encoded><![CDATA[<p>Remove mini_mime usage in favour of marcel.</p>

<p>We have two libraries that are have similar usage. This change removes<br />
dependency on mini_mime and makes use of similar methods from marcel.</p>

<p><em>Vipul A M</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Allow destroying active storage variants
</title>
    <link>https://github.com/rails/rails/issues/47150</link>
    <guid>https://github.com/rails/rails/issues/47150</guid>
    <description>*   Allow destroying active storage variants

    ```ruby
    User.first.avatar.variant(resize_to_limit: [100, 100]).destroy
    ```

    *Shouichi Kamiya*, *Yuichiro NAKAGAWA*, *Ryohei UEDA*</description>
    <pubDate>Sat, 25 Mar 2023 16:55:06 +0000</pubDate>
    <author>Shouichi Kamiya</author>
    <content:encoded><![CDATA[<p>Allow destroying active storage variants</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">User</span><span class="p">.</span><span class="nf">first</span><span class="p">.</span><span class="nf">avatar</span><span class="p">.</span><span class="nf">variant</span><span class="p">(</span><span class="ss">resize_to_limit: </span><span class="p">[</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">]).</span><span class="nf">destroy</span>
</code></pre></div></div>

<p><em>Shouichi Kamiya</em>, <em>Yuichiro NAKAGAWA</em>, <em>Ryohei UEDA</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Add `sample_rate` to `ActiveStorage::Analyzer::AudioAnalyzer` output
</title>
    <link>https://github.com/rails/rails/issues/47749</link>
    <guid>https://github.com/rails/rails/issues/47749</guid>
    <description>*   Add `sample_rate` to `ActiveStorage::Analyzer::AudioAnalyzer` output

    *Matija Čupić*</description>
    <pubDate>Thu, 23 Mar 2023 19:17:10 +0000</pubDate>
    <author>Matija Čupić</author>
    <content:encoded><![CDATA[<p>Add <code>sample_rate</code> to <code>ActiveStorage::Analyzer::AudioAnalyzer</code> output</p>

<p><em>Matija Čupić</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Remove deprecated `purge` and `purge_later` methods from the attachments association.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated `purge` and `purge_later` methods from the attachments association.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated <code>purge</code> and <code>purge_later</code> methods from the attachments association.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Remove deprecated behavior when assigning to a collection of attachments.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated behavior when assigning to a collection of attachments.

    Instead of appending to the collection, the collection is now replaced.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated behavior when assigning to a collection of attachments.</p>

<p>Instead of appending to the collection, the collection is now replaced.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Remove deprecated `ActiveStorage::Current#host` and `ActiveStorage::Current#host=` methods.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated `ActiveStorage::Current#host` and `ActiveStorage::Current#host=` methods.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated <code>ActiveStorage::Current#host</code> and <code>ActiveStorage::Current#host=</code> methods.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Remove deprecated invalid default content types in Active Storage configurations.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated invalid default content types in Active Storage configurations.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated invalid default content types in Active Storage configurations.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Add missing preview event to `ActiveStorage::LogSubscriber`
</title>
    <link>https://github.com/rails/rails/issues/46291</link>
    <guid>https://github.com/rails/rails/issues/46291</guid>
    <description>*   Add missing preview event to `ActiveStorage::LogSubscriber`

    A `preview` event is being instrumented in `ActiveStorage::Previewer`.
    However it was not added inside ActiveStorage&#39;s LogSubscriber class.

    This will allow to have logs for when a preview happens
    in the same fashion as all other ActiveStorage events such as
    `upload` and `download` inside `Rails.logger`.

    *Chedli Bourguiba*</description>
    <pubDate>Sat, 22 Oct 2022 09:54:03 +0000</pubDate>
    <author>Chedli Bourguiba</author>
    <content:encoded><![CDATA[<p>Add missing preview event to <code>ActiveStorage::LogSubscriber</code></p>

<p>A <code>preview</code> event is being instrumented in <code>ActiveStorage::Previewer</code>.<br />
However it was not added inside ActiveStorage’s LogSubscriber class.</p>

<p>This will allow to have logs for when a preview happens<br />
in the same fashion as all other ActiveStorage events such as<br />
<code>upload</code> and <code>download</code> inside <code>Rails.logger</code>.</p>

<p><em>Chedli Bourguiba</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Fix retrieving rotation value from FFmpeg on version 5.0+.
</title>
    <link>https://github.com/rails/rails/issues/45837</link>
    <guid>https://github.com/rails/rails/issues/45837</guid>
    <description>*   Fix retrieving rotation value from FFmpeg on version 5.0+.

    In FFmpeg version 5.0+ the rotation value has been removed from tags.
    Instead the value can be found in side_data_list. Along with
    this update it&#39;s possible to have values of -90, -270 to denote the video
    has been rotated.

    *Haroon Ahmed*</description>
    <pubDate>Tue, 27 Sep 2022 19:17:00 +0000</pubDate>
    <author>Haroon Ahmed</author>
    <content:encoded><![CDATA[<p>Fix retrieving rotation value from FFmpeg on version 5.0+.</p>

<p>In FFmpeg version 5.0+ the rotation value has been removed from tags.<br />
Instead the value can be found in side_data_list. Along with<br />
this update it’s possible to have values of -90, -270 to denote the video<br />
has been rotated.</p>

<p><em>Haroon Ahmed</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Touch all corresponding model records after ActiveStorage::Blob is analyzed
</title>
    <link>https://github.com/rails/rails/issues/45579</link>
    <guid>https://github.com/rails/rails/issues/45579</guid>
    <description>*   Touch all corresponding model records after ActiveStorage::Blob is analyzed

    This fixes a race condition where a record can be requested and have a cache entry built, before
    the initial `analyze_later` completes, which will not be invalidated until something else
    updates the record. This also invalidates cache entries when a blob is re-analyzed, which
    is helpful if a bug is fixed in an analyzer or a new analyzer is added.

    *Nate Matykiewicz*</description>
    <pubDate>Tue, 26 Jul 2022 16:34:18 +0000</pubDate>
    <author>Nate Matykiewicz</author>
    <content:encoded><![CDATA[<p>Touch all corresponding model records after ActiveStorage::Blob is analyzed</p>

<p>This fixes a race condition where a record can be requested and have a cache entry built, before<br />
the initial <code>analyze_later</code> completes, which will not be invalidated until something else<br />
updates the record. This also invalidates cache entries when a blob is re-analyzed, which<br />
is helpful if a bug is fixed in an analyzer or a new analyzer is added.</p>

<p><em>Nate Matykiewicz</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Add ability to use pre-defined variants when calling `preview` or
</title>
    <link>https://github.com/rails/rails/issues/45098</link>
    <guid>https://github.com/rails/rails/issues/45098</guid>
    <description>*   Add ability to use pre-defined variants when calling `preview` or
    `representation` on an attachment.

    ```ruby
    class User &lt; ActiveRecord::Base
      has_one_attached :file do |attachable|
        attachable.variant :thumb, resize_to_limit: [100, 100]
      end
    end

    &lt;%= image_tag user.file.representation(:thumb) %&gt;
    ```

    *Richard Böhme*</description>
    <pubDate>Tue, 19 Jul 2022 15:45:32 +0000</pubDate>
    <author>Richard Böhme</author>
    <content:encoded><![CDATA[<p>Add ability to use pre-defined variants when calling <code>preview</code> or<br />
<code>representation</code> on an attachment.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">has_one_attached</span> <span class="ss">:file</span> <span class="k">do</span> <span class="o">|</span><span class="n">attachable</span><span class="o">|</span>
    <span class="n">attachable</span><span class="p">.</span><span class="nf">variant</span> <span class="ss">:thumb</span><span class="p">,</span> <span class="ss">resize_to_limit: </span><span class="p">[</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">]</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="o">&lt;</span><span class="sx">%= image_tag user.file.representation(:thumb) %&gt;
</span></code></pre></div></div>

<p><em>Richard Böhme</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Method `attach` always returns the attachments except when the record
</title>
    <link>https://github.com/rails/rails/issues/45397</link>
    <guid>https://github.com/rails/rails/issues/45397</guid>
    <description>*   Method `attach` always returns the attachments except when the record
    is persisted, unchanged, and saving it fails, in which case it returns `nil`.

    *Santiago Bartesaghi*</description>
    <pubDate>Tue, 21 Jun 2022 16:28:18 +0000</pubDate>
    <author>Santiago Bartesaghi</author>
    <content:encoded><![CDATA[<p>Method <code>attach</code> always returns the attachments except when the record<br />
is persisted, unchanged, and saving it fails, in which case it returns <code>nil</code>.</p>

<p><em>Santiago Bartesaghi</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Fixes multiple `attach` calls within transaction not uploading files correctly.
</title>
    <link>https://github.com/rails/rails/issues/41661</link>
    <guid>https://github.com/rails/rails/issues/41661</guid>
    <description>*   Fixes multiple `attach` calls within transaction not uploading files correctly.

    In the following example, the code failed to upload all but the last file to the configured service.
    ```ruby
      ActiveRecord::Base.transaction do
        user.attachments.attach({
          content_type: &quot;text/plain&quot;,
          filename: &quot;dummy.txt&quot;,
          io: ::StringIO.new(&quot;dummy&quot;),
        })
        user.attachments.attach({
          content_type: &quot;text/plain&quot;,
          filename: &quot;dummy2.txt&quot;,
          io: ::StringIO.new(&quot;dummy2&quot;),
        })
      end

      assert_equal 2, user.attachments.count
      assert user.attachments.first.service.exist?(user.attachments.first.key)  # Fails
    ```

    This was addressed by keeping track of the subchanges pending upload, and uploading them
    once the transaction is committed.

    Fixes #41661

    *Santiago Bartesaghi*, *Bruno Vezoli*, *Juan Roig*, *Abhay Nikam*</description>
    <pubDate>Tue, 07 Jun 2022 09:04:27 +0000</pubDate>
    <author>Santiago Bartesaghi</author>
    <content:encoded><![CDATA[<p>Fixes multiple <code>attach</code> calls within transaction not uploading files correctly.</p>

<p>In the following example, the code failed to upload all but the last file to the configured service.</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span>
    <span class="n">user</span><span class="p">.</span><span class="nf">attachments</span><span class="p">.</span><span class="nf">attach</span><span class="p">({</span>
      <span class="ss">content_type: </span><span class="s2">"text/plain"</span><span class="p">,</span>
      <span class="ss">filename: </span><span class="s2">"dummy.txt"</span><span class="p">,</span>
      <span class="ss">io: </span><span class="o">::</span><span class="no">StringIO</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"dummy"</span><span class="p">),</span>
    <span class="p">})</span>
    <span class="n">user</span><span class="p">.</span><span class="nf">attachments</span><span class="p">.</span><span class="nf">attach</span><span class="p">({</span>
      <span class="ss">content_type: </span><span class="s2">"text/plain"</span><span class="p">,</span>
      <span class="ss">filename: </span><span class="s2">"dummy2.txt"</span><span class="p">,</span>
      <span class="ss">io: </span><span class="o">::</span><span class="no">StringIO</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"dummy2"</span><span class="p">),</span>
    <span class="p">})</span>
  <span class="k">end</span>

  <span class="n">assert_equal</span> <span class="mi">2</span><span class="p">,</span> <span class="n">user</span><span class="p">.</span><span class="nf">attachments</span><span class="p">.</span><span class="nf">count</span>
  <span class="n">assert</span> <span class="n">user</span><span class="p">.</span><span class="nf">attachments</span><span class="p">.</span><span class="nf">first</span><span class="p">.</span><span class="nf">service</span><span class="p">.</span><span class="nf">exist?</span><span class="p">(</span><span class="n">user</span><span class="p">.</span><span class="nf">attachments</span><span class="p">.</span><span class="nf">first</span><span class="p">.</span><span class="nf">key</span><span class="p">)</span>  <span class="c1"># Fails</span>
</code></pre></div></div>

<p>This was addressed by keeping track of the subchanges pending upload, and uploading them<br />
once the transaction is committed.</p>

<p>Fixes #41661</p>

<p><em>Santiago Bartesaghi</em>, <em>Bruno Vezoli</em>, <em>Juan Roig</em>, <em>Abhay Nikam</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Raise an exception if `config.active_storage.service` is not set.
</title>
    <link>https://github.com/rails/rails/issues/45224</link>
    <guid>https://github.com/rails/rails/issues/45224</guid>
    <description>*   Raise an exception if `config.active_storage.service` is not set.

    If Active Storage is configured and `config.active_storage.service` is not
    set in the respective environment&#39;s configuration file, then an exception
    is raised with a meaningful message when attempting to use Active Storage.

    *Ghouse Mohamed*</description>
    <pubDate>Tue, 31 May 2022 17:51:33 +0000</pubDate>
    <author>Ghouse Mohamed</author>
    <content:encoded><![CDATA[<p>Raise an exception if <code>config.active_storage.service</code> is not set.</p>

<p>If Active Storage is configured and <code>config.active_storage.service</code> is not<br />
set in the respective environment’s configuration file, then an exception<br />
is raised with a meaningful message when attempting to use Active Storage.</p>

<p><em>Ghouse Mohamed</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Fixes proxy downloads of files over 5mb
</title>
    <link>https://github.com/rails/rails/issues/45224</link>
    <guid>https://github.com/rails/rails/issues/45224</guid>
    <description>*   Fixes proxy downloads of files over 5mb

    Previously, trying to view and/or download files larger than 5mb stored in
    services like S3 via proxy mode could return corrupted files at around
    5.2mb or cause random halts in the download. Now,
    `ActiveStorage::Blobs::ProxyController` correctly handles streaming these
    larger files from the service to the client without any issues.

    Fixes #44679

    *Felipe Raul*</description>
    <pubDate>Tue, 31 May 2022 17:51:33 +0000</pubDate>
    <author>Ghouse Mohamed</author>
    <content:encoded><![CDATA[<p>Fixes proxy downloads of files over 5mb</p>

<p>Previously, trying to view and/or download files larger than 5mb stored in<br />
services like S3 via proxy mode could return corrupted files at around<br />
5.2mb or cause random halts in the download. Now,<br />
<code>ActiveStorage::Blobs::ProxyController</code> correctly handles streaming these<br />
larger files from the service to the client without any issues.</p>

<p>Fixes #44679</p>

<p><em>Felipe Raul</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Saving attachment(s) to a record returns the blob/blobs object
</title>
    <link>https://github.com/rails/rails/issues/44439</link>
    <guid>https://github.com/rails/rails/issues/44439</guid>
    <description>*   Saving attachment(s) to a record returns the blob/blobs object

    Previously, saving attachments did not return the blob/blobs that
    were attached. Now, saving attachments to a record with `#attach`
    method returns the blob or array of blobs that were attached to
    the record. If it fails to save the attachment(s), then it returns
    `false`.

    *Ghouse Mohamed*</description>
    <pubDate>Fri, 25 Feb 2022 21:19:01 +0000</pubDate>
    <author>Ghouse Mohamed</author>
    <content:encoded><![CDATA[<p>Saving attachment(s) to a record returns the blob/blobs object</p>

<p>Previously, saving attachments did not return the blob/blobs that<br />
were attached. Now, saving attachments to a record with <code>#attach</code><br />
method returns the blob or array of blobs that were attached to<br />
the record. If it fails to save the attachment(s), then it returns<br />
<code>false</code>.</p>

<p><em>Ghouse Mohamed</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Don&#39;t stream responses in redirect mode
</title>
    <link>https://github.com/rails/rails/issues/44244</link>
    <guid>https://github.com/rails/rails/issues/44244</guid>
    <description>*   Don&#39;t stream responses in redirect mode

    Previously, both redirect mode and proxy mode streamed their
    responses which caused a new thread to be created, and could end
    up leaking connections in the connection pool. But since redirect
    mode doesn&#39;t actually send any data, it doesn&#39;t need to be
    streamed.

    *Luke Lau*</description>
    <pubDate>Wed, 26 Jan 2022 12:14:45 +0000</pubDate>
    <author>Luke Lau</author>
    <content:encoded><![CDATA[<p>Don’t stream responses in redirect mode</p>

<p>Previously, both redirect mode and proxy mode streamed their<br />
responses which caused a new thread to be created, and could end<br />
up leaking connections in the connection pool. But since redirect<br />
mode doesn’t actually send any data, it doesn’t need to be<br />
streamed.</p>

<p><em>Luke Lau</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activestorage: Safe for direct upload on Libraries or Frameworks
</title>
    <link>https://github.com/rails/rails/issues/47773</link>
    <guid>https://github.com/rails/rails/issues/47773</guid>
    <description>*   Safe for direct upload on Libraries or Frameworks

    Enable the use of custom headers during direct uploads, which allows for
    the inclusion of Authorization bearer tokens or other forms of authorization
    tokens through headers.

    *Radamés Roriz*</description>
    <pubDate>Mon, 27 Mar 2023 20:37:25 +0000</pubDate>
    <author>Radamés Roriz</author>
    <content:encoded><![CDATA[<p>Safe for direct upload on Libraries or Frameworks</p>

<p>Enable the use of custom headers during direct uploads, which allows for<br />
the inclusion of Authorization bearer tokens or other forms of authorization<br />
tokens through headers.</p>

<p><em>Radamés Roriz</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Use `Rails::HTML5::SafeListSanitizer` by default in the Rails 7.1 configuration if it is
</title>
    <link>https://github.com/rails/rails/issues/48644</link>
    <guid>https://github.com/rails/rails/issues/48644</guid>
    <description>*   Use `Rails::HTML5::SafeListSanitizer` by default in the Rails 7.1 configuration if it is
    supported.

    Action Text&#39;s sanitizer can be configured by setting
    `config.action_text.sanitizer_vendor`. Supported values are `Rails::HTML4::Sanitizer` or
    `Rails::HTML5::Sanitizer`.

    The Rails 7.1 configuration will set this to `Rails::HTML5::Sanitizer` when it is supported, and
    fall back to `Rails::HTML4::Sanitizer`. Previous configurations default to
    `Rails::HTML4::Sanitizer`.

    As a result of this change, the defaults for `ActionText::ContentHelper.allowed_tags` and
    `.allowed_attributes` are applied at runtime, so the value of these attributes is now &#39;nil&#39;
    unless set by the application. You may call `sanitizer_allowed_tags` or
    `sanitizer_allowed_attributes` to inspect the tags and attributes being allowed by the
    sanitizer.

    *Mike Dalessio*</description>
    <pubDate>Tue, 04 Jul 2023 21:07:59 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>Use <code>Rails::HTML5::SafeListSanitizer</code> by default in the Rails 7.1 configuration if it is<br />
supported.</p>

<p>Action Text’s sanitizer can be configured by setting<br />
<code>config.action_text.sanitizer_vendor</code>. Supported values are <code>Rails::HTML4::Sanitizer</code> or<br />
<code>Rails::HTML5::Sanitizer</code>.</p>

<p>The Rails 7.1 configuration will set this to <code>Rails::HTML5::Sanitizer</code> when it is supported, and<br />
fall back to <code>Rails::HTML4::Sanitizer</code>. Previous configurations default to<br />
<code>Rails::HTML4::Sanitizer</code>.</p>

<p>As a result of this change, the defaults for <code>ActionText::ContentHelper.allowed_tags</code> and<br />
<code>.allowed_attributes</code> are applied at runtime, so the value of these attributes is now ‘nil’<br />
unless set by the application. You may call <code>sanitizer_allowed_tags</code> or<br />
<code>sanitizer_allowed_attributes</code> to inspect the tags and attributes being allowed by the<br />
sanitizer.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Attachables now can override default attachment missing template.
</title>
    <link>https://github.com/rails/rails/issues/46101</link>
    <guid>https://github.com/rails/rails/issues/46101</guid>
    <description>*   Attachables now can override default attachment missing template.

    When rendering Action Text attachments where the underlying attachable model has
    been removed, a fallback template is used. You now can override this template on
    a per-model basis. For example, you could render a placeholder image for a file
    attachment or the text &quot;Deleted User&quot; for a User attachment.

    *Matt Swanson*, *Joel Drapper*</description>
    <pubDate>Sat, 25 Mar 2023 16:49:54 +0000</pubDate>
    <author>Matt Swanson</author>
    <content:encoded><![CDATA[<p>Attachables now can override default attachment missing template.</p>

<p>When rendering Action Text attachments where the underlying attachable model has<br />
been removed, a fallback template is used. You now can override this template on<br />
a per-model basis. For example, you could render a placeholder image for a file<br />
attachment or the text “Deleted User” for a User attachment.</p>

<p><em>Matt Swanson</em>, <em>Joel Drapper</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Update bundled Trix version from `1.3.1` to `2.0.4`.
</title>
    <link>https://github.com/rails/rails/issues/47679</link>
    <guid>https://github.com/rails/rails/issues/47679</guid>
    <description>*   Update bundled Trix version from `1.3.1` to `2.0.4`.

    *Sarah Ridge*, *Sean Doyle*</description>
    <pubDate>Tue, 28 Mar 2023 21:39:43 +0000</pubDate>
    <author>Sarah Ridge</author>
    <content:encoded><![CDATA[<p>Update bundled Trix version from <code>1.3.1</code> to <code>2.0.4</code>.</p>

<p><em>Sarah Ridge</em>, <em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Apply `field_error_proc` to `rich_text_area` form fields.
</title>
    <link>https://github.com/rails/rails/issues/44786</link>
    <guid>https://github.com/rails/rails/issues/44786</guid>
    <description>*   Apply `field_error_proc` to `rich_text_area` form fields.

    *Kaíque Kandy Koga*</description>
    <pubDate>Thu, 22 Dec 2022 18:27:52 +0000</pubDate>
    <author>Kaíque Kandy Koga</author>
    <content:encoded><![CDATA[<p>Apply <code>field_error_proc</code> to <code>rich_text_area</code> form fields.</p>

<p><em>Kaíque Kandy Koga</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Action Text attachment URLs rendered in a background job (a la Turbo
</title>
    <link>https://github.com/rails/rails/issues/46649</link>
    <guid>https://github.com/rails/rails/issues/46649</guid>
    <description>*   Action Text attachment URLs rendered in a background job (a la Turbo
    Streams) now use `Rails.application.default_url_options` and
    `Rails.application.config.force_ssl` instead of `http://example.org`.

    *Jonathan Hefner*</description>
    <pubDate>Thu, 15 Dec 2022 22:45:02 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Action Text attachment URLs rendered in a background job (a la Turbo<br />
Streams) now use <code>Rails.application.default_url_options</code> and<br />
<code>Rails.application.config.force_ssl</code> instead of <code>http://example.org</code>.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Support `strict_loading:` option for `has_rich_text` declaration
</title>
    <link>https://github.com/rails/rails/issues/46271</link>
    <guid>https://github.com/rails/rails/issues/46271</guid>
    <description>*   Support `strict_loading:` option for `has_rich_text` declaration

    *Sean Doyle*</description>
    <pubDate>Fri, 09 Dec 2022 13:44:07 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Support <code>strict_loading:</code> option for <code>has_rich_text</code> declaration</p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Update ContentAttachment so that it can encapsulate arbitrary HTML content in a document.
</title>
    <link>https://github.com/rails/rails/issues/45739</link>
    <guid>https://github.com/rails/rails/issues/45739</guid>
    <description>*   Update ContentAttachment so that it can encapsulate arbitrary HTML content in a document.

    *Jamis Buck*</description>
    <pubDate>Tue, 06 Sep 2022 18:15:10 +0000</pubDate>
    <author>Jamis Buck</author>
    <content:encoded><![CDATA[<p>Update ContentAttachment so that it can encapsulate arbitrary HTML content in a document.</p>

<p><em>Jamis Buck</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actiontext: Fix an issue that caused the content layout to render multiple times when a
</title>
    <link>https://github.com/rails/rails/issues/43706</link>
    <guid>https://github.com/rails/rails/issues/43706</guid>
    <description>*   Fix an issue that caused the content layout to render multiple times when a
    rich_text field was updated.

    *Jacob Herrington*</description>
    <pubDate>Sun, 22 May 2022 15:10:09 +0000</pubDate>
    <author>Jacob Herrington</author>
    <content:encoded><![CDATA[<p>Fix an issue that caused the content layout to render multiple times when a<br />
rich_text field was updated.</p>

<p><em>Jacob Herrington</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `drb`, `mutex_m` and `base64` that are bundled gem candidates for Ruby 3.4
</title>
    <link>https://github.com/rails/rails/issues/48907</link>
    <guid>https://github.com/rails/rails/issues/48907</guid>
    <description>*   Add `drb`, `mutex_m` and `base64` that are bundled gem candidates for Ruby 3.4

    *Yasuo Honda*</description>
    <pubDate>Tue, 08 Aug 2023 23:30:44 +0000</pubDate>
    <author>Yasuo Honda</author>
    <content:encoded><![CDATA[<p>Add <code>drb</code>, <code>mutex_m</code> and <code>base64</code> that are bundled gem candidates for Ruby 3.4</p>

<p><em>Yasuo Honda</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: When using cache format version &gt;= 7.1 or a custom serializer, expired and
</title>
    <link>https://github.com/rails/rails/issues/48754</link>
    <guid>https://github.com/rails/rails/issues/48754</guid>
    <description>*   When using cache format version &gt;= 7.1 or a custom serializer, expired and
    version-mismatched cache entries can now be detected without deserializing
    their values.

    *Jonathan Hefner*</description>
    <pubDate>Thu, 27 Jul 2023 20:42:30 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>When using cache format version &gt;= 7.1 or a custom serializer, expired and<br />
version-mismatched cache entries can now be detected without deserializing<br />
their values.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Make all cache stores return a boolean for `#delete`
</title>
    <link>https://github.com/rails/rails/issues/48638</link>
    <guid>https://github.com/rails/rails/issues/48638</guid>
    <description>*   Make all cache stores return a boolean for `#delete`

    Previously the `RedisCacheStore#delete` would return `1` if the entry
    exists and `0` otherwise. Now it returns true if the entry exists and false
    otherwise, just like the other stores.

    The `FileStore` would return `nil` if the entry doesn&#39;t exists and returns
    `false` now as well.

    *Petrik de Heus*</description>
    <pubDate>Thu, 27 Jul 2023 06:48:53 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Make all cache stores return a boolean for <code>#delete</code></p>

<p>Previously the <code>RedisCacheStore#delete</code> would return <code>1</code> if the entry<br />
exists and <code>0</code> otherwise. Now it returns true if the entry exists and false<br />
otherwise, just like the other stores.</p>

<p>The <code>FileStore</code> would return <code>nil</code> if the entry doesn’t exists and returns<br />
<code>false</code> now as well.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Active Support cache stores now support replacing the default compressor via
</title>
    <link>https://github.com/rails/rails/issues/48451</link>
    <guid>https://github.com/rails/rails/issues/48451</guid>
    <description>*   Active Support cache stores now support replacing the default compressor via
    a `:compressor` option. The specified compressor must respond to `deflate`
    and `inflate`. For example:

      ```ruby
      module MyCompressor
        def self.deflate(string)
          # compression logic...
        end

        def self.inflate(compressed)
          # decompression logic...
        end
      end

      config.cache_store = :redis_cache_store, { compressor: MyCompressor }
      ```

    *Jonathan Hefner*</description>
    <pubDate>Wed, 26 Jul 2023 21:39:22 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Active Support cache stores now support replacing the default compressor via<br />
a <code>:compressor</code> option. The specified compressor must respond to <code>deflate</code><br />
and <code>inflate</code>. For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">module</span> <span class="nn">MyCompressor</span>
    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">deflate</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
      <span class="c1"># compression logic...</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">inflate</span><span class="p">(</span><span class="n">compressed</span><span class="p">)</span>
      <span class="c1"># decompression logic...</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="n">config</span><span class="p">.</span><span class="nf">cache_store</span> <span class="o">=</span> <span class="ss">:redis_cache_store</span><span class="p">,</span> <span class="p">{</span> <span class="ss">compressor: </span><span class="no">MyCompressor</span> <span class="p">}</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Active Support cache stores now support a `:serializer` option. Similar to
</title>
    <link>https://github.com/rails/rails/issues/48451</link>
    <guid>https://github.com/rails/rails/issues/48451</guid>
    <description>*   Active Support cache stores now support a `:serializer` option. Similar to
    the `:coder` option, serializers must respond to `dump` and `load`. However,
    serializers are only responsible for serializing a cached value, whereas
    coders are responsible for serializing the entire `ActiveSupport::Cache::Entry`
    instance.  Additionally, the output from serializers can be automatically
    compressed, whereas coders are responsible for their own compression.

    Specifying a serializer instead of a coder also enables performance
    optimizations, including the bare string optimization introduced by cache
    format version 7.1.

    The `:serializer` and `:coder` options are mutually exclusive. Specifying
    both will raise an `ArgumentError`.

    *Jonathan Hefner*</description>
    <pubDate>Wed, 26 Jul 2023 21:39:22 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Active Support cache stores now support a <code>:serializer</code> option. Similar to<br />
the <code>:coder</code> option, serializers must respond to <code>dump</code> and <code>load</code>. However,<br />
serializers are only responsible for serializing a cached value, whereas<br />
coders are responsible for serializing the entire <code>ActiveSupport::Cache::Entry</code><br />
instance.  Additionally, the output from serializers can be automatically<br />
compressed, whereas coders are responsible for their own compression.</p>

<p>Specifying a serializer instead of a coder also enables performance<br />
optimizations, including the bare string optimization introduced by cache<br />
format version 7.1.</p>

<p>The <code>:serializer</code> and <code>:coder</code> options are mutually exclusive. Specifying<br />
both will raise an <code>ArgumentError</code>.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix `ActiveSupport::Inflector.humanize(nil)` raising ``NoMethodError: undefined method `end_with?&#39; for nil:NilClass``.
</title>
    <link>https://github.com/rails/rails/issues/48800</link>
    <guid>https://github.com/rails/rails/issues/48800</guid>
    <description>*   Fix `ActiveSupport::Inflector.humanize(nil)` raising ``NoMethodError: undefined method `end_with?&#39; for nil:NilClass``.

    *James Robinson*</description>
    <pubDate>Tue, 25 Jul 2023 19:34:27 +0000</pubDate>
    <author>James Robinson</author>
    <content:encoded><![CDATA[<p>Fix <code>ActiveSupport::Inflector.humanize(nil)</code> raising <code>NoMethodError: undefined method `end_with?' for nil:NilClass</code>.</p>

<p><em>James Robinson</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Don&#39;t show secrets for `ActiveSupport::KeyGenerator#inspect`.
</title>
    <link>https://github.com/rails/rails/issues/48680</link>
    <guid>https://github.com/rails/rails/issues/48680</guid>
    <description>*   Don&#39;t show secrets for `ActiveSupport::KeyGenerator#inspect`.

    Before:

    ```ruby
    ActiveSupport::KeyGenerator.new(secret).inspect
    &quot;#&lt;ActiveSupport::KeyGenerator:0x0000000104888038 ... @secret=\&quot;\\xAF\\bFh]LV}q\\nl\\xB2U\\xB3 ... &gt;&quot;
    ```

    After:

    ```ruby
    ActiveSupport::KeyGenerator::Aes256Gcm(secret).inspect
    &quot;#&lt;ActiveSupport::KeyGenerator:0x0000000104888038&gt;&quot;
    ```

    *Petrik de Heus*</description>
    <pubDate>Mon, 10 Jul 2023 17:56:18 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Don’t show secrets for <code>ActiveSupport::KeyGenerator#inspect</code>.</p>

<p>Before:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">KeyGenerator</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">secret</span><span class="p">).</span><span class="nf">inspect</span>
<span class="s2">"#&lt;ActiveSupport::KeyGenerator:0x0000000104888038 ... @secret=</span><span class="se">\"\\</span><span class="s2">xAF</span><span class="se">\\</span><span class="s2">bFh]LV}q</span><span class="se">\\</span><span class="s2">nl</span><span class="se">\\</span><span class="s2">xB2U</span><span class="se">\\</span><span class="s2">xB3 ... &gt;"</span>
</code></pre></div></div>

<p>After:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">KeyGenerator</span><span class="o">::</span><span class="no">Aes256Gcm</span><span class="p">(</span><span class="n">secret</span><span class="p">).</span><span class="nf">inspect</span>
<span class="s2">"#&lt;ActiveSupport::KeyGenerator:0x0000000104888038&gt;"</span>
</code></pre></div></div>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Improve error message when EventedFileUpdateChecker is used without a
</title>
    <link>https://github.com/rails/rails/issues/48622</link>
    <guid>https://github.com/rails/rails/issues/48622</guid>
    <description>*   Improve error message when EventedFileUpdateChecker is used without a
    compatible version of the Listen gem

    *Hartley McGuire*</description>
    <pubDate>Sun, 02 Jul 2023 05:10:48 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Improve error message when EventedFileUpdateChecker is used without a<br />
compatible version of the Listen gem</p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `:report` behavior for Deprecation
</title>
    <link>https://github.com/rails/rails/issues/48578</link>
    <guid>https://github.com/rails/rails/issues/48578</guid>
    <description>*   Add `:report` behavior for Deprecation

    Setting `config.active_support.deprecation = :report` uses the error
    reporter to report deprecation warnings to `ActiveSupport::ErrorReporter`.

    Deprecations are reported as handled errors, with a severity of `:warning`.

    Useful to report deprecations happening in production to your bug tracker.

    *Étienne Barrié*</description>
    <pubDate>Mon, 26 Jun 2023 17:27:58 +0000</pubDate>
    <author>Étienne Barrié</author>
    <content:encoded><![CDATA[<p>Add <code>:report</code> behavior for Deprecation</p>

<p>Setting <code>config.active_support.deprecation = :report</code> uses the error<br />
reporter to report deprecation warnings to <code>ActiveSupport::ErrorReporter</code>.</p>

<p>Deprecations are reported as handled errors, with a severity of <code>:warning</code>.</p>

<p>Useful to report deprecations happening in production to your bug tracker.</p>

<p><em>Étienne Barrié</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Rename `Range#overlaps?` to `#overlap?` and add alias for backwards compatibility
</title>
    <link>https://github.com/rails/rails/issues/48565</link>
    <guid>https://github.com/rails/rails/issues/48565</guid>
    <description>*   Rename `Range#overlaps?` to `#overlap?` and add alias for backwards compatibility

    *Christian Schmidt*</description>
    <pubDate>Sat, 24 Jun 2023 21:36:18 +0000</pubDate>
    <author>Christian Schmidt</author>
    <content:encoded><![CDATA[<p>Rename <code>Range#overlaps?</code> to <code>#overlap?</code> and add alias for backwards compatibility</p>

<p><em>Christian Schmidt</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix `EncryptedConfiguration` returning incorrect values for some `Hash`
</title>
    <link>https://github.com/rails/rails/issues/48556</link>
    <guid>https://github.com/rails/rails/issues/48556</guid>
    <description>*   Fix `EncryptedConfiguration` returning incorrect values for some `Hash`
    methods

    *Hartley McGuire*</description>
    <pubDate>Thu, 22 Jun 2023 08:16:02 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Fix <code>EncryptedConfiguration</code> returning incorrect values for some <code>Hash</code><br />
methods</p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Don&#39;t show secrets for `MessageEncryptor#inspect`.
</title>
    <link>https://github.com/rails/rails/issues/48499</link>
    <guid>https://github.com/rails/rails/issues/48499</guid>
    <description>*   Don&#39;t show secrets for `MessageEncryptor#inspect`.

    Before:

    ```ruby
    ActiveSupport::MessageEncryptor.new(secret, cipher: &quot;aes-256-gcm&quot;).inspect
    &quot;#&lt;ActiveSupport::MessageEncryptor:0x0000000104888038 ... @secret=\&quot;\\xAF\\bFh]LV}q\\nl\\xB2U\\xB3 ... &gt;&quot;
    ```

    After:

    ```ruby
    ActiveSupport::MessageEncryptor.new(secret, cipher: &quot;aes-256-gcm&quot;).inspect
    &quot;#&lt;ActiveSupport::MessageEncryptor:0x0000000104888038&gt;&quot;
    ```

    *Petrik de Heus*</description>
    <pubDate>Fri, 16 Jun 2023 19:48:21 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Don’t show secrets for <code>MessageEncryptor#inspect</code>.</p>

<p>Before:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageEncryptor</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">secret</span><span class="p">,</span> <span class="ss">cipher: </span><span class="s2">"aes-256-gcm"</span><span class="p">).</span><span class="nf">inspect</span>
<span class="s2">"#&lt;ActiveSupport::MessageEncryptor:0x0000000104888038 ... @secret=</span><span class="se">\"\\</span><span class="s2">xAF</span><span class="se">\\</span><span class="s2">bFh]LV}q</span><span class="se">\\</span><span class="s2">nl</span><span class="se">\\</span><span class="s2">xB2U</span><span class="se">\\</span><span class="s2">xB3 ... &gt;"</span>
</code></pre></div></div>

<p>After:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageEncryptor</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">secret</span><span class="p">,</span> <span class="ss">cipher: </span><span class="s2">"aes-256-gcm"</span><span class="p">).</span><span class="nf">inspect</span>
<span class="s2">"#&lt;ActiveSupport::MessageEncryptor:0x0000000104888038&gt;"</span>
</code></pre></div></div>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Don&#39;t show contents for `EncryptedConfiguration#inspect`.
</title>
    <link>https://github.com/rails/rails/issues/48498</link>
    <guid>https://github.com/rails/rails/issues/48498</guid>
    <description>*   Don&#39;t show contents for `EncryptedConfiguration#inspect`.

    Before:
    ```ruby
    Rails.application.credentials.inspect
    &quot;#&lt;ActiveSupport::EncryptedConfiguration:0x000000010d2b38e8 ... @config={:secret=&gt;\&quot;something secret\&quot;} ... @key_file_contents=\&quot;915e4ea054e011022398dc242\&quot; ...&gt;&quot;
    ```

    After:
    ```ruby
    Rails.application.credentials.inspect
    &quot;#&lt;ActiveSupport::EncryptedConfiguration:0x000000010d2b38e8&gt;&quot;
    ```

    *Petrik de Heus*</description>
    <pubDate>Fri, 16 Jun 2023 18:25:52 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Don’t show contents for <code>EncryptedConfiguration#inspect</code>.</p>

<p>Before:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">credentials</span><span class="p">.</span><span class="nf">inspect</span>
<span class="s2">"#&lt;ActiveSupport::EncryptedConfiguration:0x000000010d2b38e8 ... @config={:secret=&gt;</span><span class="se">\"</span><span class="s2">something secret</span><span class="se">\"</span><span class="s2">} ... @key_file_contents=</span><span class="se">\"</span><span class="s2">915e4ea054e011022398dc242</span><span class="se">\"</span><span class="s2"> ...&gt;"</span>
</code></pre></div></div>

<p>After:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">credentials</span><span class="p">.</span><span class="nf">inspect</span>
<span class="s2">"#&lt;ActiveSupport::EncryptedConfiguration:0x000000010d2b38e8&gt;"</span>
</code></pre></div></div>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ERB::Util.html_escape_once` always returns an `html_safe` string.
</title>
    <link>https://github.com/rails/rails/issues/48265</link>
    <guid>https://github.com/rails/rails/issues/48265</guid>
    <description>*   `ERB::Util.html_escape_once` always returns an `html_safe` string.

    This method previously maintained the `html_safe?` property of a string on the return
    value. Because this string has been escaped, however, not marking it as `html_safe` causes
    entities to be double-escaped.

    As an example, take this view snippet:

      ```html
      &lt;p&gt;&lt;%= html_escape_once(&quot;this &amp; that &amp;amp; the other&quot;) %&gt;&lt;/p&gt;
      ```

    Before this change, that would be double-escaped and render as:

      ```html
      &lt;p&gt;this &amp;amp;amp; that &amp;amp;amp; the other&lt;/p&gt;
      ```

    After this change, it renders correctly as:

      ```html
      &lt;p&gt;this &amp;amp; that &amp;amp; the other&lt;/p&gt;
      ```

    Fixes #48256

    *Mike Dalessio*</description>
    <pubDate>Mon, 22 May 2023 10:03:35 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p><code>ERB::Util.html_escape_once</code> always returns an <code>html_safe</code> string.</p>

<p>This method previously maintained the <code>html_safe?</code> property of a string on the return<br />
value. Because this string has been escaped, however, not marking it as <code>html_safe</code> causes<br />
entities to be double-escaped.</p>

<p>As an example, take this view snippet:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;p&gt;&lt;</span><span class="err">%=</span> <span class="na">html_escape_once</span><span class="err">("</span><span class="na">this</span> <span class="err">&amp;</span> <span class="na">that</span> <span class="err">&amp;</span><span class="na">amp</span><span class="err">;</span> <span class="na">the</span> <span class="na">other</span><span class="err">")</span> <span class="err">%</span><span class="nt">&gt;&lt;/p&gt;</span>
</code></pre></div></div>

<p>Before this change, that would be double-escaped and render as:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;p&gt;</span>this <span class="ni">&amp;amp;</span>amp; that <span class="ni">&amp;amp;</span>amp; the other<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div>

<p>After this change, it renders correctly as:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;p&gt;</span>this <span class="ni">&amp;amp;</span> that <span class="ni">&amp;amp;</span> the other<span class="nt">&lt;/p&gt;</span>
</code></pre></div></div>

<p>Fixes #48256</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate `SafeBuffer#clone_empty`.
</title>
    <link>https://github.com/rails/rails/issues/48264</link>
    <guid>https://github.com/rails/rails/issues/48264</guid>
    <description>*   Deprecate `SafeBuffer#clone_empty`.

    This method has not been used internally since Rails 4.2.0.

    *Mike Dalessio*</description>
    <pubDate>Sun, 21 May 2023 00:15:49 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>Deprecate <code>SafeBuffer#clone_empty</code>.</p>

<p>This method has not been used internally since Rails 4.2.0.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `MessageEncryptor`, `MessageVerifier`, and `config.active_support.message_serializer`
</title>
    <link>https://github.com/rails/rails/issues/47964</link>
    <guid>https://github.com/rails/rails/issues/47964</guid>
    <description>*   `MessageEncryptor`, `MessageVerifier`, and `config.active_support.message_serializer`
    now accept `:message_pack` and `:message_pack_allow_marshal` as serializers.
    These serializers require the [`msgpack` gem](https://rubygems.org/gems/msgpack)
    (&gt;= 1.7.0).

    The Message Pack format can provide improved performance and smaller payload
    sizes. It also supports round-tripping some Ruby types that are not supported
    by JSON. For example:

      ```ruby
      verifier = ActiveSupport::MessageVerifier.new(&quot;secret&quot;)
      data = [{ a: 1 }, { b: 2 }.with_indifferent_access, 1.to_d, Time.at(0, 123)]
      message = verifier.generate(data)

      # BEFORE with config.active_support.message_serializer = :json
      verifier.verified(message)
      # =&gt; [{&quot;a&quot;=&gt;1}, {&quot;b&quot;=&gt;2}, &quot;1.0&quot;, &quot;1969-12-31T18:00:00.000-06:00&quot;]
      verifier.verified(message).map(&amp;:class)
      # =&gt; [Hash, Hash, String, String]

      # AFTER with config.active_support.message_serializer = :message_pack
      verifier.verified(message)
      # =&gt; [{:a=&gt;1}, {&quot;b&quot;=&gt;2}, 0.1e1, 1969-12-31 18:00:00.000123 -0600]
      verifier.verified(message).map(&amp;:class)
      # =&gt; [Hash, ActiveSupport::HashWithIndifferentAccess, BigDecimal, Time]
      ```

    The `:message_pack` serializer can fall back to deserializing with
    `ActiveSupport::JSON` when necessary, and the `:message_pack_allow_marshal`
    serializer can fall back to deserializing with `Marshal` as well as
    `ActiveSupport::JSON`. Additionally, the `:marshal`, `:json`, and
    `:json_allow_marshal` serializers can now fall back to deserializing with
    `ActiveSupport::MessagePack` when necessary. These behaviors ensure old
    messages can still be read so that migration is easier.

    *Jonathan Hefner*</description>
    <pubDate>Mon, 08 May 2023 19:59:30 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>MessageEncryptor</code>, <code>MessageVerifier</code>, and <code>config.active_support.message_serializer</code><br />
now accept <code>:message_pack</code> and <code>:message_pack_allow_marshal</code> as serializers.<br />
These serializers require the <a href="https://rubygems.org/gems/msgpack"><code>msgpack</code> gem</a><br />
(&gt;= 1.7.0).</p>

<p>The Message Pack format can provide improved performance and smaller payload<br />
sizes. It also supports round-tripping some Ruby types that are not supported<br />
by JSON. For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">verifier</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageVerifier</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"secret"</span><span class="p">)</span>
  <span class="n">data</span> <span class="o">=</span> <span class="p">[{</span> <span class="ss">a: </span><span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="ss">b: </span><span class="mi">2</span> <span class="p">}.</span><span class="nf">with_indifferent_access</span><span class="p">,</span> <span class="mi">1</span><span class="p">.</span><span class="nf">to_d</span><span class="p">,</span> <span class="no">Time</span><span class="p">.</span><span class="nf">at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">123</span><span class="p">)]</span>
  <span class="n">message</span> <span class="o">=</span> <span class="n">verifier</span><span class="p">.</span><span class="nf">generate</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

  <span class="c1"># BEFORE with config.active_support.message_serializer = :json</span>
  <span class="n">verifier</span><span class="p">.</span><span class="nf">verified</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
  <span class="c1"># =&gt; [{"a"=&gt;1}, {"b"=&gt;2}, "1.0", "1969-12-31T18:00:00.000-06:00"]</span>
  <span class="n">verifier</span><span class="p">.</span><span class="nf">verified</span><span class="p">(</span><span class="n">message</span><span class="p">).</span><span class="nf">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:class</span><span class="p">)</span>
  <span class="c1"># =&gt; [Hash, Hash, String, String]</span>

  <span class="c1"># AFTER with config.active_support.message_serializer = :message_pack</span>
  <span class="n">verifier</span><span class="p">.</span><span class="nf">verified</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
  <span class="c1"># =&gt; [{:a=&gt;1}, {"b"=&gt;2}, 0.1e1, 1969-12-31 18:00:00.000123 -0600]</span>
  <span class="n">verifier</span><span class="p">.</span><span class="nf">verified</span><span class="p">(</span><span class="n">message</span><span class="p">).</span><span class="nf">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:class</span><span class="p">)</span>
  <span class="c1"># =&gt; [Hash, ActiveSupport::HashWithIndifferentAccess, BigDecimal, Time]</span>
</code></pre></div></div>

<p>The <code>:message_pack</code> serializer can fall back to deserializing with<br />
<code>ActiveSupport::JSON</code> when necessary, and the <code>:message_pack_allow_marshal</code><br />
serializer can fall back to deserializing with <code>Marshal</code> as well as<br />
<code>ActiveSupport::JSON</code>. Additionally, the <code>:marshal</code>, <code>:json</code>, and<br />
<code>:json_allow_marshal</code> serializers can now fall back to deserializing with<br />
<code>ActiveSupport::MessagePack</code> when necessary. These behaviors ensure old<br />
messages can still be read so that migration is easier.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: A new `7.1` cache format is available which includes an optimization for
</title>
    <link>https://github.com/rails/rails/issues/48122</link>
    <guid>https://github.com/rails/rails/issues/48122</guid>
    <description>*   A new `7.1` cache format is available which includes an optimization for
    bare string values such as view fragments.

    The `7.1` cache format is used by default for new apps, and existing apps
    can enable the format by setting `config.load_defaults 7.1` or by setting
    `config.active_support.cache_format_version = 7.1` in `config/application.rb`
    or a `config/environments/*.rb` file.

    Cache entries written using the `6.1` or `7.0` cache formats can be read
    when using the `7.1` format. To perform a rolling deploy of a Rails 7.1
    upgrade, wherein servers that have not yet been upgraded must be able to
    read caches from upgraded servers, leave the cache format unchanged on the
    first deploy, then enable the `7.1` cache format on a subsequent deploy.

    *Jonathan Hefner*</description>
    <pubDate>Thu, 04 May 2023 21:37:06 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>A new <code>7.1</code> cache format is available which includes an optimization for<br />
bare string values such as view fragments.</p>

<p>The <code>7.1</code> cache format is used by default for new apps, and existing apps<br />
can enable the format by setting <code>config.load_defaults 7.1</code> or by setting<br />
<code>config.active_support.cache_format_version = 7.1</code> in <code>config/application.rb</code><br />
or a <code>config/environments/*.rb</code> file.</p>

<p>Cache entries written using the <code>6.1</code> or <code>7.0</code> cache formats can be read<br />
when using the <code>7.1</code> format. To perform a rolling deploy of a Rails 7.1<br />
upgrade, wherein servers that have not yet been upgraded must be able to<br />
read caches from upgraded servers, leave the cache format unchanged on the<br />
first deploy, then enable the <code>7.1</code> cache format on a subsequent deploy.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Active Support cache stores can now use a preconfigured serializer based on
</title>
    <link>https://github.com/rails/rails/issues/48451</link>
    <guid>https://github.com/rails/rails/issues/48451</guid>
    <description>*   Active Support cache stores can now use a preconfigured serializer based on
    `ActiveSupport::MessagePack` via the `:serializer` option:

      ```ruby
      config.cache_store = :redis_cache_store, { serializer: :message_pack }
      ```

    The `:message_pack` serializer can reduce cache entry sizes and improve
    performance, but requires the [`msgpack` gem](https://rubygems.org/gems/msgpack)
    (&gt;= 1.7.0).

    The `:message_pack` serializer can read cache entries written by the default
    serializer, and the default serializer can now read entries written by the
    `:message_pack` serializer. These behaviors make it easy to migrate between
    serializer without invalidating the entire cache.

    *Jonathan Hefner*</description>
    <pubDate>Wed, 26 Jul 2023 21:39:22 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Active Support cache stores can now use a preconfigured serializer based on<br />
<code>ActiveSupport::MessagePack</code> via the <code>:serializer</code> option:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">config</span><span class="p">.</span><span class="nf">cache_store</span> <span class="o">=</span> <span class="ss">:redis_cache_store</span><span class="p">,</span> <span class="p">{</span> <span class="ss">serializer: :message_pack</span> <span class="p">}</span>
</code></pre></div></div>

<p>The <code>:message_pack</code> serializer can reduce cache entry sizes and improve<br />
performance, but requires the <a href="https://rubygems.org/gems/msgpack"><code>msgpack</code> gem</a><br />
(&gt;= 1.7.0).</p>

<p>The <code>:message_pack</code> serializer can read cache entries written by the default<br />
serializer, and the default serializer can now read entries written by the<br />
<code>:message_pack</code> serializer. These behaviors make it easy to migrate between<br />
serializer without invalidating the entire cache.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `Object#deep_dup` no longer duplicate named classes and modules.
</title>
    <link>https://github.com/rails/rails/issues/48106</link>
    <guid>https://github.com/rails/rails/issues/48106</guid>
    <description>*   `Object#deep_dup` no longer duplicate named classes and modules.

    Before:

    ```ruby
    hash = { class: Object, module: Kernel }
    hash.deep_dup # =&gt; {:class=&gt;#&lt;Class:0x00000001063ffc80&gt;, :module=&gt;#&lt;Module:0x00000001063ffa00&gt;}
    ```

    After:

    ```ruby
    hash = { class: Object, module: Kernel }
    hash.deep_dup # =&gt; {:class=&gt;Object, :module=&gt;Kernel}
    ```

    *Jean Boussier*</description>
    <pubDate>Tue, 02 May 2023 09:25:03 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>Object#deep_dup</code> no longer duplicate named classes and modules.</p>

<p>Before:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">hash</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">class: </span><span class="no">Object</span><span class="p">,</span> <span class="ss">module: </span><span class="no">Kernel</span> <span class="p">}</span>
<span class="nb">hash</span><span class="p">.</span><span class="nf">deep_dup</span> <span class="c1"># =&gt; {:class=&gt;#&lt;Class:0x00000001063ffc80&gt;, :module=&gt;#&lt;Module:0x00000001063ffa00&gt;}</span>
</code></pre></div></div>

<p>After:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">hash</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">class: </span><span class="no">Object</span><span class="p">,</span> <span class="ss">module: </span><span class="no">Kernel</span> <span class="p">}</span>
<span class="nb">hash</span><span class="p">.</span><span class="nf">deep_dup</span> <span class="c1"># =&gt; {:class=&gt;Object, :module=&gt;Kernel}</span>
</code></pre></div></div>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Consistently raise an `ArgumentError` if the `ActiveSupport::Cache` key is blank.
</title>
    <link>https://github.com/rails/rails/issues/48043</link>
    <guid>https://github.com/rails/rails/issues/48043</guid>
    <description>*   Consistently raise an `ArgumentError` if the `ActiveSupport::Cache` key is blank.

    *Joshua Young*</description>
    <pubDate>Wed, 26 Apr 2023 12:39:27 +0000</pubDate>
    <author>Joshua Young</author>
    <content:encoded><![CDATA[<p>Consistently raise an <code>ArgumentError</code> if the <code>ActiveSupport::Cache</code> key is blank.</p>

<p><em>Joshua Young</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate usage of the singleton `ActiveSupport::Deprecation`.
</title>
    <link>https://github.com/rails/rails/issues/47354</link>
    <guid>https://github.com/rails/rails/issues/47354</guid>
    <description>*   Deprecate usage of the singleton `ActiveSupport::Deprecation`.

    All usage of `ActiveSupport::Deprecation` as a singleton is deprecated, the most common one being
    `ActiveSupport::Deprecation.warn`. Gem authors should now create their own deprecator (`ActiveSupport::Deprecation`
    object), and use it to emit deprecation warnings.

    Calling any of the following without specifying a deprecator argument is also deprecated:
      * Module.deprecate
      * deprecate_constant
      * DeprecatedObjectProxy
      * DeprecatedInstanceVariableProxy
      * DeprecatedConstantProxy
      * deprecation-related test assertions

    Use of `ActiveSupport::Deprecation.silence` and configuration methods like `behavior=`, `disallowed_behavior=`,
    `disallowed_warnings=` should now be aimed at the [application&#39;s deprecators](https://api.rubyonrails.org/classes/Rails/Application.html#method-i-deprecators).

    ```ruby
    Rails.application.deprecators.silence do
      # code that emits deprecation warnings
    end
    ```

    If your gem has a Railtie or Engine, it&#39;s encouraged to add your deprecator to the application&#39;s deprecators, that
    way the deprecation related configuration options will apply to it as well, e.g.
    `config.active_support.report_deprecations` set to `false` in the production environment will also disable your
    deprecator.

    ```ruby
    initializer &quot;my_gem.deprecator&quot; do |app|
      app.deprecators[:my_gem] = MyGem.deprecator
    end
    ```

    *Étienne Barrié*</description>
    <pubDate>Thu, 06 Apr 2023 14:20:38 +0000</pubDate>
    <author>Étienne Barrié</author>
    <content:encoded><![CDATA[<p>Deprecate usage of the singleton <code>ActiveSupport::Deprecation</code>.</p>

<p>All usage of <code>ActiveSupport::Deprecation</code> as a singleton is deprecated, the most common one being<br />
<code>ActiveSupport::Deprecation.warn</code>. Gem authors should now create their own deprecator (<code>ActiveSupport::Deprecation</code><br />
object), and use it to emit deprecation warnings.</p>

<p>Calling any of the following without specifying a deprecator argument is also deprecated:</p>
<ul>
  <li>Module.deprecate</li>
  <li>deprecate_constant</li>
  <li>DeprecatedObjectProxy</li>
  <li>DeprecatedInstanceVariableProxy</li>
  <li>DeprecatedConstantProxy</li>
  <li>deprecation-related test assertions</li>
</ul>

<p>Use of <code>ActiveSupport::Deprecation.silence</code> and configuration methods like <code>behavior=</code>, <code>disallowed_behavior=</code>,<br />
<code>disallowed_warnings=</code> should now be aimed at the <a href="https://api.rubyonrails.org/classes/Rails/Application.html#method-i-deprecators">application’s deprecators</a>.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">.</span><span class="nf">silence</span> <span class="k">do</span>
  <span class="c1"># code that emits deprecation warnings</span>
<span class="k">end</span>
</code></pre></div></div>

<p>If your gem has a Railtie or Engine, it’s encouraged to add your deprecator to the application’s deprecators, that<br />
way the deprecation related configuration options will apply to it as well, e.g.<br />
<code>config.active_support.report_deprecations</code> set to <code>false</code> in the production environment will also disable your<br />
deprecator.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">initializer</span> <span class="s2">"my_gem.deprecator"</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>
  <span class="n">app</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">[</span><span class="ss">:my_gem</span><span class="p">]</span> <span class="o">=</span> <span class="no">MyGem</span><span class="p">.</span><span class="nf">deprecator</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Étienne Barrié</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `Object#with` to set and restore public attributes around a block
</title>
    <link>https://github.com/rails/rails/issues/46681</link>
    <guid>https://github.com/rails/rails/issues/46681</guid>
    <description>*   Add `Object#with` to set and restore public attributes around a block

    ```ruby
    client.timeout # =&gt; 5
    client.with(timeout: 1) do
      client.timeout # =&gt; 1
    end
    client.timeout # =&gt; 5
    ```

    *Jean Boussier*</description>
    <pubDate>Mon, 06 Mar 2023 08:17:30 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Add <code>Object#with</code> to set and restore public attributes around a block</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">client</span><span class="p">.</span><span class="nf">timeout</span> <span class="c1"># =&gt; 5</span>
<span class="n">client</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">timeout: </span><span class="mi">1</span><span class="p">)</span> <span class="k">do</span>
  <span class="n">client</span><span class="p">.</span><span class="nf">timeout</span> <span class="c1"># =&gt; 1</span>
<span class="k">end</span>
<span class="n">client</span><span class="p">.</span><span class="nf">timeout</span> <span class="c1"># =&gt; 5</span>
</code></pre></div></div>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Remove deprecated support to generate incorrect RFC 4122 UUIDs when providing a namespace ID that is not one of the
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated support to generate incorrect RFC 4122 UUIDs when providing a namespace ID that is not one of the
    constants defined on `Digest::UUID`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated support to generate incorrect RFC 4122 UUIDs when providing a namespace ID that is not one of the<br />
constants defined on <code>Digest::UUID</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate `config.active_support.use_rfc4122_namespaced_uuids`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Deprecate `config.active_support.use_rfc4122_namespaced_uuids`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Deprecate <code>config.active_support.use_rfc4122_namespaced_uuids</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Remove implicit conversion of objects into `String` by `ActiveSupport::SafeBuffer`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove implicit conversion of objects into `String` by `ActiveSupport::SafeBuffer`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove implicit conversion of objects into <code>String</code> by <code>ActiveSupport::SafeBuffer</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Remove deprecated `active_support/core_ext/range/include_time_with_zone` file.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated `active_support/core_ext/range/include_time_with_zone` file.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated <code>active_support/core_ext/range/include_time_with_zone</code> file.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate `config.active_support.remove_deprecated_time_with_zone_name`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Deprecate `config.active_support.remove_deprecated_time_with_zone_name`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Deprecate <code>config.active_support.remove_deprecated_time_with_zone_name</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Remove deprecated override of `ActiveSupport::TimeWithZone.name`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated override of `ActiveSupport::TimeWithZone.name`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated override of <code>ActiveSupport::TimeWithZone.name</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate `config.active_support.disable_to_s_conversion`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Deprecate `config.active_support.disable_to_s_conversion`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Deprecate <code>config.active_support.disable_to_s_conversion</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Remove deprecated option to passing a format to `#to_s` in `Array`, `Range`, `Date`, `DateTime`, `Time`,
</title>
    <link>https://github.com/rails/rails/issues/47568</link>
    <guid>https://github.com/rails/rails/issues/47568</guid>
    <description>*   Remove deprecated option to passing a format to `#to_s` in `Array`, `Range`, `Date`, `DateTime`, `Time`,
    `BigDecimal`, `Float` and, `Integer`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 02:51:11 +0000</pubDate>
    <author>Yasuo Honda</author>
    <content:encoded><![CDATA[<p>Remove deprecated option to passing a format to <code>#to_s</code> in <code>Array</code>, <code>Range</code>, <code>Date</code>, <code>DateTime</code>, <code>Time</code>,<br />
<code>BigDecimal</code>, <code>Float</code> and, <code>Integer</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Remove deprecated `ActiveSupport::PerThreadRegistry`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated `ActiveSupport::PerThreadRegistry`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated <code>ActiveSupport::PerThreadRegistry</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Remove deprecated override of `Enumerable#sum`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated override of `Enumerable#sum`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated override of <code>Enumerable#sum</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecated initializing a `ActiveSupport::Cache::MemCacheStore` with an instance of `Dalli::Client`.
</title>
    <link>https://github.com/rails/rails/issues/47340</link>
    <guid>https://github.com/rails/rails/issues/47340</guid>
    <description>*   Deprecated initializing a `ActiveSupport::Cache::MemCacheStore` with an instance of `Dalli::Client`.

    Deprecate the undocumented option of providing an already-initialized instance of `Dalli::Client` to `ActiveSupport::Cache::MemCacheStore`. Such clients could be configured with unrecognized options, which could lead to unexpected behavior. Instead, provide addresses as documented.

    *aledustet*</description>
    <pubDate>Tue, 28 Feb 2023 20:35:13 +0000</pubDate>
    <author>Alejandro Dustet</author>
    <content:encoded><![CDATA[<p>Deprecated initializing a <code>ActiveSupport::Cache::MemCacheStore</code> with an instance of <code>Dalli::Client</code>.</p>

<p>Deprecate the undocumented option of providing an already-initialized instance of <code>Dalli::Client</code> to <code>ActiveSupport::Cache::MemCacheStore</code>. Such clients could be configured with unrecognized options, which could lead to unexpected behavior. Instead, provide addresses as documented.</p>

<p><em>aledustet</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Stub `Time.new()` in `TimeHelpers#travel_to`
</title>
    <link>https://github.com/rails/rails/issues/47315</link>
    <guid>https://github.com/rails/rails/issues/47315</guid>
    <description>*   Stub `Time.new()` in `TimeHelpers#travel_to`

      ```ruby
      travel_to Time.new(2004, 11, 24) do
        # Inside the `travel_to` block `Time.new` is stubbed
        assert_equal Time.new.year, 2004
      end
      ```

    *fatkodima*</description>
    <pubDate>Tue, 14 Feb 2023 18:55:54 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Stub <code>Time.new()</code> in <code>TimeHelpers#travel_to</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">travel_to</span> <span class="no">Time</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="mi">2004</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">24</span><span class="p">)</span> <span class="k">do</span>
    <span class="c1"># Inside the `travel_to` block `Time.new` is stubbed</span>
    <span class="n">assert_equal</span> <span class="no">Time</span><span class="p">.</span><span class="nf">new</span><span class="p">.</span><span class="nf">year</span><span class="p">,</span> <span class="mi">2004</span>
  <span class="k">end</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Raise `ActiveSupport::MessageEncryptor::InvalidMessage` from
</title>
    <link>https://github.com/rails/rails/issues/47326</link>
    <guid>https://github.com/rails/rails/issues/47326</guid>
    <description>*   Raise `ActiveSupport::MessageEncryptor::InvalidMessage` from
    `ActiveSupport::MessageEncryptor#decrypt_and_verify` regardless of cipher.
    Previously, when a `MessageEncryptor` was using a non-AEAD cipher such as
    AES-256-CBC, a corrupt or tampered message would raise
    `ActiveSupport::MessageVerifier::InvalidSignature`.  Now, all ciphers raise
    the same error:

      ```ruby
      encryptor = ActiveSupport::MessageEncryptor.new(&quot;x&quot; * 32, cipher: &quot;aes-256-gcm&quot;)
      message = encryptor.encrypt_and_sign(&quot;message&quot;)
      encryptor.decrypt_and_verify(message.next)
      # =&gt; raises ActiveSupport::MessageEncryptor::InvalidMessage

      encryptor = ActiveSupport::MessageEncryptor.new(&quot;x&quot; * 32, cipher: &quot;aes-256-cbc&quot;)
      message = encryptor.encrypt_and_sign(&quot;message&quot;)
      encryptor.decrypt_and_verify(message.next)
      # BEFORE:
      # =&gt; raises ActiveSupport::MessageVerifier::InvalidSignature
      # AFTER:
      # =&gt; raises ActiveSupport::MessageEncryptor::InvalidMessage
      ```

    *Jonathan Hefner*</description>
    <pubDate>Sun, 12 Feb 2023 21:50:51 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Raise <code>ActiveSupport::MessageEncryptor::InvalidMessage</code> from<br />
<code>ActiveSupport::MessageEncryptor#decrypt_and_verify</code> regardless of cipher.<br />
Previously, when a <code>MessageEncryptor</code> was using a non-AEAD cipher such as<br />
AES-256-CBC, a corrupt or tampered message would raise<br />
<code>ActiveSupport::MessageVerifier::InvalidSignature</code>.  Now, all ciphers raise<br />
the same error:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">encryptor</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageEncryptor</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"x"</span> <span class="o">*</span> <span class="mi">32</span><span class="p">,</span> <span class="ss">cipher: </span><span class="s2">"aes-256-gcm"</span><span class="p">)</span>
  <span class="n">message</span> <span class="o">=</span> <span class="n">encryptor</span><span class="p">.</span><span class="nf">encrypt_and_sign</span><span class="p">(</span><span class="s2">"message"</span><span class="p">)</span>
  <span class="n">encryptor</span><span class="p">.</span><span class="nf">decrypt_and_verify</span><span class="p">(</span><span class="n">message</span><span class="p">.</span><span class="nf">next</span><span class="p">)</span>
  <span class="c1"># =&gt; raises ActiveSupport::MessageEncryptor::InvalidMessage</span>

  <span class="n">encryptor</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageEncryptor</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"x"</span> <span class="o">*</span> <span class="mi">32</span><span class="p">,</span> <span class="ss">cipher: </span><span class="s2">"aes-256-cbc"</span><span class="p">)</span>
  <span class="n">message</span> <span class="o">=</span> <span class="n">encryptor</span><span class="p">.</span><span class="nf">encrypt_and_sign</span><span class="p">(</span><span class="s2">"message"</span><span class="p">)</span>
  <span class="n">encryptor</span><span class="p">.</span><span class="nf">decrypt_and_verify</span><span class="p">(</span><span class="n">message</span><span class="p">.</span><span class="nf">next</span><span class="p">)</span>
  <span class="c1"># BEFORE:</span>
  <span class="c1"># =&gt; raises ActiveSupport::MessageVerifier::InvalidSignature</span>
  <span class="c1"># AFTER:</span>
  <span class="c1"># =&gt; raises ActiveSupport::MessageEncryptor::InvalidMessage</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Support `nil` original values when using `ActiveSupport::MessageVerifier#verify`.
</title>
    <link>https://github.com/rails/rails/issues/47326</link>
    <guid>https://github.com/rails/rails/issues/47326</guid>
    <description>*   Support `nil` original values when using `ActiveSupport::MessageVerifier#verify`.
    Previously, `MessageVerifier#verify` did not work with `nil` original
    values, though both `MessageVerifier#verified` and
    `MessageEncryptor#decrypt_and_verify` do:

      ```ruby
      encryptor = ActiveSupport::MessageEncryptor.new(secret)
      message = encryptor.encrypt_and_sign(nil)

      encryptor.decrypt_and_verify(message)
      # =&gt; nil

      verifier = ActiveSupport::MessageVerifier.new(secret)
      message = verifier.generate(nil)

      verifier.verified(message)
      # =&gt; nil

      verifier.verify(message)
      # BEFORE:
      # =&gt; raises ActiveSupport::MessageVerifier::InvalidSignature
      # AFTER:
      # =&gt; nil
      ```

    *Jonathan Hefner*</description>
    <pubDate>Sun, 12 Feb 2023 21:50:51 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Support <code>nil</code> original values when using <code>ActiveSupport::MessageVerifier#verify</code>.<br />
Previously, <code>MessageVerifier#verify</code> did not work with <code>nil</code> original<br />
values, though both <code>MessageVerifier#verified</code> and<br />
<code>MessageEncryptor#decrypt_and_verify</code> do:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">encryptor</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageEncryptor</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">secret</span><span class="p">)</span>
  <span class="n">message</span> <span class="o">=</span> <span class="n">encryptor</span><span class="p">.</span><span class="nf">encrypt_and_sign</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>

  <span class="n">encryptor</span><span class="p">.</span><span class="nf">decrypt_and_verify</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
  <span class="c1"># =&gt; nil</span>

  <span class="n">verifier</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageVerifier</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">secret</span><span class="p">)</span>
  <span class="n">message</span> <span class="o">=</span> <span class="n">verifier</span><span class="p">.</span><span class="nf">generate</span><span class="p">(</span><span class="kp">nil</span><span class="p">)</span>

  <span class="n">verifier</span><span class="p">.</span><span class="nf">verified</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
  <span class="c1"># =&gt; nil</span>

  <span class="n">verifier</span><span class="p">.</span><span class="nf">verify</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
  <span class="c1"># BEFORE:</span>
  <span class="c1"># =&gt; raises ActiveSupport::MessageVerifier::InvalidSignature</span>
  <span class="c1"># AFTER:</span>
  <span class="c1"># =&gt; nil</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Maintain `html_safe?` on html_safe strings when sliced with `slice`, `slice!`, or `chr` method.
</title>
    <link>https://github.com/rails/rails/issues/47343</link>
    <guid>https://github.com/rails/rails/issues/47343</guid>
    <description>*   Maintain `html_safe?` on html_safe strings when sliced with `slice`, `slice!`, or `chr` method.

    Previously, `html_safe?` was only maintained when the html_safe strings were sliced
    with `[]` method. Now, `slice`, `slice!`, and `chr` methods will maintain `html_safe?` like `[]` method.

    ```ruby
    string = &quot;&lt;div&gt;test&lt;/div&gt;&quot;.html_safe
    string.slice(0, 1).html_safe? # =&gt; true
    string.slice!(0, 1).html_safe? # =&gt; true
    # maintain html_safe? after the slice!
    string.html_safe? # =&gt; true
    string.chr # =&gt; true
    ```

    *Michael Go*</description>
    <pubDate>Thu, 09 Feb 2023 21:24:08 +0000</pubDate>
    <author>Michael Go</author>
    <content:encoded><![CDATA[<p>Maintain <code>html_safe?</code> on html_safe strings when sliced with <code>slice</code>, <code>slice!</code>, or <code>chr</code> method.</p>

<p>Previously, <code>html_safe?</code> was only maintained when the html_safe strings were sliced<br />
with <code>[]</code> method. Now, <code>slice</code>, <code>slice!</code>, and <code>chr</code> methods will maintain <code>html_safe?</code> like <code>[]</code> method.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string</span> <span class="o">=</span> <span class="s2">"&lt;div&gt;test&lt;/div&gt;"</span><span class="p">.</span><span class="nf">html_safe</span>
<span class="n">string</span><span class="p">.</span><span class="nf">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nf">html_safe?</span> <span class="c1"># =&gt; true</span>
<span class="n">string</span><span class="p">.</span><span class="nf">slice!</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nf">html_safe?</span> <span class="c1"># =&gt; true</span>
<span class="c1"># maintain html_safe? after the slice!</span>
<span class="n">string</span><span class="p">.</span><span class="nf">html_safe?</span> <span class="c1"># =&gt; true</span>
<span class="n">string</span><span class="p">.</span><span class="nf">chr</span> <span class="c1"># =&gt; true</span>
</code></pre></div></div>

<p><em>Michael Go</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `Object#in?` support for open ranges.
</title>
    <link>https://github.com/rails/rails/issues/47316</link>
    <guid>https://github.com/rails/rails/issues/47316</guid>
    <description>*   Add `Object#in?` support for open ranges.

    ```ruby
    assert Date.today.in?(..Date.tomorrow)
    assert_not Date.today.in?(Date.tomorrow..)
    ```

    *Ignacio Galindo*</description>
    <pubDate>Sat, 25 Feb 2023 01:35:38 +0000</pubDate>
    <author>Carlos Antonio da Silva</author>
    <content:encoded><![CDATA[<p>Add <code>Object#in?</code> support for open ranges.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assert</span> <span class="no">Date</span><span class="p">.</span><span class="nf">today</span><span class="p">.</span><span class="nf">in?</span><span class="p">(</span><span class="o">..</span><span class="no">Date</span><span class="p">.</span><span class="nf">tomorrow</span><span class="p">)</span>
<span class="n">assert_not</span> <span class="no">Date</span><span class="p">.</span><span class="nf">today</span><span class="p">.</span><span class="nf">in?</span><span class="p">(</span><span class="no">Date</span><span class="p">.</span><span class="nf">tomorrow</span><span class="o">..</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Ignacio Galindo</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `config.i18n.raise_on_missing_translations = true` now raises on any missing translation.
</title>
    <link>https://github.com/rails/rails/issues/47105</link>
    <guid>https://github.com/rails/rails/issues/47105</guid>
    <description>*   `config.i18n.raise_on_missing_translations = true` now raises on any missing translation.

    Previously it would only raise when called in a view or controller. Now it will raise
    anytime `I18n.t` is provided an unrecognised key.

    If you do not want this behaviour, you can customise the i18n exception handler. See the
    upgrading guide or i18n guide for more information.

    *Alex Ghiculescu*</description>
    <pubDate>Mon, 23 Jan 2023 19:10:50 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>config.i18n.raise_on_missing_translations = true</code> now raises on any missing translation.</p>

<p>Previously it would only raise when called in a view or controller. Now it will raise<br />
anytime <code>I18n.t</code> is provided an unrecognised key.</p>

<p>If you do not want this behaviour, you can customise the i18n exception handler. See the<br />
upgrading guide or i18n guide for more information.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::CurrentAttributes` now raises if a restricted attribute name is used.
</title>
    <link>https://github.com/rails/rails/issues/47017</link>
    <guid>https://github.com/rails/rails/issues/47017</guid>
    <description>*   `ActiveSupport::CurrentAttributes` now raises if a restricted attribute name is used.

    Attributes such as `set` and `reset` cannot be used as they clash with the
    `CurrentAttributes` public API.

    *Alex Ghiculescu*</description>
    <pubDate>Mon, 16 Jan 2023 10:10:35 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::CurrentAttributes</code> now raises if a restricted attribute name is used.</p>

<p>Attributes such as <code>set</code> and <code>reset</code> cannot be used as they clash with the<br />
<code>CurrentAttributes</code> public API.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `HashWithIndifferentAccess#transform_keys` now takes a Hash argument, just
</title>
    <link>https://github.com/rails/rails/issues/46846</link>
    <guid>https://github.com/rails/rails/issues/46846</guid>
    <description>*   `HashWithIndifferentAccess#transform_keys` now takes a Hash argument, just
    as Ruby&#39;s `Hash#transform_keys` does.

    *Akira Matsuda*</description>
    <pubDate>Wed, 11 Jan 2023 18:33:47 +0000</pubDate>
    <author>Akira Matsuda</author>
    <content:encoded><![CDATA[<p><code>HashWithIndifferentAccess#transform_keys</code> now takes a Hash argument, just<br />
as Ruby’s <code>Hash#transform_keys</code> does.</p>

<p><em>Akira Matsuda</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `delegate` now defines method with proper arity when delegating to a Class.
</title>
    <link>https://github.com/rails/rails/issues/46875</link>
    <guid>https://github.com/rails/rails/issues/46875</guid>
    <description>*   `delegate` now defines method with proper arity when delegating to a Class.
    With this change, it defines faster method (3.5x faster with no argument).
    However, in order to gain this benefit, the delegation target method has to
    be defined before declaring the delegation.

    ```ruby
    # This defines 3.5 times faster method than before
    class C
      def self.x() end
      delegate :x, to: :class
    end

    class C
      # This works but silently falls back to old behavior because
      # `delegate` cannot find the definition of `x`
      delegate :x, to: :class
      def self.x() end
    end
    ```

    *Akira Matsuda*</description>
    <pubDate>Tue, 10 Jan 2023 21:26:50 +0000</pubDate>
    <author>Akira Matsuda</author>
    <content:encoded><![CDATA[<p><code>delegate</code> now defines method with proper arity when delegating to a Class.<br />
With this change, it defines faster method (3.5x faster with no argument).<br />
However, in order to gain this benefit, the delegation target method has to<br />
be defined before declaring the delegation.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># This defines 3.5 times faster method than before</span>
<span class="k">class</span> <span class="nc">C</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">x</span><span class="p">()</span> <span class="k">end</span>
  <span class="n">delegate</span> <span class="ss">:x</span><span class="p">,</span> <span class="ss">to: :class</span>
<span class="k">end</span>

<span class="k">class</span> <span class="nc">C</span>
  <span class="c1"># This works but silently falls back to old behavior because</span>
  <span class="c1"># `delegate` cannot find the definition of `x`</span>
  <span class="n">delegate</span> <span class="ss">:x</span><span class="p">,</span> <span class="ss">to: :class</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">x</span><span class="p">()</span> <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Akira Matsuda</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `assert_difference` message now includes what changed.
</title>
    <link>https://github.com/rails/rails/issues/46863</link>
    <guid>https://github.com/rails/rails/issues/46863</guid>
    <description>*   `assert_difference` message now includes what changed.

    This makes it easier to debug non-obvious failures.

    Before:

    ```
    &quot;User.count&quot; didn&#39;t change by 32.
    Expected: 1611
      Actual: 1579
    ```

    After:

    ```
    &quot;User.count&quot; didn&#39;t change by 32, but by 0.
    Expected: 1611
      Actual: 1579
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Sat, 07 Jan 2023 18:14:15 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>assert_difference</code> message now includes what changed.</p>

<p>This makes it easier to debug non-obvious failures.</p>

<p>Before:</p>

<pre><code>"User.count" didn't change by 32.
Expected: 1611
  Actual: 1579
</code></pre>

<p>After:</p>

<pre><code>"User.count" didn't change by 32, but by 0.
Expected: 1611
  Actual: 1579
</code></pre>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add ability to match exception messages to `assert_raises` assertion
</title>
    <link>https://github.com/rails/rails/issues/46611</link>
    <guid>https://github.com/rails/rails/issues/46611</guid>
    <description>*   Add ability to match exception messages to `assert_raises` assertion

    Instead of this
    ```ruby
    error = assert_raises(ArgumentError) do
      perform_service(param: &#39;exception&#39;)
    end
    assert_match(/incorrect param/i, error.message)
    ```

    you can now write this
    ```ruby
    assert_raises(ArgumentError, match: /incorrect param/i) do
      perform_service(param: &#39;exception&#39;)
    end
    ```

    *fatkodima*</description>
    <pubDate>Tue, 03 Jan 2023 19:50:19 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Add ability to match exception messages to <code>assert_raises</code> assertion</p>

<p>Instead of this</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">error</span> <span class="o">=</span> <span class="n">assert_raises</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">)</span> <span class="k">do</span>
  <span class="n">perform_service</span><span class="p">(</span><span class="ss">param: </span><span class="s1">'exception'</span><span class="p">)</span>
<span class="k">end</span>
<span class="n">assert_match</span><span class="p">(</span><span class="sr">/incorrect param/i</span><span class="p">,</span> <span class="n">error</span><span class="p">.</span><span class="nf">message</span><span class="p">)</span>
</code></pre></div></div>

<p>you can now write this</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assert_raises</span><span class="p">(</span><span class="no">ArgumentError</span><span class="p">,</span> <span class="ss">match: </span><span class="sr">/incorrect param/i</span><span class="p">)</span> <span class="k">do</span>
  <span class="n">perform_service</span><span class="p">(</span><span class="ss">param: </span><span class="s1">'exception'</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `Rails.env.local?` shorthand for `Rails.env.development? || Rails.env.test?`.
</title>
    <link>https://github.com/rails/rails/issues/46786</link>
    <guid>https://github.com/rails/rails/issues/46786</guid>
    <description>*   Add `Rails.env.local?` shorthand for `Rails.env.development? || Rails.env.test?`.

    *DHH*</description>
    <pubDate>Wed, 21 Dec 2022 20:07:55 +0000</pubDate>
    <author>David Heinemeier Hansson</author>
    <content:encoded><![CDATA[<p>Add <code>Rails.env.local?</code> shorthand for <code>Rails.env.development? || Rails.env.test?</code>.</p>

<p><em>DHH</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::Testing::TimeHelpers` now accepts named `with_usec` argument
</title>
    <link>https://github.com/rails/rails/issues/46663</link>
    <guid>https://github.com/rails/rails/issues/46663</guid>
    <description>*   `ActiveSupport::Testing::TimeHelpers` now accepts named `with_usec` argument
    to `freeze_time`, `travel`, and `travel_to` methods. Passing true prevents
    truncating the destination time with `change(usec: 0)`.

    *KevSlashNull*, and *serprex*</description>
    <pubDate>Wed, 14 Dec 2022 15:41:08 +0000</pubDate>
    <author>Philip Dubé</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::Testing::TimeHelpers</code> now accepts named <code>with_usec</code> argument<br />
to <code>freeze_time</code>, <code>travel</code>, and <code>travel_to</code> methods. Passing true prevents<br />
truncating the destination time with <code>change(usec: 0)</code>.</p>

<p><em>KevSlashNull</em>, and <em>serprex</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::CurrentAttributes.resets` now accepts a method name
</title>
    <link>https://github.com/rails/rails/issues/45698</link>
    <guid>https://github.com/rails/rails/issues/45698</guid>
    <description>*   `ActiveSupport::CurrentAttributes.resets` now accepts a method name

    The block API is still the recommended approach, but now both APIs are supported:

    ```ruby
    class Current &lt; ActiveSupport::CurrentAttributes
      resets { Time.zone = nil }
      resets :clear_time_zone
    end
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Thu, 17 Nov 2022 22:54:30 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::CurrentAttributes.resets</code> now accepts a method name</p>

<p>The block API is still the recommended approach, but now both APIs are supported:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Current</span> <span class="o">&lt;</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">CurrentAttributes</span>
  <span class="n">resets</span> <span class="p">{</span> <span class="no">Time</span><span class="p">.</span><span class="nf">zone</span> <span class="o">=</span> <span class="kp">nil</span> <span class="p">}</span>
  <span class="n">resets</span> <span class="ss">:clear_time_zone</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Ensure `ActiveSupport::Testing::Isolation::Forking` closes pipes
</title>
    <link>https://github.com/rails/rails/issues/45667</link>
    <guid>https://github.com/rails/rails/issues/45667</guid>
    <description>*   Ensure `ActiveSupport::Testing::Isolation::Forking` closes pipes

    Previously, `Forking.run_in_isolation` opened two ends of a pipe. The fork
    process closed the read end, wrote to it, and then terminated (which
    presumably closed the file descriptors on its end). The parent process
    closed the write end, read from it, and returned, never closing the read
    end.

    This resulted in an accumulation of open file descriptors, which could
    cause errors if the limit is reached.

    *Sam Bostock*</description>
    <pubDate>Fri, 04 Nov 2022 22:05:21 +0000</pubDate>
    <author>Sam Bostock</author>
    <content:encoded><![CDATA[<p>Ensure <code>ActiveSupport::Testing::Isolation::Forking</code> closes pipes</p>

<p>Previously, <code>Forking.run_in_isolation</code> opened two ends of a pipe. The fork<br />
process closed the read end, wrote to it, and then terminated (which<br />
presumably closed the file descriptors on its end). The parent process<br />
closed the write end, read from it, and returned, never closing the read<br />
end.</p>

<p>This resulted in an accumulation of open file descriptors, which could<br />
cause errors if the limit is reached.</p>

<p><em>Sam Bostock</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix `Time#change` and `Time#advance` for times around the end of Daylight
</title>
    <link>https://github.com/rails/rails/issues/46251</link>
    <guid>https://github.com/rails/rails/issues/46251</guid>
    <description>*   Fix `Time#change` and `Time#advance` for times around the end of Daylight
    Saving Time.

    Previously, when `Time#change` or `Time#advance` constructed a time inside
    the final stretch of Daylight Saving Time (DST), the non-DST offset would
    always be chosen for local times:

    ```ruby
    # DST ended just before 2021-11-07 2:00:00 AM in US/Eastern.
    ENV[&quot;TZ&quot;] = &quot;US/Eastern&quot;

    time = Time.local(2021, 11, 07, 00, 59, 59) + 1
    # =&gt; 2021-11-07 01:00:00 -0400
    time.change(day: 07)
    # =&gt; 2021-11-07 01:00:00 -0500
    time.advance(seconds: 0)
    # =&gt; 2021-11-07 01:00:00 -0500

    time = Time.local(2021, 11, 06, 01, 00, 00)
    # =&gt; 2021-11-06 01:00:00 -0400
    time.change(day: 07)
    # =&gt; 2021-11-07 01:00:00 -0500
    time.advance(days: 1)
    # =&gt; 2021-11-07 01:00:00 -0500
    ```

    And the DST offset would always be chosen for times with a `TimeZone`
    object:

    ```ruby
    Time.zone = &quot;US/Eastern&quot;

    time = Time.new(2021, 11, 07, 02, 00, 00, Time.zone) - 3600
    # =&gt; 2021-11-07 01:00:00 -0500
    time.change(day: 07)
    # =&gt; 2021-11-07 01:00:00 -0400
    time.advance(seconds: 0)
    # =&gt; 2021-11-07 01:00:00 -0400

    time = Time.new(2021, 11, 8, 01, 00, 00, Time.zone)
    # =&gt; 2021-11-08 01:00:00 -0500
    time.change(day: 07)
    # =&gt; 2021-11-07 01:00:00 -0400
    time.advance(days: -1)
    # =&gt; 2021-11-07 01:00:00 -0400
    ```

    Now, `Time#change` and `Time#advance` will choose the offset that matches
    the original time&#39;s offset when possible:

    ```ruby
    ENV[&quot;TZ&quot;] = &quot;US/Eastern&quot;

    time = Time.local(2021, 11, 07, 00, 59, 59) + 1
    # =&gt; 2021-11-07 01:00:00 -0400
    time.change(day: 07)
    # =&gt; 2021-11-07 01:00:00 -0400
    time.advance(seconds: 0)
    # =&gt; 2021-11-07 01:00:00 -0400

    time = Time.local(2021, 11, 06, 01, 00, 00)
    # =&gt; 2021-11-06 01:00:00 -0400
    time.change(day: 07)
    # =&gt; 2021-11-07 01:00:00 -0400
    time.advance(days: 1)
    # =&gt; 2021-11-07 01:00:00 -0400

    Time.zone = &quot;US/Eastern&quot;

    time = Time.new(2021, 11, 07, 02, 00, 00, Time.zone) - 3600
    # =&gt; 2021-11-07 01:00:00 -0500
    time.change(day: 07)
    # =&gt; 2021-11-07 01:00:00 -0500
    time.advance(seconds: 0)
    # =&gt; 2021-11-07 01:00:00 -0500

    time = Time.new(2021, 11, 8, 01, 00, 00, Time.zone)
    # =&gt; 2021-11-08 01:00:00 -0500
    time.change(day: 07)
    # =&gt; 2021-11-07 01:00:00 -0500
    time.advance(days: -1)
    # =&gt; 2021-11-07 01:00:00 -0500
    ```

    *Kevin Hall*, *Takayoshi Nishida*, and *Jonathan Hefner*</description>
    <pubDate>Mon, 24 Oct 2022 21:07:47 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Fix <code>Time#change</code> and <code>Time#advance</code> for times around the end of Daylight<br />
Saving Time.</p>

<p>Previously, when <code>Time#change</code> or <code>Time#advance</code> constructed a time inside<br />
the final stretch of Daylight Saving Time (DST), the non-DST offset would<br />
always be chosen for local times:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># DST ended just before 2021-11-07 2:00:00 AM in US/Eastern.</span>
<span class="no">ENV</span><span class="p">[</span><span class="s2">"TZ"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"US/Eastern"</span>

<span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="p">.</span><span class="nf">local</span><span class="p">(</span><span class="mi">2021</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mo">07</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">59</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>
<span class="n">time</span><span class="p">.</span><span class="nf">change</span><span class="p">(</span><span class="ss">day: </span><span class="mo">07</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>
<span class="n">time</span><span class="p">.</span><span class="nf">advance</span><span class="p">(</span><span class="ss">seconds: </span><span class="mi">0</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>

<span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="p">.</span><span class="nf">local</span><span class="p">(</span><span class="mi">2021</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mo">06</span><span class="p">,</span> <span class="mo">01</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="mo">00</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-06 01:00:00 -0400</span>
<span class="n">time</span><span class="p">.</span><span class="nf">change</span><span class="p">(</span><span class="ss">day: </span><span class="mo">07</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>
<span class="n">time</span><span class="p">.</span><span class="nf">advance</span><span class="p">(</span><span class="ss">days: </span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>
</code></pre></div></div>

<p>And the DST offset would always be chosen for times with a <code>TimeZone</code><br />
object:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Time</span><span class="p">.</span><span class="nf">zone</span> <span class="o">=</span> <span class="s2">"US/Eastern"</span>

<span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="mi">2021</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mo">07</span><span class="p">,</span> <span class="mo">02</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="no">Time</span><span class="p">.</span><span class="nf">zone</span><span class="p">)</span> <span class="o">-</span> <span class="mi">3600</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>
<span class="n">time</span><span class="p">.</span><span class="nf">change</span><span class="p">(</span><span class="ss">day: </span><span class="mo">07</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>
<span class="n">time</span><span class="p">.</span><span class="nf">advance</span><span class="p">(</span><span class="ss">seconds: </span><span class="mi">0</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>

<span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="mi">2021</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mo">01</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="no">Time</span><span class="p">.</span><span class="nf">zone</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-08 01:00:00 -0500</span>
<span class="n">time</span><span class="p">.</span><span class="nf">change</span><span class="p">(</span><span class="ss">day: </span><span class="mo">07</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>
<span class="n">time</span><span class="p">.</span><span class="nf">advance</span><span class="p">(</span><span class="ss">days: </span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>
</code></pre></div></div>

<p>Now, <code>Time#change</code> and <code>Time#advance</code> will choose the offset that matches<br />
the original time’s offset when possible:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ENV</span><span class="p">[</span><span class="s2">"TZ"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"US/Eastern"</span>

<span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="p">.</span><span class="nf">local</span><span class="p">(</span><span class="mi">2021</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mo">07</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">59</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>
<span class="n">time</span><span class="p">.</span><span class="nf">change</span><span class="p">(</span><span class="ss">day: </span><span class="mo">07</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>
<span class="n">time</span><span class="p">.</span><span class="nf">advance</span><span class="p">(</span><span class="ss">seconds: </span><span class="mi">0</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>

<span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="p">.</span><span class="nf">local</span><span class="p">(</span><span class="mi">2021</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mo">06</span><span class="p">,</span> <span class="mo">01</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="mo">00</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-06 01:00:00 -0400</span>
<span class="n">time</span><span class="p">.</span><span class="nf">change</span><span class="p">(</span><span class="ss">day: </span><span class="mo">07</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>
<span class="n">time</span><span class="p">.</span><span class="nf">advance</span><span class="p">(</span><span class="ss">days: </span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0400</span>

<span class="no">Time</span><span class="p">.</span><span class="nf">zone</span> <span class="o">=</span> <span class="s2">"US/Eastern"</span>

<span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="mi">2021</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mo">07</span><span class="p">,</span> <span class="mo">02</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="no">Time</span><span class="p">.</span><span class="nf">zone</span><span class="p">)</span> <span class="o">-</span> <span class="mi">3600</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>
<span class="n">time</span><span class="p">.</span><span class="nf">change</span><span class="p">(</span><span class="ss">day: </span><span class="mo">07</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>
<span class="n">time</span><span class="p">.</span><span class="nf">advance</span><span class="p">(</span><span class="ss">seconds: </span><span class="mi">0</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>

<span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="mi">2021</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mo">01</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="mo">00</span><span class="p">,</span> <span class="no">Time</span><span class="p">.</span><span class="nf">zone</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-08 01:00:00 -0500</span>
<span class="n">time</span><span class="p">.</span><span class="nf">change</span><span class="p">(</span><span class="ss">day: </span><span class="mo">07</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>
<span class="n">time</span><span class="p">.</span><span class="nf">advance</span><span class="p">(</span><span class="ss">days: </span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># =&gt; 2021-11-07 01:00:00 -0500</span>
</code></pre></div></div>

<p><em>Kevin Hall</em>, <em>Takayoshi Nishida</em>, and <em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix MemoryStore to preserve entries TTL when incrementing or decrementing
</title>
    <link>https://github.com/rails/rails/issues/46305</link>
    <guid>https://github.com/rails/rails/issues/46305</guid>
    <description>*   Fix MemoryStore to preserve entries TTL when incrementing or decrementing

    This is to be more consistent with how MemCachedStore and RedisCacheStore behaves.

    *Jean Boussier*</description>
    <pubDate>Sat, 22 Oct 2022 10:49:25 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix MemoryStore to preserve entries TTL when incrementing or decrementing</p>

<p>This is to be more consistent with how MemCachedStore and RedisCacheStore behaves.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `Rails.error.handle` and `Rails.error.record` filter now by multiple error classes.
</title>
    <link>https://github.com/rails/rails/issues/46299</link>
    <guid>https://github.com/rails/rails/issues/46299</guid>
    <description>*   `Rails.error.handle` and `Rails.error.record` filter now by multiple error classes.

    ```ruby
    Rails.error.handle(IOError, ArgumentError) do
      1 + &#39;1&#39; # raises TypeError
    end
    1 + 1 # TypeErrors are not IOErrors or ArgumentError, so this will *not* be handled
    ```

    *Martin Spickermann*</description>
    <pubDate>Fri, 21 Oct 2022 14:36:36 +0000</pubDate>
    <author>Martin Spickermann</author>
    <content:encoded><![CDATA[<p><code>Rails.error.handle</code> and <code>Rails.error.record</code> filter now by multiple error classes.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">error</span><span class="p">.</span><span class="nf">handle</span><span class="p">(</span><span class="no">IOError</span><span class="p">,</span> <span class="no">ArgumentError</span><span class="p">)</span> <span class="k">do</span>
  <span class="mi">1</span> <span class="o">+</span> <span class="s1">'1'</span> <span class="c1"># raises TypeError</span>
<span class="k">end</span>
<span class="mi">1</span> <span class="o">+</span> <span class="mi">1</span> <span class="c1"># TypeErrors are not IOErrors or ArgumentError, so this will *not* be handled</span>
</code></pre></div></div>

<p><em>Martin Spickermann</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `Class#subclasses` and `Class#descendants` now automatically filter reloaded classes.
</title>
    <link>https://github.com/rails/rails/issues/46144</link>
    <guid>https://github.com/rails/rails/issues/46144</guid>
    <description>*   `Class#subclasses` and `Class#descendants` now automatically filter reloaded classes.

    Previously they could return old implementations of reloadable classes that have been
    dereferenced but not yet garbage collected.

    They now automatically filter such classes like `DescendantTracker#subclasses` and
    `DescendantTracker#descendants`.

    *Jean Boussier*</description>
    <pubDate>Wed, 28 Sep 2022 10:09:52 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>Class#subclasses</code> and <code>Class#descendants</code> now automatically filter reloaded classes.</p>

<p>Previously they could return old implementations of reloadable classes that have been<br />
dereferenced but not yet garbage collected.</p>

<p>They now automatically filter such classes like <code>DescendantTracker#subclasses</code> and<br />
<code>DescendantTracker#descendants</code>.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `Rails.error.report` now marks errors as reported to avoid reporting them twice.
</title>
    <link>https://github.com/rails/rails/issues/46131</link>
    <guid>https://github.com/rails/rails/issues/46131</guid>
    <description>*   `Rails.error.report` now marks errors as reported to avoid reporting them twice.

    In some cases, users might want to report errors explicitly with some extra context
    before letting it bubble up.

    This also allows to safely catch and report errors outside of the execution context.

    *Jean Boussier*</description>
    <pubDate>Tue, 27 Sep 2022 09:40:48 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>Rails.error.report</code> now marks errors as reported to avoid reporting them twice.</p>

<p>In some cases, users might want to report errors explicitly with some extra context<br />
before letting it bubble up.</p>

<p>This also allows to safely catch and report errors outside of the execution context.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `assert_error_reported` and `assert_no_error_reported`
</title>
    <link>https://github.com/rails/rails/issues/46029</link>
    <guid>https://github.com/rails/rails/issues/46029</guid>
    <description>*   Add `assert_error_reported` and `assert_no_error_reported`

    Allows to easily asserts an error happened but was handled

    ```ruby
    report = assert_error_reported(IOError) do
      # ...
    end
    assert_equal &quot;Oops&quot;, report.error.message
    assert_equal &quot;admin&quot;, report.context[:section]
    assert_equal :warning, report.severity
    assert_predicate report, :handled?
    ```

    *Jean Boussier*</description>
    <pubDate>Fri, 16 Sep 2022 08:04:46 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Add <code>assert_error_reported</code> and <code>assert_no_error_reported</code></p>

<p>Allows to easily asserts an error happened but was handled</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">report</span> <span class="o">=</span> <span class="n">assert_error_reported</span><span class="p">(</span><span class="no">IOError</span><span class="p">)</span> <span class="k">do</span>
  <span class="c1"># ...</span>
<span class="k">end</span>
<span class="n">assert_equal</span> <span class="s2">"Oops"</span><span class="p">,</span> <span class="n">report</span><span class="p">.</span><span class="nf">error</span><span class="p">.</span><span class="nf">message</span>
<span class="n">assert_equal</span> <span class="s2">"admin"</span><span class="p">,</span> <span class="n">report</span><span class="p">.</span><span class="nf">context</span><span class="p">[</span><span class="ss">:section</span><span class="p">]</span>
<span class="n">assert_equal</span> <span class="ss">:warning</span><span class="p">,</span> <span class="n">report</span><span class="p">.</span><span class="nf">severity</span>
<span class="n">assert_predicate</span> <span class="n">report</span><span class="p">,</span> <span class="ss">:handled?</span>
</code></pre></div></div>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::Deprecation` behavior callbacks can now receive the
</title>
    <link>https://github.com/rails/rails/issues/46037</link>
    <guid>https://github.com/rails/rails/issues/46037</guid>
    <description>*   `ActiveSupport::Deprecation` behavior callbacks can now receive the
    deprecator instance as an argument.  This makes it easier for such callbacks
    to change their behavior based on the deprecator&#39;s state.  For example,
    based on the deprecator&#39;s `debug` flag.

    3-arity and splat-args callbacks such as the following will now be passed
    the deprecator instance as their third argument:

    * `-&gt;(message, callstack, deprecator) { ... }`
    * `-&gt;(*args) { ... }`
    * `-&gt;(message, *other_args) { ... }`

    2-arity and 4-arity callbacks such as the following will continue to behave
    the same as before:

    * `-&gt;(message, callstack) { ... }`
    * `-&gt;(message, callstack, deprecation_horizon, gem_name) { ... }`
    * `-&gt;(message, callstack, *deprecation_details) { ... }`

    *Jonathan Hefner*</description>
    <pubDate>Thu, 15 Sep 2022 21:58:54 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::Deprecation</code> behavior callbacks can now receive the<br />
deprecator instance as an argument.  This makes it easier for such callbacks<br />
to change their behavior based on the deprecator’s state.  For example,<br />
based on the deprecator’s <code>debug</code> flag.</p>

<p>3-arity and splat-args callbacks such as the following will now be passed<br />
the deprecator instance as their third argument:</p>

<ul>
  <li><code>-&gt;(message, callstack, deprecator) { ... }</code></li>
  <li><code>-&gt;(*args) { ... }</code></li>
  <li><code>-&gt;(message, *other_args) { ... }</code></li>
</ul>

<p>2-arity and 4-arity callbacks such as the following will continue to behave<br />
the same as before:</p>

<ul>
  <li><code>-&gt;(message, callstack) { ... }</code></li>
  <li><code>-&gt;(message, callstack, deprecation_horizon, gem_name) { ... }</code></li>
  <li><code>-&gt;(message, callstack, *deprecation_details) { ... }</code></li>
</ul>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::Deprecation#disallowed_warnings` now affects the instance on
</title>
    <link>https://github.com/rails/rails/issues/46026</link>
    <guid>https://github.com/rails/rails/issues/46026</guid>
    <description>*   `ActiveSupport::Deprecation#disallowed_warnings` now affects the instance on
    which it is configured.

    This means that individual `ActiveSupport::Deprecation` instances can be
    configured with their own disallowed warnings, and the global
    `ActiveSupport::Deprecation.disallowed_warnings` now only affects the global
    `ActiveSupport::Deprecation.warn`.

    **Before**

    ```ruby
    ActiveSupport::Deprecation.disallowed_warnings = [&quot;foo&quot;]
    deprecator = ActiveSupport::Deprecation.new(&quot;2.0&quot;, &quot;MyCoolGem&quot;)
    deprecator.disallowed_warnings = [&quot;bar&quot;]

    ActiveSupport::Deprecation.warn(&quot;foo&quot;) # =&gt; raise ActiveSupport::DeprecationException
    ActiveSupport::Deprecation.warn(&quot;bar&quot;) # =&gt; print &quot;DEPRECATION WARNING: bar&quot;
    deprecator.warn(&quot;foo&quot;)                 # =&gt; raise ActiveSupport::DeprecationException
    deprecator.warn(&quot;bar&quot;)                 # =&gt; print &quot;DEPRECATION WARNING: bar&quot;
    ```

    **After**

    ```ruby
    ActiveSupport::Deprecation.disallowed_warnings = [&quot;foo&quot;]
    deprecator = ActiveSupport::Deprecation.new(&quot;2.0&quot;, &quot;MyCoolGem&quot;)
    deprecator.disallowed_warnings = [&quot;bar&quot;]

    ActiveSupport::Deprecation.warn(&quot;foo&quot;) # =&gt; raise ActiveSupport::DeprecationException
    ActiveSupport::Deprecation.warn(&quot;bar&quot;) # =&gt; print &quot;DEPRECATION WARNING: bar&quot;
    deprecator.warn(&quot;foo&quot;)                 # =&gt; print &quot;DEPRECATION WARNING: foo&quot;
    deprecator.warn(&quot;bar&quot;)                 # =&gt; raise ActiveSupport::DeprecationException
    ```

    Note that global `ActiveSupport::Deprecation` methods such as `ActiveSupport::Deprecation.warn`
    and `ActiveSupport::Deprecation.disallowed_warnings` have been deprecated.

    *Jonathan Hefner*</description>
    <pubDate>Wed, 14 Sep 2022 19:15:22 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::Deprecation#disallowed_warnings</code> now affects the instance on<br />
which it is configured.</p>

<p>This means that individual <code>ActiveSupport::Deprecation</code> instances can be<br />
configured with their own disallowed warnings, and the global<br />
<code>ActiveSupport::Deprecation.disallowed_warnings</code> now only affects the global<br />
<code>ActiveSupport::Deprecation.warn</code>.</p>

<p><strong>Before</strong></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">disallowed_warnings</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"foo"</span><span class="p">]</span>
<span class="n">deprecator</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"2.0"</span><span class="p">,</span> <span class="s2">"MyCoolGem"</span><span class="p">)</span>
<span class="n">deprecator</span><span class="p">.</span><span class="nf">disallowed_warnings</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"bar"</span><span class="p">]</span>

<span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">warn</span><span class="p">(</span><span class="s2">"foo"</span><span class="p">)</span> <span class="c1"># =&gt; raise ActiveSupport::DeprecationException</span>
<span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">warn</span><span class="p">(</span><span class="s2">"bar"</span><span class="p">)</span> <span class="c1"># =&gt; print "DEPRECATION WARNING: bar"</span>
<span class="n">deprecator</span><span class="p">.</span><span class="nf">warn</span><span class="p">(</span><span class="s2">"foo"</span><span class="p">)</span>                 <span class="c1"># =&gt; raise ActiveSupport::DeprecationException</span>
<span class="n">deprecator</span><span class="p">.</span><span class="nf">warn</span><span class="p">(</span><span class="s2">"bar"</span><span class="p">)</span>                 <span class="c1"># =&gt; print "DEPRECATION WARNING: bar"</span>
</code></pre></div></div>

<p><strong>After</strong></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">disallowed_warnings</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"foo"</span><span class="p">]</span>
<span class="n">deprecator</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"2.0"</span><span class="p">,</span> <span class="s2">"MyCoolGem"</span><span class="p">)</span>
<span class="n">deprecator</span><span class="p">.</span><span class="nf">disallowed_warnings</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"bar"</span><span class="p">]</span>

<span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">warn</span><span class="p">(</span><span class="s2">"foo"</span><span class="p">)</span> <span class="c1"># =&gt; raise ActiveSupport::DeprecationException</span>
<span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">warn</span><span class="p">(</span><span class="s2">"bar"</span><span class="p">)</span> <span class="c1"># =&gt; print "DEPRECATION WARNING: bar"</span>
<span class="n">deprecator</span><span class="p">.</span><span class="nf">warn</span><span class="p">(</span><span class="s2">"foo"</span><span class="p">)</span>                 <span class="c1"># =&gt; print "DEPRECATION WARNING: foo"</span>
<span class="n">deprecator</span><span class="p">.</span><span class="nf">warn</span><span class="p">(</span><span class="s2">"bar"</span><span class="p">)</span>                 <span class="c1"># =&gt; raise ActiveSupport::DeprecationException</span>
</code></pre></div></div>

<p>Note that global <code>ActiveSupport::Deprecation</code> methods such as <code>ActiveSupport::Deprecation.warn</code><br />
and <code>ActiveSupport::Deprecation.disallowed_warnings</code> have been deprecated.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add italic and underline support to `ActiveSupport::LogSubscriber#color`
</title>
    <link>https://github.com/rails/rails/issues/45976</link>
    <guid>https://github.com/rails/rails/issues/45976</guid>
    <description>*   Add italic and underline support to `ActiveSupport::LogSubscriber#color`

    Previously, only bold text was supported via a positional argument.
    This allows for bold, italic, and underline options to be specified
    for colored logs.

    ```ruby
    info color(&quot;Hello world!&quot;, :red, bold: true, underline: true)
    ```

    *Gannon McGibbon*</description>
    <pubDate>Sat, 10 Sep 2022 04:43:50 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Add italic and underline support to <code>ActiveSupport::LogSubscriber#color</code></p>

<p>Previously, only bold text was supported via a positional argument.<br />
This allows for bold, italic, and underline options to be specified<br />
for colored logs.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">info</span> <span class="n">color</span><span class="p">(</span><span class="s2">"Hello world!"</span><span class="p">,</span> <span class="ss">:red</span><span class="p">,</span> <span class="ss">bold: </span><span class="kp">true</span><span class="p">,</span> <span class="ss">underline: </span><span class="kp">true</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `String#downcase_first` method.
</title>
    <link>https://github.com/rails/rails/issues/45827</link>
    <guid>https://github.com/rails/rails/issues/45827</guid>
    <description>*   Add `String#downcase_first` method.

    This method is the corollary of `String#upcase_first`.

    *Mark Schneider*</description>
    <pubDate>Thu, 08 Sep 2022 22:15:56 +0000</pubDate>
    <author>Mark Schneider</author>
    <content:encoded><![CDATA[<p>Add <code>String#downcase_first</code> method.</p>

<p>This method is the corollary of <code>String#upcase_first</code>.</p>

<p><em>Mark Schneider</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `thread_mattr_accessor` will call `.dup.freeze` on non-frozen default values.
</title>
    <link>https://github.com/rails/rails/issues/45918</link>
    <guid>https://github.com/rails/rails/issues/45918</guid>
    <description>*   `thread_mattr_accessor` will call `.dup.freeze` on non-frozen default values.

    This provides a basic level of protection against different threads trying
    to mutate a shared default object.

    *Jonathan Hefner*</description>
    <pubDate>Thu, 01 Sep 2022 21:03:18 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>thread_mattr_accessor</code> will call <code>.dup.freeze</code> on non-frozen default values.</p>

<p>This provides a basic level of protection against different threads trying<br />
to mutate a shared default object.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `raise_on_invalid_cache_expiration_time` config to `ActiveSupport::Cache::Store`
</title>
    <link>https://github.com/rails/rails/issues/45892</link>
    <guid>https://github.com/rails/rails/issues/45892</guid>
    <description>*   Add `raise_on_invalid_cache_expiration_time` config to `ActiveSupport::Cache::Store`

    Specifies if an `ArgumentError` should be raised if `Rails.cache` `fetch` or
    `write` are given an invalid `expires_at` or `expires_in` time.

    Options are `true`, and `false`. If `false`, the exception will be reported
    as `handled` and logged instead. Defaults to `true` if `config.load_defaults &gt;= 7.1`.

     *Trevor Turk*</description>
    <pubDate>Tue, 30 Aug 2022 15:31:34 +0000</pubDate>
    <author>Trevor Turk</author>
    <content:encoded><![CDATA[<p>Add <code>raise_on_invalid_cache_expiration_time</code> config to <code>ActiveSupport::Cache::Store</code></p>

<p>Specifies if an <code>ArgumentError</code> should be raised if <code>Rails.cache</code> <code>fetch</code> or<br />
<code>write</code> are given an invalid <code>expires_at</code> or <code>expires_in</code> time.</p>

<p>Options are <code>true</code>, and <code>false</code>. If <code>false</code>, the exception will be reported<br />
as <code>handled</code> and logged instead. Defaults to <code>true</code> if <code>config.load_defaults &gt;= 7.1</code>.</p>

<p><em>Trevor Turk</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::Cache:Store#fetch` now passes an options accessor to the block.
</title>
    <link>https://github.com/rails/rails/issues/45905</link>
    <guid>https://github.com/rails/rails/issues/45905</guid>
    <description>*   `ActiveSupport::Cache:Store#fetch` now passes an options accessor to the block.

    It makes possible to override cache options:

        Rails.cache.fetch(&quot;3rd-party-token&quot;) do |name, options|
          token = fetch_token_from_remote
          # set cache&#39;s TTL to match token&#39;s TTL
          options.expires_in = token.expires_in
          token
        end

    *Andrii Gladkyi*, *Jean Boussier*</description>
    <pubDate>Tue, 30 Aug 2022 12:19:56 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::Cache:Store#fetch</code> now passes an options accessor to the block.</p>

<p>It makes possible to override cache options:</p>

<pre><code>Rails.cache.fetch("3rd-party-token") do |name, options|
  token = fetch_token_from_remote
  # set cache's TTL to match token's TTL
  options.expires_in = token.expires_in
  token
end
</code></pre>

<p><em>Andrii Gladkyi</em>, <em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `default` option of `thread_mattr_accessor` now applies through inheritance and
</title>
    <link>https://github.com/rails/rails/issues/43337</link>
    <guid>https://github.com/rails/rails/issues/43337</guid>
    <description>*   `default` option of `thread_mattr_accessor` now applies through inheritance and
    also across new threads.

    Previously, the `default` value provided was set only at the moment of defining
    the attribute writer, which would cause the attribute to be uninitialized in
    descendants and in other threads.

    Fixes #43312.

    *Thierry Deo*</description>
    <pubDate>Thu, 25 Aug 2022 17:09:20 +0000</pubDate>
    <author>Thierry Deo</author>
    <content:encoded><![CDATA[<p><code>default</code> option of <code>thread_mattr_accessor</code> now applies through inheritance and<br />
also across new threads.</p>

<p>Previously, the <code>default</code> value provided was set only at the moment of defining<br />
the attribute writer, which would cause the attribute to be uninitialized in<br />
descendants and in other threads.</p>

<p>Fixes #43312.</p>

<p><em>Thierry Deo</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Redis cache store is now compatible with redis-rb 5.0.
</title>
    <link>https://github.com/rails/rails/issues/45856</link>
    <guid>https://github.com/rails/rails/issues/45856</guid>
    <description>*   Redis cache store is now compatible with redis-rb 5.0.

    *Jean Boussier*</description>
    <pubDate>Mon, 22 Aug 2022 08:17:16 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Redis cache store is now compatible with redis-rb 5.0.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `skip_nil:` support to `ActiveSupport::Cache::Store#fetch_multi`.
</title>
    <link>https://github.com/rails/rails/issues/45619</link>
    <guid>https://github.com/rails/rails/issues/45619</guid>
    <description>*   Add `skip_nil:` support to `ActiveSupport::Cache::Store#fetch_multi`.

    *Daniel Alfaro*</description>
    <pubDate>Thu, 21 Jul 2022 15:33:34 +0000</pubDate>
    <author>Daniel Alfaro</author>
    <content:encoded><![CDATA[<p>Add <code>skip_nil:</code> support to <code>ActiveSupport::Cache::Store#fetch_multi</code>.</p>

<p><em>Daniel Alfaro</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `quarter` method to date/time
</title>
    <link>https://github.com/rails/rails/issues/45009</link>
    <guid>https://github.com/rails/rails/issues/45009</guid>
    <description>*   Add `quarter` method to date/time

    *Matt Swanson*</description>
    <pubDate>Fri, 15 Jul 2022 20:06:29 +0000</pubDate>
    <author>matt swanson</author>
    <content:encoded><![CDATA[<p>Add <code>quarter</code> method to date/time</p>

<p><em>Matt Swanson</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix `NoMethodError` on custom `ActiveSupport::Deprecation` behavior.
</title>
    <link>https://github.com/rails/rails/issues/45521</link>
    <guid>https://github.com/rails/rails/issues/45521</guid>
    <description>*   Fix `NoMethodError` on custom `ActiveSupport::Deprecation` behavior.

    `ActiveSupport::Deprecation.behavior=` was supposed to accept any object
    that responds to `call`, but in fact its internal implementation assumed that
    this object could respond to `arity`, so it was restricted to only `Proc` objects.

    This change removes this `arity` restriction of custom behaviors.

    *Ryo Nakamura*</description>
    <pubDate>Wed, 06 Jul 2022 15:57:57 +0000</pubDate>
    <author>Ryo Nakamura</author>
    <content:encoded><![CDATA[<p>Fix <code>NoMethodError</code> on custom <code>ActiveSupport::Deprecation</code> behavior.</p>

<p><code>ActiveSupport::Deprecation.behavior=</code> was supposed to accept any object<br />
that responds to <code>call</code>, but in fact its internal implementation assumed that<br />
this object could respond to <code>arity</code>, so it was restricted to only <code>Proc</code> objects.</p>

<p>This change removes this <code>arity</code> restriction of custom behaviors.</p>

<p><em>Ryo Nakamura</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Support `:url_safe` option for `MessageEncryptor`.
</title>
    <link>https://github.com/rails/rails/issues/45550</link>
    <guid>https://github.com/rails/rails/issues/45550</guid>
    <description>*   Support `:url_safe` option for `MessageEncryptor`.

    The `MessageEncryptor` constructor now accepts a `:url_safe` option, similar
    to the `MessageVerifier` constructor.  When enabled, this option ensures
    that messages use a URL-safe encoding.

    *Jonathan Hefner*</description>
    <pubDate>Sat, 09 Jul 2022 20:18:41 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Support <code>:url_safe</code> option for <code>MessageEncryptor</code>.</p>

<p>The <code>MessageEncryptor</code> constructor now accepts a <code>:url_safe</code> option, similar<br />
to the <code>MessageVerifier</code> constructor.  When enabled, this option ensures<br />
that messages use a URL-safe encoding.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `url_safe` option to `ActiveSupport::MessageVerifier` initializer
</title>
    <link>https://github.com/rails/rails/issues/45550</link>
    <guid>https://github.com/rails/rails/issues/45550</guid>
    <description>*   Add `url_safe` option to `ActiveSupport::MessageVerifier` initializer

    `ActiveSupport::MessageVerifier.new` now takes optional `url_safe` argument.
    It can generate URL-safe strings by passing `url_safe: true`.

    ```ruby
    verifier = ActiveSupport::MessageVerifier.new(url_safe: true)
    message = verifier.generate(data) # =&gt; URL-safe string
    ```

    This option is `false` by default to be backwards compatible.

    *Shouichi Kamiya*</description>
    <pubDate>Sat, 09 Jul 2022 20:18:41 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Add <code>url_safe</code> option to <code>ActiveSupport::MessageVerifier</code> initializer</p>

<p><code>ActiveSupport::MessageVerifier.new</code> now takes optional <code>url_safe</code> argument.<br />
It can generate URL-safe strings by passing <code>url_safe: true</code>.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">verifier</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">MessageVerifier</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">url_safe: </span><span class="kp">true</span><span class="p">)</span>
<span class="n">message</span> <span class="o">=</span> <span class="n">verifier</span><span class="p">.</span><span class="nf">generate</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="c1"># =&gt; URL-safe string</span>
</code></pre></div></div>

<p>This option is <code>false</code> by default to be backwards compatible.</p>

<p><em>Shouichi Kamiya</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Enable connection pooling by default for `MemCacheStore` and `RedisCacheStore`.
</title>
    <link>https://github.com/rails/rails/issues/45235</link>
    <guid>https://github.com/rails/rails/issues/45235</guid>
    <description>*   Enable connection pooling by default for `MemCacheStore` and `RedisCacheStore`.

    If you want to disable connection pooling, set `:pool` option to `false` when configuring the cache store:

    ```ruby
    config.cache_store = :mem_cache_store, &quot;cache.example.com&quot;, pool: false
    ```

    *fatkodima*</description>
    <pubDate>Tue, 07 Jun 2022 09:04:27 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Enable connection pooling by default for <code>MemCacheStore</code> and <code>RedisCacheStore</code>.</p>

<p>If you want to disable connection pooling, set <code>:pool</code> option to <code>false</code> when configuring the cache store:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">cache_store</span> <span class="o">=</span> <span class="ss">:mem_cache_store</span><span class="p">,</span> <span class="s2">"cache.example.com"</span><span class="p">,</span> <span class="ss">pool: </span><span class="kp">false</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `force:` support to `ActiveSupport::Cache::Store#fetch_multi`.
</title>
    <link>https://github.com/rails/rails/issues/45174</link>
    <guid>https://github.com/rails/rails/issues/45174</guid>
    <description>*   Add `force:` support to `ActiveSupport::Cache::Store#fetch_multi`.

    *fatkodima*</description>
    <pubDate>Wed, 25 May 2022 14:02:48 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Add <code>force:</code> support to <code>ActiveSupport::Cache::Store#fetch_multi</code>.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecated `:pool_size` and `:pool_timeout` options for configuring connection pooling in cache stores.
</title>
    <link>https://github.com/rails/rails/issues/45111</link>
    <guid>https://github.com/rails/rails/issues/45111</guid>
    <description>*   Deprecated `:pool_size` and `:pool_timeout` options for configuring connection pooling in cache stores.

    Use `pool: true` to enable pooling with default settings:

    ```ruby
    config.cache_store = :redis_cache_store, pool: true
    ```

    Or pass individual options via `:pool` option:

    ```ruby
    config.cache_store = :redis_cache_store, pool: { size: 10, timeout: 2 }
    ```

    *fatkodima*</description>
    <pubDate>Wed, 18 May 2022 15:39:39 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Deprecated <code>:pool_size</code> and <code>:pool_timeout</code> options for configuring connection pooling in cache stores.</p>

<p>Use <code>pool: true</code> to enable pooling with default settings:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">cache_store</span> <span class="o">=</span> <span class="ss">:redis_cache_store</span><span class="p">,</span> <span class="ss">pool: </span><span class="kp">true</span>
</code></pre></div></div>

<p>Or pass individual options via <code>:pool</code> option:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">cache_store</span> <span class="o">=</span> <span class="ss">:redis_cache_store</span><span class="p">,</span> <span class="ss">pool: </span><span class="p">{</span> <span class="ss">size: </span><span class="mi">10</span><span class="p">,</span> <span class="ss">timeout: </span><span class="mi">2</span> <span class="p">}</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Allow #increment and #decrement methods of `ActiveSupport::Cache::Store`
</title>
    <link>https://github.com/rails/rails/issues/45068</link>
    <guid>https://github.com/rails/rails/issues/45068</guid>
    <description>*   Allow #increment and #decrement methods of `ActiveSupport::Cache::Store`
    subclasses to set new values.

    Previously incrementing or decrementing an unset key would fail and return
    nil. A default will now be assumed and the key will be created.

    *Andrej Blagojević*, *Eugene Kenny*</description>
    <pubDate>Tue, 17 May 2022 20:06:43 +0000</pubDate>
    <author>Andrej Blagojević</author>
    <content:encoded><![CDATA[<p>Allow #increment and #decrement methods of <code>ActiveSupport::Cache::Store</code><br />
subclasses to set new values.</p>

<p>Previously incrementing or decrementing an unset key would fail and return<br />
nil. A default will now be assumed and the key will be created.</p>

<p><em>Andrej Blagojević</em>, <em>Eugene Kenny</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `skip_nil:` support to `RedisCacheStore`
</title>
    <link>https://github.com/rails/rails/issues/42909</link>
    <guid>https://github.com/rails/rails/issues/42909</guid>
    <description>*   Add `skip_nil:` support to `RedisCacheStore`

    *Joey Paris*</description>
    <pubDate>Sun, 15 May 2022 13:09:11 +0000</pubDate>
    <author>Joey Paris</author>
    <content:encoded><![CDATA[<p>Add <code>skip_nil:</code> support to <code>RedisCacheStore</code></p>

<p><em>Joey Paris</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::Cache::MemoryStore#write(name, val, unless_exist:true)` now
</title>
    <link>https://github.com/rails/rails/issues/45073</link>
    <guid>https://github.com/rails/rails/issues/45073</guid>
    <description>*   `ActiveSupport::Cache::MemoryStore#write(name, val, unless_exist:true)` now
    correctly writes expired keys.

    *Alan Savage*</description>
    <pubDate>Thu, 12 May 2022 00:25:08 +0000</pubDate>
    <author>Alan Savage</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::Cache::MemoryStore#write(name, val, unless_exist:true)</code> now<br />
correctly writes expired keys.</p>

<p><em>Alan Savage</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `ActiveSupport::ErrorReporter` now accepts and forward a `source:` parameter.
</title>
    <link>https://github.com/rails/rails/issues/44998</link>
    <guid>https://github.com/rails/rails/issues/44998</guid>
    <description>*   `ActiveSupport::ErrorReporter` now accepts and forward a `source:` parameter.

    This allow libraries to signal the origin of the errors, and reporters
    to easily ignore some sources.

    *Jean Boussier*</description>
    <pubDate>Thu, 05 May 2022 08:58:21 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>ActiveSupport::ErrorReporter</code> now accepts and forward a <code>source:</code> parameter.</p>

<p>This allow libraries to signal the origin of the errors, and reporters<br />
to easily ignore some sources.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix and add protections for XSS in `ActionView::Helpers` and `ERB::Util`.
</title>
    <link>https://github.com/rails/rails/issues/44973</link>
    <guid>https://github.com/rails/rails/issues/44973</guid>
    <description>*   Fix and add protections for XSS in `ActionView::Helpers` and `ERB::Util`.

    Add the method `ERB::Util.xml_name_escape` to escape dangerous characters
    in names of tags and names of attributes, following the specification of XML.

    *Álvaro Martín Fraguas*</description>
    <pubDate>Thu, 28 Apr 2022 19:39:20 +0000</pubDate>
    <author>Alvaro Martin Fraguas</author>
    <content:encoded><![CDATA[<p>Fix and add protections for XSS in <code>ActionView::Helpers</code> and <code>ERB::Util</code>.</p>

<p>Add the method <code>ERB::Util.xml_name_escape</code> to escape dangerous characters<br />
in names of tags and names of attributes, following the specification of XML.</p>

<p><em>Álvaro Martín Fraguas</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Respect `ActiveSupport::Logger.new`&#39;s `:formatter` keyword argument
</title>
    <link>https://github.com/rails/rails/issues/44942</link>
    <guid>https://github.com/rails/rails/issues/44942</guid>
    <description>*   Respect `ActiveSupport::Logger.new`&#39;s `:formatter` keyword argument

    The stdlib `Logger::new` allows passing a `:formatter` keyword argument to
    set the logger&#39;s formatter. Previously `ActiveSupport::Logger.new` ignored
    that argument by always setting the formatter to an instance of
    `ActiveSupport::Logger::SimpleFormatter`.

    *Steven Harman*</description>
    <pubDate>Mon, 25 Apr 2022 08:26:23 +0000</pubDate>
    <author>Steven Harman</author>
    <content:encoded><![CDATA[<p>Respect <code>ActiveSupport::Logger.new</code>’s <code>:formatter</code> keyword argument</p>

<p>The stdlib <code>Logger::new</code> allows passing a <code>:formatter</code> keyword argument to<br />
set the logger’s formatter. Previously <code>ActiveSupport::Logger.new</code> ignored<br />
that argument by always setting the formatter to an instance of<br />
<code>ActiveSupport::Logger::SimpleFormatter</code>.</p>

<p><em>Steven Harman</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate preserving the pre-Ruby 2.4 behavior of `to_time`
</title>
    <link>https://github.com/rails/rails/issues/44728</link>
    <guid>https://github.com/rails/rails/issues/44728</guid>
    <description>*   Deprecate preserving the pre-Ruby 2.4 behavior of `to_time`

    With Ruby 2.4+ the default for +to_time+ changed from converting to the
    local system time to preserving the offset of the receiver. At the time Rails
    supported older versions of Ruby so a compatibility layer was added to assist
    in the migration process. From Rails 5.0 new applications have defaulted to
    the Ruby 2.4+ behavior and since Rails 7.0 now only supports Ruby 2.7+
    this compatibility layer can be safely removed.

    To minimize any noise generated the deprecation warning only appears when the
    setting is configured to `false` as that is the only scenario where the
    removal of the compatibility layer has any effect.

    *Andrew White*</description>
    <pubDate>Sun, 20 Mar 2022 22:56:44 +0000</pubDate>
    <author>Andrew White</author>
    <content:encoded><![CDATA[<p>Deprecate preserving the pre-Ruby 2.4 behavior of <code>to_time</code></p>

<p>With Ruby 2.4+ the default for +to_time+ changed from converting to the<br />
local system time to preserving the offset of the receiver. At the time Rails<br />
supported older versions of Ruby so a compatibility layer was added to assist<br />
in the migration process. From Rails 5.0 new applications have defaulted to<br />
the Ruby 2.4+ behavior and since Rails 7.0 now only supports Ruby 2.7+<br />
this compatibility layer can be safely removed.</p>

<p>To minimize any noise generated the deprecation warning only appears when the<br />
setting is configured to <code>false</code> as that is the only scenario where the<br />
removal of the compatibility layer has any effect.</p>

<p><em>Andrew White</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: `Pathname.blank?` only returns true for `Pathname.new(&quot;&quot;)`
</title>
    <link>https://github.com/rails/rails/issues/44485</link>
    <guid>https://github.com/rails/rails/issues/44485</guid>
    <description>*   `Pathname.blank?` only returns true for `Pathname.new(&quot;&quot;)`

    Previously it would end up calling `Pathname#empty?` which returned true
    if the path existed and was an empty directory or file.

    That behavior was unlikely to be expected.

    *Jean Boussier*</description>
    <pubDate>Sun, 20 Feb 2022 08:32:48 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>Pathname.blank?</code> only returns true for <code>Pathname.new("")</code></p>

<p>Previously it would end up calling <code>Pathname#empty?</code> which returned true<br />
if the path existed and was an empty directory or file.</p>

<p>That behavior was unlikely to be expected.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Deprecate `Notification::Event`&#39;s `#children` and `#parent_of?`
</title>
    <link>https://github.com/rails/rails/issues/43390</link>
    <guid>https://github.com/rails/rails/issues/43390</guid>
    <description>*   Deprecate `Notification::Event`&#39;s `#children` and `#parent_of?`

    *John Hawthorn*</description>
    <pubDate>Thu, 17 Feb 2022 16:45:48 +0000</pubDate>
    <author>John Hawthorn</author>
    <content:encoded><![CDATA[<p>Deprecate <code>Notification::Event</code>’s <code>#children</code> and <code>#parent_of?</code></p>

<p><em>John Hawthorn</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Change the default serializer of `ActiveSupport::MessageVerifier` from
</title>
    <link>https://github.com/rails/rails/issues/47963</link>
    <guid>https://github.com/rails/rails/issues/47963</guid>
    <description>*   Change the default serializer of `ActiveSupport::MessageVerifier` from
    `Marshal` to `ActiveSupport::JSON` when using `config.load_defaults 7.1`.

    Messages serialized with `Marshal` can still be read, but new messages will
    be serialized with `ActiveSupport::JSON`. For more information, see
    https://guides.rubyonrails.org/v7.1/configuring.html#config-active-support-message-serializer.

    *Saba Kiaei*, *David Buckley*, and *Jonathan Hefner*</description>
    <pubDate>Mon, 08 May 2023 17:41:22 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Change the default serializer of <code>ActiveSupport::MessageVerifier</code> from<br />
<code>Marshal</code> to <code>ActiveSupport::JSON</code> when using <code>config.load_defaults 7.1</code>.</p>

<p>Messages serialized with <code>Marshal</code> can still be read, but new messages will<br />
be serialized with <code>ActiveSupport::JSON</code>. For more information, see<br />
https://guides.rubyonrails.org/v7.1/configuring.html#config-active-support-message-serializer.</p>

<p><em>Saba Kiaei</em>, <em>David Buckley</em>, and <em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Change the default serializer of `ActiveSupport::MessageEncryptor` from
</title>
    <link>https://github.com/rails/rails/issues/47963</link>
    <guid>https://github.com/rails/rails/issues/47963</guid>
    <description>*   Change the default serializer of `ActiveSupport::MessageEncryptor` from
    `Marshal` to `ActiveSupport::JSON` when using `config.load_defaults 7.1`.

    Messages serialized with `Marshal` can still be read, but new messages will
    be serialized with `ActiveSupport::JSON`. For more information, see
    https://guides.rubyonrails.org/v7.1/configuring.html#config-active-support-message-serializer.

    *Zack Deveau*, *Martin Gingras*, and *Jonathan Hefner*</description>
    <pubDate>Mon, 08 May 2023 17:41:22 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Change the default serializer of <code>ActiveSupport::MessageEncryptor</code> from<br />
<code>Marshal</code> to <code>ActiveSupport::JSON</code> when using <code>config.load_defaults 7.1</code>.</p>

<p>Messages serialized with <code>Marshal</code> can still be read, but new messages will<br />
be serialized with <code>ActiveSupport::JSON</code>. For more information, see<br />
https://guides.rubyonrails.org/v7.1/configuring.html#config-active-support-message-serializer.</p>

<p><em>Zack Deveau</em>, <em>Martin Gingras</em>, and <em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Add `ActiveSupport::TestCase#stub_const` to stub a constant for the duration of a yield.
</title>
    <link>https://github.com/rails/rails/issues/44294</link>
    <guid>https://github.com/rails/rails/issues/44294</guid>
    <description>*   Add `ActiveSupport::TestCase#stub_const` to stub a constant for the duration of a yield.

    *DHH*</description>
    <pubDate>Tue, 01 Feb 2022 18:09:50 +0000</pubDate>
    <author>David Heinemeier Hansson</author>
    <content:encoded><![CDATA[<p>Add <code>ActiveSupport::TestCase#stub_const</code> to stub a constant for the duration of a yield.</p>

<p><em>DHH</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix `ActiveSupport::EncryptedConfiguration` to be compatible with Psych 4
</title>
    <link>https://github.com/rails/rails/issues/44244</link>
    <guid>https://github.com/rails/rails/issues/44244</guid>
    <description>*   Fix `ActiveSupport::EncryptedConfiguration` to be compatible with Psych 4

    *Stephen Sugden*</description>
    <pubDate>Wed, 26 Jan 2022 12:14:45 +0000</pubDate>
    <author>Stephen Sugden</author>
    <content:encoded><![CDATA[<p>Fix <code>ActiveSupport::EncryptedConfiguration</code> to be compatible with Psych 4</p>

<p><em>Stephen Sugden</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Improve `File.atomic_write` error handling
</title>
    <link>https://github.com/rails/rails/issues/44151</link>
    <guid>https://github.com/rails/rails/issues/44151</guid>
    <description>*   Improve `File.atomic_write` error handling

    *Daniel Pepper*</description>
    <pubDate>Mon, 17 Jan 2022 09:14:19 +0000</pubDate>
    <author>Daniel Pepper</author>
    <content:encoded><![CDATA[<p>Improve <code>File.atomic_write</code> error handling</p>

<p><em>Daniel Pepper</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activesupport: Fix `Class#descendants` and `DescendantsTracker#descendants` compatibility with Ruby 3.1.
</title>
    <link>https://github.com/rails/rails/issues/43951</link>
    <guid>https://github.com/rails/rails/issues/43951</guid>
    <description>*   Fix `Class#descendants` and `DescendantsTracker#descendants` compatibility with Ruby 3.1.

    [The native `Class#descendants` was reverted prior to Ruby 3.1 release](https://bugs.ruby-lang.org/issues/14394#note-33),
    but `Class#subclasses` was kept, breaking the feature detection.

    *Jean Boussier*</description>
    <pubDate>Tue, 21 Dec 2021 10:59:28 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix <code>Class#descendants</code> and <code>DescendantsTracker#descendants</code> compatibility with Ruby 3.1.</p>

<p><a href="https://bugs.ruby-lang.org/issues/14394#note-33">The native <code>Class#descendants</code> was reverted prior to Ruby 3.1 release</a>,<br />
but <code>Class#subclasses</code> was kept, breaking the feature detection.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Mailers are listed in alphabetical order on the mailer preview page now.
</title>
    <link>https://github.com/rails/rails/issues/48989</link>
    <guid>https://github.com/rails/rails/issues/48989</guid>
    <description>*   Mailers are listed in alphabetical order on the mailer preview page now.

    *Martin Spickermann*</description>
    <pubDate>Mon, 21 Aug 2023 17:06:18 +0000</pubDate>
    <author>Martin Spickermann</author>
    <content:encoded><![CDATA[<p>Mailers are listed in alphabetical order on the mailer preview page now.</p>

<p><em>Martin Spickermann</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Deprecate passing params to `assert_enqueued_email_with` via the `:args`
</title>
    <link>https://github.com/rails/rails/issues/48194</link>
    <guid>https://github.com/rails/rails/issues/48194</guid>
    <description>*   Deprecate passing params to `assert_enqueued_email_with` via the `:args`
    kwarg. `assert_enqueued_email_with` now supports a `:params` kwarg, so use
    that to pass params:

    ```ruby
    # BEFORE
    assert_enqueued_email_with MyMailer, :my_method, args: { my_param: &quot;value&quot; }

    # AFTER
    assert_enqueued_email_with MyMailer, :my_method, params: { my_param: &quot;value&quot; }
    ```

    To specify named mailer args as a Hash, wrap the Hash in an array:

    ```ruby
    assert_enqueued_email_with MyMailer, :my_method, args: [{ my_arg: &quot;value&quot; }]
    # OR
    assert_enqueued_email_with MyMailer, :my_method, args: [my_arg: &quot;value&quot;]
    ```

    *Jonathan Hefner*</description>
    <pubDate>Fri, 19 May 2023 22:26:50 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Deprecate passing params to <code>assert_enqueued_email_with</code> via the <code>:args</code><br />
kwarg. <code>assert_enqueued_email_with</code> now supports a <code>:params</code> kwarg, so use<br />
that to pass params:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># BEFORE</span>
<span class="n">assert_enqueued_email_with</span> <span class="no">MyMailer</span><span class="p">,</span> <span class="ss">:my_method</span><span class="p">,</span> <span class="ss">args: </span><span class="p">{</span> <span class="ss">my_param: </span><span class="s2">"value"</span> <span class="p">}</span>

<span class="c1"># AFTER</span>
<span class="n">assert_enqueued_email_with</span> <span class="no">MyMailer</span><span class="p">,</span> <span class="ss">:my_method</span><span class="p">,</span> <span class="ss">params: </span><span class="p">{</span> <span class="ss">my_param: </span><span class="s2">"value"</span> <span class="p">}</span>
</code></pre></div></div>

<p>To specify named mailer args as a Hash, wrap the Hash in an array:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assert_enqueued_email_with</span> <span class="no">MyMailer</span><span class="p">,</span> <span class="ss">:my_method</span><span class="p">,</span> <span class="ss">args: </span><span class="p">[{</span> <span class="ss">my_arg: </span><span class="s2">"value"</span> <span class="p">}]</span>
<span class="c1"># OR</span>
<span class="n">assert_enqueued_email_with</span> <span class="no">MyMailer</span><span class="p">,</span> <span class="ss">:my_method</span><span class="p">,</span> <span class="ss">args: </span><span class="p">[</span><span class="ss">my_arg: </span><span class="s2">"value"</span><span class="p">]</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Accept procs for args and params in `assert_enqueued_email_with`
</title>
    <link>https://github.com/rails/rails/issues/46626</link>
    <guid>https://github.com/rails/rails/issues/46626</guid>
    <description>*   Accept procs for args and params in `assert_enqueued_email_with`

    ```ruby
    assert_enqueued_email_with DeliveryJob, params: -&gt; p { p[:token] =~ /\w+/ } do
      UserMailer.with(token: user.generate_token).email_verification.deliver_later
    end
    ```

    *Max Chernyak*</description>
    <pubDate>Thu, 11 May 2023 18:06:35 +0000</pubDate>
    <author>Max Chernyak</author>
    <content:encoded><![CDATA[<p>Accept procs for args and params in <code>assert_enqueued_email_with</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">assert_enqueued_email_with</span> <span class="no">DeliveryJob</span><span class="p">,</span> <span class="ss">params: </span><span class="o">-&gt;</span> <span class="nb">p</span> <span class="p">{</span> <span class="nb">p</span><span class="p">[</span><span class="ss">:token</span><span class="p">]</span> <span class="o">=~</span> <span class="sr">/\w+/</span> <span class="p">}</span> <span class="k">do</span>
  <span class="no">UserMailer</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">token: </span><span class="n">user</span><span class="p">.</span><span class="nf">generate_token</span><span class="p">).</span><span class="nf">email_verification</span><span class="p">.</span><span class="nf">deliver_later</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Max Chernyak</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Added `*_deliver` callbacks to `ActionMailer::Base` that wrap mail message delivery.
</title>
    <link>https://github.com/rails/rails/issues/47630</link>
    <guid>https://github.com/rails/rails/issues/47630</guid>
    <description>*   Added `*_deliver` callbacks to `ActionMailer::Base` that wrap mail message delivery.

    Example:

    ```ruby
    class EventsMailer &lt; ApplicationMailer
      after_deliver do
        User.find_by(email: message.to.first).update(email_provider_id: message.message_id, emailed_at: Time.current)
      end
    end
    ```

    *Ben Sheldon*</description>
    <pubDate>Tue, 04 Apr 2023 21:58:15 +0000</pubDate>
    <author>Ben Sheldon</author>
    <content:encoded><![CDATA[<p>Added <code>*_deliver</code> callbacks to <code>ActionMailer::Base</code> that wrap mail message delivery.</p>

<p>Example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">EventsMailer</span> <span class="o">&lt;</span> <span class="no">ApplicationMailer</span>
  <span class="n">after_deliver</span> <span class="k">do</span>
    <span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">email: </span><span class="n">message</span><span class="p">.</span><span class="nf">to</span><span class="p">.</span><span class="nf">first</span><span class="p">).</span><span class="nf">update</span><span class="p">(</span><span class="ss">email_provider_id: </span><span class="n">message</span><span class="p">.</span><span class="nf">message_id</span><span class="p">,</span> <span class="ss">emailed_at: </span><span class="no">Time</span><span class="p">.</span><span class="nf">current</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Ben Sheldon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Added `deliver_enqueued_emails` to `ActionMailer::TestHelper`. This method
</title>
    <link>https://github.com/rails/rails/issues/47520</link>
    <guid>https://github.com/rails/rails/issues/47520</guid>
    <description>*   Added `deliver_enqueued_emails` to `ActionMailer::TestHelper`. This method
    delivers all enqueued email jobs.

    Example:

    ```ruby
    def test_deliver_enqueued_emails
      deliver_enqueued_emails do
        ContactMailer.welcome.deliver_later
      end
      assert_emails 1
    end
    ```

    *Andrew Novoselac*</description>
    <pubDate>Tue, 28 Feb 2023 19:13:45 +0000</pubDate>
    <author>Andrew Novoselac</author>
    <content:encoded><![CDATA[<p>Added <code>deliver_enqueued_emails</code> to <code>ActionMailer::TestHelper</code>. This method<br />
delivers all enqueued email jobs.</p>

<p>Example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">test_deliver_enqueued_emails</span>
  <span class="n">deliver_enqueued_emails</span> <span class="k">do</span>
    <span class="no">ContactMailer</span><span class="p">.</span><span class="nf">welcome</span><span class="p">.</span><span class="nf">deliver_later</span>
  <span class="k">end</span>
  <span class="n">assert_emails</span> <span class="mi">1</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Andrew Novoselac</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: The `deliver_later_queue_name` used by the default mailer job can now be
</title>
    <link>https://github.com/rails/rails/issues/47408</link>
    <guid>https://github.com/rails/rails/issues/47408</guid>
    <description>*   The `deliver_later_queue_name` used by the default mailer job can now be
    configured on a per-mailer basis. Previously this was only configurable
    for all mailers via `ActionMailer::Base`.

    Example:

    ```ruby
    class EventsMailer &lt; ApplicationMailer
      self.deliver_later_queue_name = :throttled_mailer
    end
    ```

    *Jeffrey Hardy*</description>
    <pubDate>Sat, 18 Feb 2023 01:06:41 +0000</pubDate>
    <author>Jeffrey Hardy</author>
    <content:encoded><![CDATA[<p>The <code>deliver_later_queue_name</code> used by the default mailer job can now be<br />
configured on a per-mailer basis. Previously this was only configurable<br />
for all mailers via <code>ActionMailer::Base</code>.</p>

<p>Example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">EventsMailer</span> <span class="o">&lt;</span> <span class="no">ApplicationMailer</span>
  <span class="nb">self</span><span class="p">.</span><span class="nf">deliver_later_queue_name</span> <span class="o">=</span> <span class="ss">:throttled_mailer</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Jeffrey Hardy</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Email previews now include an expandable section to show all headers.
</title>
    <link>https://github.com/rails/rails/issues/47331</link>
    <guid>https://github.com/rails/rails/issues/47331</guid>
    <description>*   Email previews now include an expandable section to show all headers.

    Headers like `Message-ID` for threading or email service provider specific
    features like analytics tags or account metadata can now be viewed directly
    in the mailer preview.

    *Matt Swanson*</description>
    <pubDate>Thu, 09 Feb 2023 05:53:41 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Email previews now include an expandable section to show all headers.</p>

<p>Headers like <code>Message-ID</code> for threading or email service provider specific<br />
features like analytics tags or account metadata can now be viewed directly<br />
in the mailer preview.</p>

<p><em>Matt Swanson</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Default `ActionMailer::Parameterized#params` to an empty `Hash`
</title>
    <link>https://github.com/rails/rails/issues/47101</link>
    <guid>https://github.com/rails/rails/issues/47101</guid>
    <description>*   Default `ActionMailer::Parameterized#params` to an empty `Hash`

    *Sean Doyle*</description>
    <pubDate>Mon, 23 Jan 2023 19:22:32 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Default <code>ActionMailer::Parameterized#params</code> to an empty <code>Hash</code></p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Introduce the `capture_emails` test helper.
</title>
    <link>https://github.com/rails/rails/issues/48798</link>
    <guid>https://github.com/rails/rails/issues/48798</guid>
    <description>*   Introduce the `capture_emails` test helper.

    Returns all emails that are sent in a block.

    ```ruby
    def test_emails
      emails = capture_emails do
        ContactMailer.welcome.deliver_now
        ContactMailer.welcome.deliver_later
      end
      assert_email &quot;Hi there&quot;, emails.first.subject
    end
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Tue, 25 Jul 2023 14:51:13 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Introduce the <code>capture_emails</code> test helper.</p>

<p>Returns all emails that are sent in a block.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">test_emails</span>
  <span class="n">emails</span> <span class="o">=</span> <span class="n">capture_emails</span> <span class="k">do</span>
    <span class="no">ContactMailer</span><span class="p">.</span><span class="nf">welcome</span><span class="p">.</span><span class="nf">deliver_now</span>
    <span class="no">ContactMailer</span><span class="p">.</span><span class="nf">welcome</span><span class="p">.</span><span class="nf">deliver_later</span>
  <span class="k">end</span>
  <span class="n">assert_email</span> <span class="s2">"Hi there"</span><span class="p">,</span> <span class="n">emails</span><span class="p">.</span><span class="nf">first</span><span class="p">.</span><span class="nf">subject</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Added ability to download `.eml` file for the email preview.
</title>
    <link>https://github.com/rails/rails/issues/45987</link>
    <guid>https://github.com/rails/rails/issues/45987</guid>
    <description>*   Added ability to download `.eml` file for the email preview.

    *Igor Kasyanchuk*</description>
    <pubDate>Fri, 09 Sep 2022 21:39:59 +0000</pubDate>
    <author>Igor Kasyanchuk</author>
    <content:encoded><![CDATA[<p>Added ability to download <code>.eml</code> file for the email preview.</p>

<p><em>Igor Kasyanchuk</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailer: Support multiple preview paths for mailers.
</title>
    <link>https://github.com/rails/rails/issues/31595</link>
    <guid>https://github.com/rails/rails/issues/31595</guid>
    <description>*   Support multiple preview paths for mailers.

    Option `config.action_mailer.preview_path` is deprecated in favor of
    `config.action_mailer.preview_paths`. Appending paths to this configuration option
    will cause those paths to be used in the search for mailer previews.

    *fatkodima*</description>
    <pubDate>Tue, 09 Aug 2022 19:20:18 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Support multiple preview paths for mailers.</p>

<p>Option <code>config.action_mailer.preview_path</code> is deprecated in favor of<br />
<code>config.action_mailer.preview_paths</code>. Appending paths to this configuration option<br />
will cause those paths to be used in the search for mailer previews.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Error.full_message now strips &quot;:base&quot; from the message.
</title>
    <link>https://github.com/rails/rails/issues/48871</link>
    <guid>https://github.com/rails/rails/issues/48871</guid>
    <description>*   Error.full_message now strips &quot;:base&quot; from the message.

    *zzak*</description>
    <pubDate>Wed, 02 Aug 2023 20:31:11 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Error.full_message now strips “:base” from the message.</p>

<p><em>zzak</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Add a load hook for `ActiveModel::Model` (named `active_model`) to match the load hook for
</title>
    <link>https://github.com/rails/rails/issues/48871</link>
    <guid>https://github.com/rails/rails/issues/48871</guid>
    <description>*   Add a load hook for `ActiveModel::Model` (named `active_model`) to match the load hook for
    `ActiveRecord::Base` and allow for overriding aspects of the `ActiveModel::Model` class.

    *Lewis Buckley*</description>
    <pubDate>Wed, 02 Aug 2023 20:31:11 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Add a load hook for <code>ActiveModel::Model</code> (named <code>active_model</code>) to match the load hook for<br />
<code>ActiveRecord::Base</code> and allow for overriding aspects of the <code>ActiveModel::Model</code> class.</p>

<p><em>Lewis Buckley</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Improve password length validation in ActiveModel::SecurePassword to consider byte size for BCrypt
</title>
    <link>https://github.com/rails/rails/issues/48871</link>
    <guid>https://github.com/rails/rails/issues/48871</guid>
    <description>*   Improve password length validation in ActiveModel::SecurePassword to consider byte size for BCrypt
    compatibility.

    The previous password length validation only considered the character count, which may not
    accurately reflect the 72-byte size limit imposed by BCrypt. This change updates the validation
    to consider both character count and byte size while keeping the character length validation in place.

    ```ruby
      user = User.new(password: &quot;a&quot; * 73)  # 73 characters
      user.valid? # =&gt; false
      user.errors[:password] # =&gt; [&quot;is too long&quot;]


      user = User.new(password: &quot;あ&quot; * 25)  # 25 characters, 75 bytes
      user.valid? # =&gt; false
      user.errors[:password] # =&gt; [&quot;is too long&quot;]
    ```

    *ChatGPT*, *Guillermo Iguaran*</description>
    <pubDate>Wed, 02 Aug 2023 20:31:11 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Improve password length validation in ActiveModel::SecurePassword to consider byte size for BCrypt<br />
compatibility.</p>

<p>The previous password length validation only considered the character count, which may not<br />
accurately reflect the 72-byte size limit imposed by BCrypt. This change updates the validation<br />
to consider both character count and byte size while keeping the character length validation in place.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">password: </span><span class="s2">"a"</span> <span class="o">*</span> <span class="mi">73</span><span class="p">)</span>  <span class="c1"># 73 characters</span>
  <span class="n">user</span><span class="p">.</span><span class="nf">valid?</span> <span class="c1"># =&gt; false</span>
  <span class="n">user</span><span class="p">.</span><span class="nf">errors</span><span class="p">[</span><span class="ss">:password</span><span class="p">]</span> <span class="c1"># =&gt; ["is too long"]</span>


  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">password: </span><span class="s2">"あ"</span> <span class="o">*</span> <span class="mi">25</span><span class="p">)</span>  <span class="c1"># 25 characters, 75 bytes</span>
  <span class="n">user</span><span class="p">.</span><span class="nf">valid?</span> <span class="c1"># =&gt; false</span>
  <span class="n">user</span><span class="p">.</span><span class="nf">errors</span><span class="p">[</span><span class="ss">:password</span><span class="p">]</span> <span class="c1"># =&gt; ["is too long"]</span>
</code></pre></div></div>

<p><em>ChatGPT</em>, <em>Guillermo Iguaran</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: `has_secure_password` now generates an `#{attribute}_salt` method that returns the salt
</title>
    <link>https://github.com/rails/rails/issues/47490</link>
    <guid>https://github.com/rails/rails/issues/47490</guid>
    <description>*   `has_secure_password` now generates an `#{attribute}_salt` method that returns the salt
    used to compute the password digest. The salt will change whenever the password is changed,
    so it can be used to create single-use password reset tokens with `generates_token_for`:

    ```ruby
    class User &lt; ActiveRecord::Base
      has_secure_password

      generates_token_for :password_reset, expires_in: 15.minutes do
        password_salt&amp;.last(10)
      end
    end
    ```

    *Lázaro Nixon*</description>
    <pubDate>Thu, 09 Mar 2023 20:53:10 +0000</pubDate>
    <author>Nixon</author>
    <content:encoded><![CDATA[<p><code>has_secure_password</code> now generates an <code>#{attribute}_salt</code> method that returns the salt<br />
used to compute the password digest. The salt will change whenever the password is changed,<br />
so it can be used to create single-use password reset tokens with <code>generates_token_for</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">has_secure_password</span>

  <span class="n">generates_token_for</span> <span class="ss">:password_reset</span><span class="p">,</span> <span class="ss">expires_in: </span><span class="mi">15</span><span class="p">.</span><span class="nf">minutes</span> <span class="k">do</span>
    <span class="n">password_salt</span><span class="o">&amp;</span><span class="p">.</span><span class="nf">last</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Lázaro Nixon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Improve typography of user facing error messages. In English contractions,
</title>
    <link>https://github.com/rails/rails/issues/45463</link>
    <guid>https://github.com/rails/rails/issues/45463</guid>
    <description>*   Improve typography of user facing error messages. In English contractions,
    the Unicode APOSTROPHE (`U+0027`) is now RIGHT SINGLE QUOTATION MARK
    (`U+2019`). For example, &quot;can&#39;t be blank&quot; is now &quot;can’t be blank&quot;.

    *Jon Dufresne*</description>
    <pubDate>Fri, 03 Mar 2023 22:58:01 +0000</pubDate>
    <author>Jon Dufresne</author>
    <content:encoded><![CDATA[<p>Improve typography of user facing error messages. In English contractions,<br />
the Unicode APOSTROPHE (<code>U+0027</code>) is now RIGHT SINGLE QUOTATION MARK<br />
(<code>U+2019</code>). For example, “can’t be blank” is now “can’t be blank”.</p>

<p><em>Jon Dufresne</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Add class to `ActiveModel::MissingAttributeError` error message.
</title>
    <link>https://github.com/rails/rails/issues/45463</link>
    <guid>https://github.com/rails/rails/issues/45463</guid>
    <description>*   Add class to `ActiveModel::MissingAttributeError` error message.

    Show which class is missing the attribute in the error message:

    ```ruby
    user = User.first
    user.pets.select(:id).first.user_id
    # =&gt; ActiveModel::MissingAttributeError: missing attribute &#39;user_id&#39; for Pet
    ```

    *Petrik de Heus*</description>
    <pubDate>Sat, 04 Mar 2023 15:27:27 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Add class to <code>ActiveModel::MissingAttributeError</code> error message.</p>

<p>Show which class is missing the attribute in the error message:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">first</span>
<span class="n">user</span><span class="p">.</span><span class="nf">pets</span><span class="p">.</span><span class="nf">select</span><span class="p">(</span><span class="ss">:id</span><span class="p">).</span><span class="nf">first</span><span class="p">.</span><span class="nf">user_id</span>
<span class="c1"># =&gt; ActiveModel::MissingAttributeError: missing attribute 'user_id' for Pet</span>
</code></pre></div></div>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Raise `NoMethodError` in `ActiveModel::Type::Value#as_json` to avoid unpredictable
</title>
    <link>https://github.com/rails/rails/issues/46535</link>
    <guid>https://github.com/rails/rails/issues/46535</guid>
    <description>*   Raise `NoMethodError` in `ActiveModel::Type::Value#as_json` to avoid unpredictable
    results.

    *Vasiliy Ermolovich*</description>
    <pubDate>Mon, 28 Nov 2022 19:54:22 +0000</pubDate>
    <author>Vasiliy Ermolovich</author>
    <content:encoded><![CDATA[<p>Raise <code>NoMethodError</code> in <code>ActiveModel::Type::Value#as_json</code> to avoid unpredictable<br />
results.</p>

<p><em>Vasiliy Ermolovich</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Custom attribute types that inherit from Active Model built-in types and do
</title>
    <link>https://github.com/rails/rails/issues/46219</link>
    <guid>https://github.com/rails/rails/issues/46219</guid>
    <description>*   Custom attribute types that inherit from Active Model built-in types and do
    not override the `serialize` method will now benefit from an optimization
    when serializing attribute values for the database.

    For example, with a custom type like the following:

    ```ruby
    class DowncasedString &lt; ActiveModel::Type::String
      def cast(value)
        super&amp;.downcase
      end
    end

    ActiveRecord::Type.register(:downcased_string, DowncasedString)

    class User &lt; ActiveRecord::Base
      attribute :email, :downcased_string
    end

    user = User.new(email: &quot;FooBar@example.com&quot;)
    ```

    Serializing the `email` attribute for the database will be roughly twice as
    fast.  More expensive `cast` operations will likely see greater improvements.

    *Jonathan Hefner*</description>
    <pubDate>Sun, 16 Oct 2022 21:40:20 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Custom attribute types that inherit from Active Model built-in types and do<br />
not override the <code>serialize</code> method will now benefit from an optimization<br />
when serializing attribute values for the database.</p>

<p>For example, with a custom type like the following:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">DowncasedString</span> <span class="o">&lt;</span> <span class="no">ActiveModel</span><span class="o">::</span><span class="no">Type</span><span class="o">::</span><span class="no">String</span>
  <span class="k">def</span> <span class="nf">cast</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
    <span class="k">super</span><span class="o">&amp;</span><span class="p">.</span><span class="nf">downcase</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Type</span><span class="p">.</span><span class="nf">register</span><span class="p">(</span><span class="ss">:downcased_string</span><span class="p">,</span> <span class="no">DowncasedString</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">attribute</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:downcased_string</span>
<span class="k">end</span>

<span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">email: </span><span class="s2">"FooBar@example.com"</span><span class="p">)</span>
</code></pre></div></div>

<p>Serializing the <code>email</code> attribute for the database will be roughly twice as<br />
fast.  More expensive <code>cast</code> operations will likely see greater improvements.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: `has_secure_password` now supports password challenges via a
</title>
    <link>https://github.com/rails/rails/issues/43688</link>
    <guid>https://github.com/rails/rails/issues/43688</guid>
    <description>*   `has_secure_password` now supports password challenges via a
    `password_challenge` accessor and validation.

    A password challenge is a safeguard to verify that the current user is
    actually the password owner.  It can be used when changing sensitive model
    fields, such as the password itself.  It is different than a password
    confirmation, which is used to prevent password typos.

    When `password_challenge` is set, the validation checks that the value&#39;s
    digest matches the *currently persisted* `password_digest` (i.e.
    `password_digest_was`).

    This allows a password challenge to be done as part of a typical `update`
    call, just like a password confirmation.  It also allows a password
    challenge error to be handled in the same way as other validation errors.

    For example, in the controller, instead of:

    ```ruby
    password_params = params.require(:password).permit(
      :password_challenge,
      :password,
      :password_confirmation,
    )

    password_challenge = password_params.delete(:password_challenge)
    @password_challenge_failed = !current_user.authenticate(password_challenge)

    if !@password_challenge_failed &amp;&amp; current_user.update(password_params)
      # ...
    end
    ```

    You can now write:

    ```ruby
    password_params = params.require(:password).permit(
      :password_challenge,
      :password,
      :password_confirmation,
    ).with_defaults(password_challenge: &quot;&quot;)

    if current_user.update(password_params)
      # ...
    end
    ```

    And, in the view, instead of checking `@password_challenge_failed`, you can
    render an error for the `password_challenge` field just as you would for
    other form fields, including utilizing `config.action_view.field_error_proc`.

    *Jonathan Hefner*</description>
    <pubDate>Tue, 26 Jul 2022 05:14:42 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>has_secure_password</code> now supports password challenges via a<br />
<code>password_challenge</code> accessor and validation.</p>

<p>A password challenge is a safeguard to verify that the current user is<br />
actually the password owner.  It can be used when changing sensitive model<br />
fields, such as the password itself.  It is different than a password<br />
confirmation, which is used to prevent password typos.</p>

<p>When <code>password_challenge</code> is set, the validation checks that the value’s<br />
digest matches the <em>currently persisted</em> <code>password_digest</code> (i.e.<br />
<code>password_digest_was</code>).</p>

<p>This allows a password challenge to be done as part of a typical <code>update</code><br />
call, just like a password confirmation.  It also allows a password<br />
challenge error to be handled in the same way as other validation errors.</p>

<p>For example, in the controller, instead of:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">password_params</span> <span class="o">=</span> <span class="n">params</span><span class="p">.</span><span class="nf">require</span><span class="p">(</span><span class="ss">:password</span><span class="p">).</span><span class="nf">permit</span><span class="p">(</span>
  <span class="ss">:password_challenge</span><span class="p">,</span>
  <span class="ss">:password</span><span class="p">,</span>
  <span class="ss">:password_confirmation</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">password_challenge</span> <span class="o">=</span> <span class="n">password_params</span><span class="p">.</span><span class="nf">delete</span><span class="p">(</span><span class="ss">:password_challenge</span><span class="p">)</span>
<span class="vi">@password_challenge_failed</span> <span class="o">=</span> <span class="o">!</span><span class="n">current_user</span><span class="p">.</span><span class="nf">authenticate</span><span class="p">(</span><span class="n">password_challenge</span><span class="p">)</span>

<span class="k">if</span> <span class="o">!</span><span class="vi">@password_challenge_failed</span> <span class="o">&amp;&amp;</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">password_params</span><span class="p">)</span>
  <span class="c1"># ...</span>
<span class="k">end</span>
</code></pre></div></div>

<p>You can now write:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">password_params</span> <span class="o">=</span> <span class="n">params</span><span class="p">.</span><span class="nf">require</span><span class="p">(</span><span class="ss">:password</span><span class="p">).</span><span class="nf">permit</span><span class="p">(</span>
  <span class="ss">:password_challenge</span><span class="p">,</span>
  <span class="ss">:password</span><span class="p">,</span>
  <span class="ss">:password_confirmation</span><span class="p">,</span>
<span class="p">).</span><span class="nf">with_defaults</span><span class="p">(</span><span class="ss">password_challenge: </span><span class="s2">""</span><span class="p">)</span>

<span class="k">if</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">password_params</span><span class="p">)</span>
  <span class="c1"># ...</span>
<span class="k">end</span>
</code></pre></div></div>

<p>And, in the view, instead of checking <code>@password_challenge_failed</code>, you can<br />
render an error for the <code>password_challenge</code> field just as you would for<br />
other form fields, including utilizing <code>config.action_view.field_error_proc</code>.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Support infinite ranges for `LengthValidator`s `:in`/`:within` options
</title>
    <link>https://github.com/rails/rails/issues/45138</link>
    <guid>https://github.com/rails/rails/issues/45138</guid>
    <description>*   Support infinite ranges for `LengthValidator`s `:in`/`:within` options

    ```ruby
    validates_length_of :first_name, in: ..30
    ```

    *fatkodima*</description>
    <pubDate>Fri, 20 May 2022 18:05:20 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Support infinite ranges for <code>LengthValidator</code>s <code>:in</code>/<code>:within</code> options</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">validates_length_of</span> <span class="ss">:first_name</span><span class="p">,</span> <span class="ss">in: </span><span class="o">..</span><span class="mi">30</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Add support for beginless ranges to inclusivity/exclusivity validators:
</title>
    <link>https://github.com/rails/rails/issues/45123</link>
    <guid>https://github.com/rails/rails/issues/45123</guid>
    <description>*   Add support for beginless ranges to inclusivity/exclusivity validators:

    ```ruby
    validates_inclusion_of :birth_date, in: -&gt; { (..Date.today) }
    ```

    *Bo Jeanes*</description>
    <pubDate>Fri, 20 May 2022 14:54:54 +0000</pubDate>
    <author>Bo Jeanes</author>
    <content:encoded><![CDATA[<p>Add support for beginless ranges to inclusivity/exclusivity validators:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">validates_inclusion_of</span> <span class="ss">:birth_date</span><span class="p">,</span> <span class="ss">in: </span><span class="o">-&gt;</span> <span class="p">{</span> <span class="p">(</span><span class="o">..</span><span class="no">Date</span><span class="p">.</span><span class="nf">today</span><span class="p">)</span> <span class="p">}</span>
</code></pre></div></div>

<p><em>Bo Jeanes</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Make validators accept lambdas without record argument
</title>
    <link>https://github.com/rails/rails/issues/45118</link>
    <guid>https://github.com/rails/rails/issues/45118</guid>
    <description>*   Make validators accept lambdas without record argument

    ```ruby
    # Before
    validates_comparison_of :birth_date, less_than_or_equal_to: -&gt;(_record) { Date.today }

    # After
    validates_comparison_of :birth_date, less_than_or_equal_to: -&gt; { Date.today }
    ```

    *fatkodima*</description>
    <pubDate>Wed, 18 May 2022 18:08:47 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Make validators accept lambdas without record argument</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Before</span>
<span class="n">validates_comparison_of</span> <span class="ss">:birth_date</span><span class="p">,</span> <span class="ss">less_than_or_equal_to: </span><span class="o">-&gt;</span><span class="p">(</span><span class="n">_record</span><span class="p">)</span> <span class="p">{</span> <span class="no">Date</span><span class="p">.</span><span class="nf">today</span> <span class="p">}</span>

<span class="c1"># After</span>
<span class="n">validates_comparison_of</span> <span class="ss">:birth_date</span><span class="p">,</span> <span class="ss">less_than_or_equal_to: </span><span class="o">-&gt;</span> <span class="p">{</span> <span class="no">Date</span><span class="p">.</span><span class="nf">today</span> <span class="p">}</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Fix casting long strings to `Date`, `Time` or `DateTime`
</title>
    <link>https://github.com/rails/rails/issues/45005</link>
    <guid>https://github.com/rails/rails/issues/45005</guid>
    <description>*   Fix casting long strings to `Date`, `Time` or `DateTime`

    *fatkodima*</description>
    <pubDate>Wed, 11 May 2022 15:03:30 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Fix casting long strings to <code>Date</code>, <code>Time</code> or <code>DateTime</code></p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activemodel: Use different cache namespace for proxy calls
</title>
    <link>https://github.com/rails/rails/issues/44322</link>
    <guid>https://github.com/rails/rails/issues/44322</guid>
    <description>*   Use different cache namespace for proxy calls

    Models can currently have different attribute bodies for the same method
    names, leading to conflicts. Adding a new namespace `:active_model_proxy`
    fixes the issue.

    *Chris Salzberg*</description>
    <pubDate>Thu, 03 Feb 2022 09:10:31 +0000</pubDate>
    <author>Chris Salzberg</author>
    <content:encoded><![CDATA[<p>Use different cache namespace for proxy calls</p>

<p>Models can currently have different attribute bodies for the same method<br />
names, leading to conflicts. Adding a new namespace <code>:active_model_proxy</code><br />
fixes the issue.</p>

<p><em>Chris Salzberg</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>guides: Add &quot;back to top&quot; button to guides
</title>
    <link>https://github.com/rails/rails/issues/48354</link>
    <guid>https://github.com/rails/rails/issues/48354</guid>
    <description>*   Add &quot;back to top&quot; button to guides

    *Alysson Rosa*</description>
    <pubDate>Thu, 01 Jun 2023 07:38:41 +0000</pubDate>
    <author>Alysson Rosa</author>
    <content:encoded><![CDATA[<p>Add “back to top” button to guides</p>

<p><em>Alysson Rosa</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add support for Playwright as a driver for system tests.
</title>
    <link>https://github.com/rails/rails/issues/48950</link>
    <guid>https://github.com/rails/rails/issues/48950</guid>
    <description>*   Add support for Playwright as a driver for system tests.

    *Yuki Nishijima*</description>
    <pubDate>Mon, 21 Aug 2023 19:27:53 +0000</pubDate>
    <author>Yuki Nishijima</author>
    <content:encoded><![CDATA[<p>Add support for Playwright as a driver for system tests.</p>

<p><em>Yuki Nishijima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Fix `HostAuthorization` potentially displaying the value of the
</title>
    <link>https://github.com/rails/rails/issues/48941</link>
    <guid>https://github.com/rails/rails/issues/48941</guid>
    <description>*   Fix `HostAuthorization` potentially displaying the value of the
    X_FORWARDED_HOST header when the HTTP_HOST header is being blocked.

    *Hartley McGuire*, *Daniel Schlosser*</description>
    <pubDate>Mon, 21 Aug 2023 19:05:44 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Fix <code>HostAuthorization</code> potentially displaying the value of the<br />
X_FORWARDED_HOST header when the HTTP_HOST header is being blocked.</p>

<p><em>Hartley McGuire</em>, <em>Daniel Schlosser</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Rename `fixture_file_upload` method to `file_fixture_upload`
</title>
    <link>https://github.com/rails/rails/issues/48857</link>
    <guid>https://github.com/rails/rails/issues/48857</guid>
    <description>*   Rename `fixture_file_upload` method to `file_fixture_upload`

    Declare an alias to preserve the backwards compatibility of `fixture_file_upload`

    *Sean Doyle*</description>
    <pubDate>Fri, 04 Aug 2023 21:08:40 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Rename <code>fixture_file_upload</code> method to <code>file_fixture_upload</code></p>

<p>Declare an alias to preserve the backwards compatibility of <code>fixture_file_upload</code></p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: `ActionDispatch::SystemTesting::TestHelpers::ScreenshotHelper` saves the screenshot path in test metadata on failure.
</title>
    <link>https://github.com/rails/rails/issues/48863</link>
    <guid>https://github.com/rails/rails/issues/48863</guid>
    <description>*   `ActionDispatch::SystemTesting::TestHelpers::ScreenshotHelper` saves the screenshot path in test metadata on failure.

    *Matija Čupić*</description>
    <pubDate>Thu, 03 Aug 2023 14:35:29 +0000</pubDate>
    <author>Matija Čupić</author>
    <content:encoded><![CDATA[<p><code>ActionDispatch::SystemTesting::TestHelpers::ScreenshotHelper</code> saves the screenshot path in test metadata on failure.</p>

<p><em>Matija Čupić</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: `config.dom_testing_default_html_version` controls the HTML parser used by
</title>
    <link>https://github.com/rails/rails/issues/48682</link>
    <guid>https://github.com/rails/rails/issues/48682</guid>
    <description>*   `config.dom_testing_default_html_version` controls the HTML parser used by
    `ActionDispatch::Assertions#html_document`.

    The Rails 7.1 default configuration opts into the HTML5 parser when it is supported, to better
    represent what the DOM would be in a browser user agent. Previously this test helper always used
    Nokogiri&#39;s HTML4 parser.

    *Mike Dalessio*</description>
    <pubDate>Thu, 03 Aug 2023 17:47:58 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p><code>config.dom_testing_default_html_version</code> controls the HTML parser used by<br />
<code>ActionDispatch::Assertions#html_document</code>.</p>

<p>The Rails 7.1 default configuration opts into the HTML5 parser when it is supported, to better<br />
represent what the DOM would be in a browser user agent. Previously this test helper always used<br />
Nokogiri’s HTML4 parser.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: The `with_routing` helper can now be called at the class level. When called at the class level, the routes will
</title>
    <link>https://github.com/rails/rails/issues/48407</link>
    <guid>https://github.com/rails/rails/issues/48407</guid>
    <description>*   The `with_routing` helper can now be called at the class level. When called at the class level, the routes will
    be setup before each test, and reset after every test. For example:

    ```ruby
    class RoutingTest &lt; ActionController::TestCase
      with_routing do |routes|
        routes.draw do
          resources :articles
          resources :authors
        end
      end

      def test_articles_route
        assert_routing(&quot;/articles&quot;, controller: &quot;articles&quot;, action: &quot;index&quot;)
      end

       def test_authors_route
        assert_routing(&quot;/authors&quot;, controller: &quot;authors&quot;, action: &quot;index&quot;)
      end
    end
    ```

    *Andrew Novoselac*</description>
    <pubDate>Tue, 06 Jun 2023 22:17:25 +0000</pubDate>
    <author>Andrew Novoselac</author>
    <content:encoded><![CDATA[<p>The <code>with_routing</code> helper can now be called at the class level. When called at the class level, the routes will<br />
be setup before each test, and reset after every test. For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">RoutingTest</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="n">with_routing</span> <span class="k">do</span> <span class="o">|</span><span class="n">routes</span><span class="o">|</span>
    <span class="n">routes</span><span class="p">.</span><span class="nf">draw</span> <span class="k">do</span>
      <span class="n">resources</span> <span class="ss">:articles</span>
      <span class="n">resources</span> <span class="ss">:authors</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">test_articles_route</span>
    <span class="n">assert_routing</span><span class="p">(</span><span class="s2">"/articles"</span><span class="p">,</span> <span class="ss">controller: </span><span class="s2">"articles"</span><span class="p">,</span> <span class="ss">action: </span><span class="s2">"index"</span><span class="p">)</span>
  <span class="k">end</span>

   <span class="k">def</span> <span class="nf">test_authors_route</span>
    <span class="n">assert_routing</span><span class="p">(</span><span class="s2">"/authors"</span><span class="p">,</span> <span class="ss">controller: </span><span class="s2">"authors"</span><span class="p">,</span> <span class="ss">action: </span><span class="s2">"index"</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Andrew Novoselac</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: The `Mime::Type` now supports handling types with parameters and correctly handles quotes.
</title>
    <link>https://github.com/rails/rails/issues/48397</link>
    <guid>https://github.com/rails/rails/issues/48397</guid>
    <description>*   The `Mime::Type` now supports handling types with parameters and correctly handles quotes.
    When parsing the accept header, the parameters before the q-parameter are kept and if a matching mime-type exists it is used.
    To keep the current functionality, a fallback is created to look for the media-type without the parameters.

    This change allows for custom MIME-types that are more complex like `application/vnd.api+json; profile=&quot;https://jsonapi.org/profiles/ethanresnick/cursor-pagination/&quot; ext=&quot;https://jsonapi.org/ext/atomic&quot;` for the [JSON API](https://jsonapi.org/).

    *Nicolas Erni*</description>
    <pubDate>Mon, 05 Jun 2023 16:56:17 +0000</pubDate>
    <author>Nicolas Erni</author>
    <content:encoded><![CDATA[<p>The <code>Mime::Type</code> now supports handling types with parameters and correctly handles quotes.<br />
When parsing the accept header, the parameters before the q-parameter are kept and if a matching mime-type exists it is used.<br />
To keep the current functionality, a fallback is created to look for the media-type without the parameters.</p>

<p>This change allows for custom MIME-types that are more complex like <code>application/vnd.api+json; profile="https://jsonapi.org/profiles/ethanresnick/cursor-pagination/" ext="https://jsonapi.org/ext/atomic"</code> for the <a href="https://jsonapi.org/">JSON API</a>.</p>

<p><em>Nicolas Erni</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: The url_for helpers now support a new option called `path_params`.
</title>
    <link>https://github.com/rails/rails/issues/43770</link>
    <guid>https://github.com/rails/rails/issues/43770</guid>
    <description>*   The url_for helpers now support a new option called `path_params`.
    This is very useful in situations where you only want to add a required param that is part of the route&#39;s URL but for other route not append an extraneous query param.

    Given the following router...
    ```ruby
    Rails.application.routes.draw do
      scope &quot;:account_id&quot; do
        get &quot;dashboard&quot; =&gt; &quot;pages#dashboard&quot;, as: :dashboard
        get &quot;search/:term&quot; =&gt; &quot;search#search&quot;, as: :search
      end
      delete &quot;signout&quot; =&gt; &quot;sessions#destroy&quot;, as: :signout
    end
    ```

    And given the following `ApplicationController`
    ```ruby
      class ApplicationController &lt; ActionController::Base
        def default_url_options
          { path_params: { account_id: &quot;foo&quot; } }
        end
      end
    ```

    The standard url_for helper and friends will now behave as follows:

    ```ruby
    dashboard_path # =&gt; /foo/dashboard
    dashboard_path(account_id: &quot;bar&quot;) # =&gt; /bar/dashboard

    signout_path # =&gt; /signout
    signout_path(account_id: &quot;bar&quot;) # =&gt; /signout?account_id=bar
    signout_path(account_id: &quot;bar&quot;, path_params: { account_id: &quot;baz&quot; }) # =&gt; /signout?account_id=bar
    search_path(&quot;quin&quot;) # =&gt; /foo/search/quin
    ```

    *Jason Meller, Jeremy Beker*</description>
    <pubDate>Wed, 31 May 2023 05:36:35 +0000</pubDate>
    <author>Jason Meller</author>
    <content:encoded><![CDATA[<p>The url_for helpers now support a new option called <code>path_params</code>.<br />
This is very useful in situations where you only want to add a required param that is part of the route’s URL but for other route not append an extraneous query param.</p>

<p>Given the following router…</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">routes</span><span class="p">.</span><span class="nf">draw</span> <span class="k">do</span>
  <span class="n">scope</span> <span class="s2">":account_id"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="s2">"dashboard"</span> <span class="o">=&gt;</span> <span class="s2">"pages#dashboard"</span><span class="p">,</span> <span class="ss">as: :dashboard</span>
    <span class="n">get</span> <span class="s2">"search/:term"</span> <span class="o">=&gt;</span> <span class="s2">"search#search"</span><span class="p">,</span> <span class="ss">as: :search</span>
  <span class="k">end</span>
  <span class="n">delete</span> <span class="s2">"signout"</span> <span class="o">=&gt;</span> <span class="s2">"sessions#destroy"</span><span class="p">,</span> <span class="ss">as: :signout</span>
<span class="k">end</span>
</code></pre></div></div>

<p>And given the following <code>ApplicationController</code></p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
    <span class="k">def</span> <span class="nf">default_url_options</span>
      <span class="p">{</span> <span class="ss">path_params: </span><span class="p">{</span> <span class="ss">account_id: </span><span class="s2">"foo"</span> <span class="p">}</span> <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
</code></pre></div></div>

<p>The standard url_for helper and friends will now behave as follows:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dashboard_path</span> <span class="c1"># =&gt; /foo/dashboard</span>
<span class="n">dashboard_path</span><span class="p">(</span><span class="ss">account_id: </span><span class="s2">"bar"</span><span class="p">)</span> <span class="c1"># =&gt; /bar/dashboard</span>

<span class="n">signout_path</span> <span class="c1"># =&gt; /signout</span>
<span class="n">signout_path</span><span class="p">(</span><span class="ss">account_id: </span><span class="s2">"bar"</span><span class="p">)</span> <span class="c1"># =&gt; /signout?account_id=bar</span>
<span class="n">signout_path</span><span class="p">(</span><span class="ss">account_id: </span><span class="s2">"bar"</span><span class="p">,</span> <span class="ss">path_params: </span><span class="p">{</span> <span class="ss">account_id: </span><span class="s2">"baz"</span> <span class="p">})</span> <span class="c1"># =&gt; /signout?account_id=bar</span>
<span class="n">search_path</span><span class="p">(</span><span class="s2">"quin"</span><span class="p">)</span> <span class="c1"># =&gt; /foo/search/quin</span>
</code></pre></div></div>

<p><em>Jason Meller, Jeremy Beker</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Change `action_dispatch.show_exceptions` to one of `:all`, `:rescuable`, or
</title>
    <link>https://github.com/rails/rails/issues/45867</link>
    <guid>https://github.com/rails/rails/issues/45867</guid>
    <description>*   Change `action_dispatch.show_exceptions` to one of `:all`, `:rescuable`, or
    `:none`. `:all` and `:none` behave the same as the previous `true` and
    `false` respectively. The new `:rescuable` option will only show exceptions
    that can be rescued (e.g. `ActiveRecord::RecordNotFound`). `:rescuable` is
    now the default for the test environment.

    *Jon Dufresne*</description>
    <pubDate>Wed, 24 May 2023 17:45:45 +0000</pubDate>
    <author>Jon Dufresne</author>
    <content:encoded><![CDATA[<p>Change <code>action_dispatch.show_exceptions</code> to one of <code>:all</code>, <code>:rescuable</code>, or<br />
<code>:none</code>. <code>:all</code> and <code>:none</code> behave the same as the previous <code>true</code> and<br />
<code>false</code> respectively. The new <code>:rescuable</code> option will only show exceptions<br />
that can be rescued (e.g. <code>ActiveRecord::RecordNotFound</code>). <code>:rescuable</code> is<br />
now the default for the test environment.</p>

<p><em>Jon Dufresne</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: `config.action_dispatch.cookies_serializer` now accepts `:message_pack` and
</title>
    <link>https://github.com/rails/rails/issues/48103</link>
    <guid>https://github.com/rails/rails/issues/48103</guid>
    <description>*   `config.action_dispatch.cookies_serializer` now accepts `:message_pack` and
    `:message_pack_allow_marshal` as serializers. These serializers require the
    [`msgpack` gem](https://rubygems.org/gems/msgpack) (&gt;= 1.7.0).

    The Message Pack format can provide improved performance and smaller payload
    sizes. It also supports roundtripping some Ruby types that are not supported
    by JSON. For example:

      ```ruby
      cookies.encrypted[:foo] = [{ a: 1 }, { b: 2 }.with_indifferent_access, 1.to_d, Time.at(0, 123)]

      # BEFORE with config.action_dispatch.cookies_serializer = :json
      cookies.encrypted[:foo]
      # =&gt; [{&quot;a&quot;=&gt;1}, {&quot;b&quot;=&gt;2}, &quot;1.0&quot;, &quot;1969-12-31T18:00:00.000-06:00&quot;]
      cookies.encrypted[:foo].map(&amp;:class)
      # =&gt; [Hash, Hash, String, String]

      # AFTER with config.action_dispatch.cookies_serializer = :message_pack
      cookies.encrypted[:foo]
      # =&gt; [{:a=&gt;1}, {&quot;b&quot;=&gt;2}, 0.1e1, 1969-12-31 18:00:00.000123 -0600]
      cookies.encrypted[:foo].map(&amp;:class)
      # =&gt; [Hash, ActiveSupport::HashWithIndifferentAccess, BigDecimal, Time]
      ```

    The `:message_pack` serializer can fall back to deserializing with
    `ActiveSupport::JSON` when necessary, and the `:message_pack_allow_marshal`
    serializer can fall back to deserializing with `Marshal` as well as
    `ActiveSupport::JSON`. Additionally, the `:marshal`, `:json`, and
    `:json_allow_marshal` (AKA `:hybrid`) serializers can now fall back to
    deserializing with `ActiveSupport::MessagePack` when necessary. These
    behaviors ensure old cookies can still be read so that migration is easier.

    *Jonathan Hefner*</description>
    <pubDate>Mon, 08 May 2023 20:38:51 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>config.action_dispatch.cookies_serializer</code> now accepts <code>:message_pack</code> and<br />
<code>:message_pack_allow_marshal</code> as serializers. These serializers require the<br />
<a href="https://rubygems.org/gems/msgpack"><code>msgpack</code> gem</a> (&gt;= 1.7.0).</p>

<p>The Message Pack format can provide improved performance and smaller payload<br />
sizes. It also supports roundtripping some Ruby types that are not supported<br />
by JSON. For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">cookies</span><span class="p">.</span><span class="nf">encrypted</span><span class="p">[</span><span class="ss">:foo</span><span class="p">]</span> <span class="o">=</span> <span class="p">[{</span> <span class="ss">a: </span><span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="ss">b: </span><span class="mi">2</span> <span class="p">}.</span><span class="nf">with_indifferent_access</span><span class="p">,</span> <span class="mi">1</span><span class="p">.</span><span class="nf">to_d</span><span class="p">,</span> <span class="no">Time</span><span class="p">.</span><span class="nf">at</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">123</span><span class="p">)]</span>

  <span class="c1"># BEFORE with config.action_dispatch.cookies_serializer = :json</span>
  <span class="n">cookies</span><span class="p">.</span><span class="nf">encrypted</span><span class="p">[</span><span class="ss">:foo</span><span class="p">]</span>
  <span class="c1"># =&gt; [{"a"=&gt;1}, {"b"=&gt;2}, "1.0", "1969-12-31T18:00:00.000-06:00"]</span>
  <span class="n">cookies</span><span class="p">.</span><span class="nf">encrypted</span><span class="p">[</span><span class="ss">:foo</span><span class="p">].</span><span class="nf">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:class</span><span class="p">)</span>
  <span class="c1"># =&gt; [Hash, Hash, String, String]</span>

  <span class="c1"># AFTER with config.action_dispatch.cookies_serializer = :message_pack</span>
  <span class="n">cookies</span><span class="p">.</span><span class="nf">encrypted</span><span class="p">[</span><span class="ss">:foo</span><span class="p">]</span>
  <span class="c1"># =&gt; [{:a=&gt;1}, {"b"=&gt;2}, 0.1e1, 1969-12-31 18:00:00.000123 -0600]</span>
  <span class="n">cookies</span><span class="p">.</span><span class="nf">encrypted</span><span class="p">[</span><span class="ss">:foo</span><span class="p">].</span><span class="nf">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:class</span><span class="p">)</span>
  <span class="c1"># =&gt; [Hash, ActiveSupport::HashWithIndifferentAccess, BigDecimal, Time]</span>
</code></pre></div></div>

<p>The <code>:message_pack</code> serializer can fall back to deserializing with<br />
<code>ActiveSupport::JSON</code> when necessary, and the <code>:message_pack_allow_marshal</code><br />
serializer can fall back to deserializing with <code>Marshal</code> as well as<br />
<code>ActiveSupport::JSON</code>. Additionally, the <code>:marshal</code>, <code>:json</code>, and<br />
<code>:json_allow_marshal</code> (AKA <code>:hybrid</code>) serializers can now fall back to<br />
deserializing with <code>ActiveSupport::MessagePack</code> when necessary. These<br />
behaviors ensure old cookies can still be read so that migration is easier.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Remove leading dot from domains on cookies set with `domain: :all`, to meet RFC6265 requirements
</title>
    <link>https://github.com/rails/rails/issues/48036</link>
    <guid>https://github.com/rails/rails/issues/48036</guid>
    <description>*   Remove leading dot from domains on cookies set with `domain: :all`, to meet RFC6265 requirements

    *Gareth Adams*</description>
    <pubDate>Mon, 24 Apr 2023 01:51:51 +0000</pubDate>
    <author>Gareth Adams</author>
    <content:encoded><![CDATA[<p>Remove leading dot from domains on cookies set with <code>domain: :all</code>, to meet RFC6265 requirements</p>

<p><em>Gareth Adams</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Include source location in routes extended view.
</title>
    <link>https://github.com/rails/rails/issues/47921</link>
    <guid>https://github.com/rails/rails/issues/47921</guid>
    <description>*   Include source location in routes extended view.

    ```bash
    $ bin/rails routes --expanded

    ...
    --[ Route 14 ]----------
    Prefix            | new_gist
    Verb              | GET
    URI               | /gist(.:format)
    Controller#Action | gists/gists#new
    Source Location   | config/routes/gist.rb:3
    ```

    *Luan Vieira, John Hawthorn and Daniel Colson*</description>
    <pubDate>Wed, 12 Apr 2023 15:15:21 +0000</pubDate>
    <author>Luan Vieira</author>
    <content:encoded><![CDATA[<p>Include source location in routes extended view.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bin/rails routes <span class="nt">--expanded</span>

...
<span class="nt">--</span><span class="o">[</span> Route 14 <span class="o">]</span><span class="nt">----------</span>
Prefix            | new_gist
Verb              | GET
URI               | /gist<span class="o">(</span>.:format<span class="o">)</span>
Controller#Action | gists/gists#new
Source Location   | config/routes/gist.rb:3
</code></pre></div></div>

<p><em>Luan Vieira, John Hawthorn and Daniel Colson</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add `without` as an alias of `except` on `ActiveController::Parameters`.
</title>
    <link>https://github.com/rails/rails/issues/47687</link>
    <guid>https://github.com/rails/rails/issues/47687</guid>
    <description>*   Add `without` as an alias of `except` on `ActiveController::Parameters`.

    *Hidde-Jan Jongsma*</description>
    <pubDate>Wed, 29 Mar 2023 09:16:51 +0000</pubDate>
    <author>Hidde-Jan Jongsma</author>
    <content:encoded><![CDATA[<p>Add <code>without</code> as an alias of <code>except</code> on <code>ActiveController::Parameters</code>.</p>

<p><em>Hidde-Jan Jongsma</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Expand search field on `rails/info/routes` to also search **route name**, **http verb** and **controller#action**.
</title>
    <link>https://github.com/rails/rails/issues/47766</link>
    <guid>https://github.com/rails/rails/issues/47766</guid>
    <description>*   Expand search field on `rails/info/routes` to also search **route name**, **http verb** and **controller#action**.

    *Jason Kotchoff*</description>
    <pubDate>Fri, 24 Mar 2023 23:51:23 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Expand search field on <code>rails/info/routes</code> to also search <strong>route name</strong>, <strong>http verb</strong> and <strong>controller#action</strong>.</p>

<p><em>Jason Kotchoff</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Remove deprecated `poltergeist` and `webkit` (capybara-webkit) driver registration for system testing.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated `poltergeist` and `webkit` (capybara-webkit) driver registration for system testing.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated <code>poltergeist</code> and <code>webkit</code> (capybara-webkit) driver registration for system testing.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Remove deprecated ability to assign a single value to `config.action_dispatch.trusted_proxies`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated ability to assign a single value to `config.action_dispatch.trusted_proxies`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated ability to assign a single value to <code>config.action_dispatch.trusted_proxies</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Deprecate `config.action_dispatch.return_only_request_media_type_on_content_type`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Deprecate `config.action_dispatch.return_only_request_media_type_on_content_type`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Deprecate <code>config.action_dispatch.return_only_request_media_type_on_content_type</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Remove deprecated behavior on `Request#content_type`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated behavior on `Request#content_type`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated behavior on <code>Request#content_type</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Change `ActionController::Instrumentation` to pass `filtered_path` instead of `fullpath` in the event payload to filter sensitive query params
</title>
    <link>https://github.com/rails/rails/issues/47296</link>
    <guid>https://github.com/rails/rails/issues/47296</guid>
    <description>*   Change `ActionController::Instrumentation` to pass `filtered_path` instead of `fullpath` in the event payload to filter sensitive query params

    ```ruby
    get &quot;/posts?password=test&quot;
    request.fullpath         # =&gt; &quot;/posts?password=test&quot;
    request.filtered_path    # =&gt; &quot;/posts?password=[FILTERED]&quot;
    ```

    *Ritikesh G*</description>
    <pubDate>Wed, 08 Feb 2023 18:29:10 +0000</pubDate>
    <author>Ritikesh G</author>
    <content:encoded><![CDATA[<p>Change <code>ActionController::Instrumentation</code> to pass <code>filtered_path</code> instead of <code>fullpath</code> in the event payload to filter sensitive query params</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">get</span> <span class="s2">"/posts?password=test"</span>
<span class="n">request</span><span class="p">.</span><span class="nf">fullpath</span>         <span class="c1"># =&gt; "/posts?password=test"</span>
<span class="n">request</span><span class="p">.</span><span class="nf">filtered_path</span>    <span class="c1"># =&gt; "/posts?password=[FILTERED]"</span>
</code></pre></div></div>

<p><em>Ritikesh G</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Deprecate `AbstractController::Helpers::MissingHelperError`
</title>
    <link>https://github.com/rails/rails/issues/47199</link>
    <guid>https://github.com/rails/rails/issues/47199</guid>
    <description>*   Deprecate `AbstractController::Helpers::MissingHelperError`

    *Hartley McGuire*</description>
    <pubDate>Tue, 31 Jan 2023 13:48:29 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Deprecate <code>AbstractController::Helpers::MissingHelperError</code></p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Change `ActionDispatch::Testing::TestResponse#parsed_body` to parse HTML as
</title>
    <link>https://github.com/rails/rails/issues/47144</link>
    <guid>https://github.com/rails/rails/issues/47144</guid>
    <description>*   Change `ActionDispatch::Testing::TestResponse#parsed_body` to parse HTML as
    a Nokogiri document

    ```ruby
    get &quot;/posts&quot;
    response.content_type         # =&gt; &quot;text/html; charset=utf-8&quot;
    response.parsed_body.class    # =&gt; Nokogiri::HTML5::Document
    response.parsed_body.to_html  # =&gt; &quot;&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n...&quot;
    ```

    *Sean Doyle*</description>
    <pubDate>Mon, 30 Jan 2023 22:53:09 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Change <code>ActionDispatch::Testing::TestResponse#parsed_body</code> to parse HTML as<br />
a Nokogiri document</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">get</span> <span class="s2">"/posts"</span>
<span class="n">response</span><span class="p">.</span><span class="nf">content_type</span>         <span class="c1"># =&gt; "text/html; charset=utf-8"</span>
<span class="n">response</span><span class="p">.</span><span class="nf">parsed_body</span><span class="p">.</span><span class="nf">class</span>    <span class="c1"># =&gt; Nokogiri::HTML5::Document</span>
<span class="n">response</span><span class="p">.</span><span class="nf">parsed_body</span><span class="p">.</span><span class="nf">to_html</span>  <span class="c1"># =&gt; "&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n..."</span>
</code></pre></div></div>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Deprecate `ActionDispatch::IllegalStateError`.
</title>
    <link>https://github.com/rails/rails/issues/47144</link>
    <guid>https://github.com/rails/rails/issues/47144</guid>
    <description>*   Deprecate `ActionDispatch::IllegalStateError`.

    *Samuel Williams*</description>
    <pubDate>Mon, 30 Jan 2023 22:53:09 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Deprecate <code>ActionDispatch::IllegalStateError</code>.</p>

<p><em>Samuel Williams</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add HTTP::Request#route_uri_pattern that returns URI pattern of matched route.
</title>
    <link>https://github.com/rails/rails/issues/47129</link>
    <guid>https://github.com/rails/rails/issues/47129</guid>
    <description>*   Add HTTP::Request#route_uri_pattern that returns URI pattern of matched route.

    *Joel Hawksley*, *Kate Higa*</description>
    <pubDate>Wed, 25 Jan 2023 22:22:47 +0000</pubDate>
    <author>Joel Hawksley</author>
    <content:encoded><![CDATA[<p>Add HTTP::Request#route_uri_pattern that returns URI pattern of matched route.</p>

<p><em>Joel Hawksley</em>, <em>Kate Higa</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add `ActionDispatch::AssumeSSL` middleware that can be turned on via `config.assume_ssl`.
</title>
    <link>https://github.com/rails/rails/issues/47139</link>
    <guid>https://github.com/rails/rails/issues/47139</guid>
    <description>*   Add `ActionDispatch::AssumeSSL` middleware that can be turned on via `config.assume_ssl`.
    It makes the application believe that all requests are arriving over SSL. This is useful
    when proxying through a load balancer that terminates SSL, the forwarded request will appear
    as though its HTTP instead of HTTPS to the application. This makes redirects and cookie
    security target HTTP instead of HTTPS. This middleware makes the server assume that the
    proxy already terminated SSL, and that the request really is HTTPS.

    *DHH*</description>
    <pubDate>Wed, 25 Jan 2023 20:13:18 +0000</pubDate>
    <author>David Heinemeier Hansson</author>
    <content:encoded><![CDATA[<p>Add <code>ActionDispatch::AssumeSSL</code> middleware that can be turned on via <code>config.assume_ssl</code>.<br />
It makes the application believe that all requests are arriving over SSL. This is useful<br />
when proxying through a load balancer that terminates SSL, the forwarded request will appear<br />
as though its HTTP instead of HTTPS to the application. This makes redirects and cookie<br />
security target HTTP instead of HTTPS. This middleware makes the server assume that the<br />
proxy already terminated SSL, and that the request really is HTTPS.</p>

<p><em>DHH</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Only use HostAuthorization middleware if `config.hosts` is not empty
</title>
    <link>https://github.com/rails/rails/issues/46903</link>
    <guid>https://github.com/rails/rails/issues/46903</guid>
    <description>*   Only use HostAuthorization middleware if `config.hosts` is not empty

    *Hartley McGuire*</description>
    <pubDate>Thu, 05 Jan 2023 22:51:14 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Only use HostAuthorization middleware if <code>config.hosts</code> is not empty</p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow raising an error when a callback&#39;s only/unless symbols aren&#39;t existing methods.
</title>
    <link>https://github.com/rails/rails/issues/43487</link>
    <guid>https://github.com/rails/rails/issues/43487</guid>
    <description>*   Allow raising an error when a callback&#39;s only/unless symbols aren&#39;t existing methods.

    When `before_action :callback, only: :action_name` is declared on a controller that doesn&#39;t respond to `action_name`, raise an exception at request time. This is a safety measure to ensure that typos or forgetfulness don&#39;t prevent a crucial callback from being run when it should.

    For new applications, raising an error for undefined actions is turned on by default. If you do not want to opt-in to this behavior set `config.action_pack.raise_on_missing_callback_actions` to `false` in your application configuration. See #43487 for more details.

    *Jess Bees*</description>
    <pubDate>Tue, 03 Jan 2023 19:10:00 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Allow raising an error when a callback’s only/unless symbols aren’t existing methods.</p>

<p>When <code>before_action :callback, only: :action_name</code> is declared on a controller that doesn’t respond to <code>action_name</code>, raise an exception at request time. This is a safety measure to ensure that typos or forgetfulness don’t prevent a crucial callback from being run when it should.</p>

<p>For new applications, raising an error for undefined actions is turned on by default. If you do not want to opt-in to this behavior set <code>config.action_pack.raise_on_missing_callback_actions</code> to <code>false</code> in your application configuration. See #43487 for more details.</p>

<p><em>Jess Bees</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow cookie options[:domain] to accept a proc to set the cookie domain on a more flexible per-request basis
</title>
    <link>https://github.com/rails/rails/issues/46726</link>
    <guid>https://github.com/rails/rails/issues/46726</guid>
    <description>*   Allow cookie options[:domain] to accept a proc to set the cookie domain on a more flexible per-request basis

    *RobL*</description>
    <pubDate>Thu, 22 Dec 2022 20:52:53 +0000</pubDate>
    <author>RobL</author>
    <content:encoded><![CDATA[<p>Allow cookie options[:domain] to accept a proc to set the cookie domain on a more flexible per-request basis</p>

<p><em>RobL</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: When a host is not specified for an `ActionController::Renderer`&#39;s env,
</title>
    <link>https://github.com/rails/rails/issues/46649</link>
    <guid>https://github.com/rails/rails/issues/46649</guid>
    <description>*   When a host is not specified for an `ActionController::Renderer`&#39;s env,
    the host and related options will now be derived from the routes&#39;
    `default_url_options` and `ActionDispatch::Http::URL.secure_protocol`.

    This means that for an application with a configuration like:

      ```ruby
      Rails.application.default_url_options = { host: &quot;rubyonrails.org&quot; }
      Rails.application.config.force_ssl = true
      ```

    rendering a URL like:

      ```ruby
      ApplicationController.renderer.render inline: &quot;&lt;%= blog_url %&gt;&quot;
      ```

    will now return `&quot;https://rubyonrails.org/blog&quot;` instead of
    `&quot;http://example.org/blog&quot;`.

    *Jonathan Hefner*</description>
    <pubDate>Thu, 15 Dec 2022 22:45:02 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>When a host is not specified for an <code>ActionController::Renderer</code>’s env,<br />
the host and related options will now be derived from the routes’<br />
<code>default_url_options</code> and <code>ActionDispatch::Http::URL.secure_protocol</code>.</p>

<p>This means that for an application with a configuration like:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">default_url_options</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">host: </span><span class="s2">"rubyonrails.org"</span> <span class="p">}</span>
  <span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">config</span><span class="p">.</span><span class="nf">force_ssl</span> <span class="o">=</span> <span class="kp">true</span>
</code></pre></div></div>

<p>rendering a URL like:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="no">ApplicationController</span><span class="p">.</span><span class="nf">renderer</span><span class="p">.</span><span class="nf">render</span> <span class="ss">inline: </span><span class="s2">"&lt;%= blog_url %&gt;"</span>
</code></pre></div></div>

<p>will now return <code>"https://rubyonrails.org/blog"</code> instead of<br />
<code>"http://example.org/blog"</code>.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add details of cookie name and size to `CookieOverflow` exception.
</title>
    <link>https://github.com/rails/rails/issues/46570</link>
    <guid>https://github.com/rails/rails/issues/46570</guid>
    <description>*   Add details of cookie name and size to `CookieOverflow` exception.

    *Andy Waite*</description>
    <pubDate>Sat, 26 Nov 2022 08:56:02 +0000</pubDate>
    <author>Andy Waite</author>
    <content:encoded><![CDATA[<p>Add details of cookie name and size to <code>CookieOverflow</code> exception.</p>

<p><em>Andy Waite</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Don&#39;t double log the `controller`, `action`, or `namespaced_controller` when using `ActiveRecord::QueryLog`
</title>
    <link>https://github.com/rails/rails/issues/46642</link>
    <guid>https://github.com/rails/rails/issues/46642</guid>
    <description>*   Don&#39;t double log the `controller`, `action`, or `namespaced_controller` when using `ActiveRecord::QueryLog`

    Previously if you set `config.active_record.query_log_tags` to an array that included
    `:controller`, `:namespaced_controller`, or `:action`, that item would get logged twice.
    This bug has been fixed.

    *Alex Ghiculescu*</description>
    <pubDate>Mon, 05 Dec 2022 10:58:58 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Don’t double log the <code>controller</code>, <code>action</code>, or <code>namespaced_controller</code> when using <code>ActiveRecord::QueryLog</code></p>

<p>Previously if you set <code>config.active_record.query_log_tags</code> to an array that included<br />
<code>:controller</code>, <code>:namespaced_controller</code>, or <code>:action</code>, that item would get logged twice.<br />
This bug has been fixed.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add the following permissions policy directives: `hid`, `idle-detection`, `screen-wake-lock`,
</title>
    <link>https://github.com/rails/rails/issues/45427</link>
    <guid>https://github.com/rails/rails/issues/45427</guid>
    <description>*   Add the following permissions policy directives: `hid`, `idle-detection`, `screen-wake-lock`,
    `serial`, `sync-xhr`, `web-share`.

    *Guillaume Cabanel*</description>
    <pubDate>Tue, 11 Oct 2022 08:02:34 +0000</pubDate>
    <author>Guillaume CABANEL</author>
    <content:encoded><![CDATA[<p>Add the following permissions policy directives: <code>hid</code>, <code>idle-detection</code>, <code>screen-wake-lock</code>,<br />
<code>serial</code>, <code>sync-xhr</code>, <code>web-share</code>.</p>

<p><em>Guillaume Cabanel</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: The `speaker`, `vibrate`, and `vr` permissions policy directives are now
</title>
    <link>https://github.com/rails/rails/issues/46199</link>
    <guid>https://github.com/rails/rails/issues/46199</guid>
    <description>*   The `speaker`, `vibrate`, and `vr` permissions policy directives are now
    deprecated.

    There is no browser support for these directives, and no plan for browser
    support in the future. You can just remove these directives from your
    application.

    *Jonathan Hefner*</description>
    <pubDate>Wed, 05 Oct 2022 19:24:50 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>The <code>speaker</code>, <code>vibrate</code>, and <code>vr</code> permissions policy directives are now<br />
deprecated.</p>

<p>There is no browser support for these directives, and no plan for browser<br />
support in the future. You can just remove these directives from your<br />
application.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Added the `:status` option to `assert_redirected_to` to specify the precise
</title>
    <link>https://github.com/rails/rails/issues/46057</link>
    <guid>https://github.com/rails/rails/issues/46057</guid>
    <description>*   Added the `:status` option to `assert_redirected_to` to specify the precise
    HTTP status of the redirect. Defaults to `:redirect` for backwards
    compatibility.

    *Jon Dufresne*</description>
    <pubDate>Thu, 22 Sep 2022 23:53:56 +0000</pubDate>
    <author>Jon Dufresne</author>
    <content:encoded><![CDATA[<p>Added the <code>:status</code> option to <code>assert_redirected_to</code> to specify the precise<br />
HTTP status of the redirect. Defaults to <code>:redirect</code> for backwards<br />
compatibility.</p>

<p><em>Jon Dufresne</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Rescue `JSON::ParserError` in Cookies JSON deserializer to discards marshal dumps:
</title>
    <link>https://github.com/rails/rails/issues/46051</link>
    <guid>https://github.com/rails/rails/issues/46051</guid>
    <description>*   Rescue `JSON::ParserError` in Cookies JSON deserializer to discards marshal dumps:

    Without this change, if `action_dispatch.cookies_serializer` is set to `:json` and
    the app tries to read a `:marshal` serialized cookie, it would error out which wouldn&#39;t
    clear the cookie and force app users to manually clear it in their browser.

    (See #45127 for original bug discussion)

    *Nathan Bardoux*</description>
    <pubDate>Fri, 16 Sep 2022 20:02:42 +0000</pubDate>
    <author>John Bampton</author>
    <content:encoded><![CDATA[<p>Rescue <code>JSON::ParserError</code> in Cookies JSON deserializer to discards marshal dumps:</p>

<p>Without this change, if <code>action_dispatch.cookies_serializer</code> is set to <code>:json</code> and<br />
the app tries to read a <code>:marshal</code> serialized cookie, it would error out which wouldn’t<br />
clear the cookie and force app users to manually clear it in their browser.</p>

<p>(See #45127 for original bug discussion)</p>

<p><em>Nathan Bardoux</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add `HTTP_REFERER` when following redirects on integration tests
</title>
    <link>https://github.com/rails/rails/issues/44438</link>
    <guid>https://github.com/rails/rails/issues/44438</guid>
    <description>*   Add `HTTP_REFERER` when following redirects on integration tests

    This makes `follow_redirect!` a closer simulation of what happens in a real browser

    *Felipe Sateler*</description>
    <pubDate>Fri, 09 Sep 2022 21:14:08 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Add <code>HTTP_REFERER</code> when following redirects on integration tests</p>

<p>This makes <code>follow_redirect!</code> a closer simulation of what happens in a real browser</p>

<p><em>Felipe Sateler</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Added `exclude?` method to `ActionController::Parameters`.
</title>
    <link>https://github.com/rails/rails/issues/45887</link>
    <guid>https://github.com/rails/rails/issues/45887</guid>
    <description>*   Added `exclude?` method to `ActionController::Parameters`.

    *Ian Neubert*</description>
    <pubDate>Fri, 09 Sep 2022 20:46:03 +0000</pubDate>
    <author>Ian Neubert</author>
    <content:encoded><![CDATA[<p>Added <code>exclude?</code> method to <code>ActionController::Parameters</code>.</p>

<p><em>Ian Neubert</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Rescue `EOFError` exception from `rack` on a multipart request.
</title>
    <link>https://github.com/rails/rails/issues/45833</link>
    <guid>https://github.com/rails/rails/issues/45833</guid>
    <description>*   Rescue `EOFError` exception from `rack` on a multipart request.

    *Nikita Vasilevsky*</description>
    <pubDate>Tue, 16 Aug 2022 14:33:37 +0000</pubDate>
    <author>Nikita Vasilevsky</author>
    <content:encoded><![CDATA[<p>Rescue <code>EOFError</code> exception from <code>rack</code> on a multipart request.</p>

<p><em>Nikita Vasilevsky</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Log redirects from routes the same way as redirects from controllers.
</title>
    <link>https://github.com/rails/rails/issues/43755</link>
    <guid>https://github.com/rails/rails/issues/43755</guid>
    <description>*   Log redirects from routes the same way as redirects from controllers.

    *Dennis Paagman*</description>
    <pubDate>Wed, 10 Aug 2022 11:54:58 +0000</pubDate>
    <author>Dennis Paagman</author>
    <content:encoded><![CDATA[<p>Log redirects from routes the same way as redirects from controllers.</p>

<p><em>Dennis Paagman</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Prevent `ActionDispatch::ServerTiming` from overwriting existing values in `Server-Timing`.
</title>
    <link>https://github.com/rails/rails/issues/43755</link>
    <guid>https://github.com/rails/rails/issues/43755</guid>
    <description>*   Prevent `ActionDispatch::ServerTiming` from overwriting existing values in `Server-Timing`.
    Previously, if another middleware down the chain set `Server-Timing` header,
    it would overwritten by `ActionDispatch::ServerTiming`.

    *Jakub Malinowski*</description>
    <pubDate>Wed, 10 Aug 2022 11:54:58 +0000</pubDate>
    <author>Dennis Paagman</author>
    <content:encoded><![CDATA[<p>Prevent <code>ActionDispatch::ServerTiming</code> from overwriting existing values in <code>Server-Timing</code>.<br />
Previously, if another middleware down the chain set <code>Server-Timing</code> header,<br />
it would overwritten by <code>ActionDispatch::ServerTiming</code>.</p>

<p><em>Jakub Malinowski</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow opting out of the `SameSite` cookie attribute when setting a cookie.
</title>
    <link>https://github.com/rails/rails/issues/45501</link>
    <guid>https://github.com/rails/rails/issues/45501</guid>
    <description>*   Allow opting out of the `SameSite` cookie attribute when setting a cookie.

    You can opt out of `SameSite` by passing `same_site: nil`.

    `cookies[:foo] = { value: &quot;bar&quot;, same_site: nil }`

    Previously, this incorrectly set the `SameSite` attribute to the value of the `cookies_same_site_protection` setting.

    *Alex Ghiculescu*</description>
    <pubDate>Tue, 05 Jul 2022 16:06:45 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Allow opting out of the <code>SameSite</code> cookie attribute when setting a cookie.</p>

<p>You can opt out of <code>SameSite</code> by passing <code>same_site: nil</code>.</p>

<p><code>cookies[:foo] = { value: "bar", same_site: nil }</code></p>

<p>Previously, this incorrectly set the <code>SameSite</code> attribute to the value of the <code>cookies_same_site_protection</code> setting.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow using `helper_method`s in `content_security_policy` and `permissions_policy`
</title>
    <link>https://github.com/rails/rails/issues/45115</link>
    <guid>https://github.com/rails/rails/issues/45115</guid>
    <description>*   Allow using `helper_method`s in `content_security_policy` and `permissions_policy`

    Previously you could access basic helpers (defined in helper modules), but not
    helper methods defined using `helper_method`. Now you can use either.

    ```ruby
    content_security_policy do |p|
      p.default_src &quot;https://example.com&quot;
      p.script_src &quot;https://example.com&quot; if helpers.script_csp?
    end
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Wed, 18 May 2022 20:51:36 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Allow using <code>helper_method</code>s in <code>content_security_policy</code> and <code>permissions_policy</code></p>

<p>Previously you could access basic helpers (defined in helper modules), but not<br />
helper methods defined using <code>helper_method</code>. Now you can use either.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">content_security_policy</span> <span class="k">do</span> <span class="o">|</span><span class="nb">p</span><span class="o">|</span>
  <span class="nb">p</span><span class="p">.</span><span class="nf">default_src</span> <span class="s2">"https://example.com"</span>
  <span class="nb">p</span><span class="p">.</span><span class="nf">script_src</span> <span class="s2">"https://example.com"</span> <span class="k">if</span> <span class="n">helpers</span><span class="p">.</span><span class="nf">script_csp?</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Reimplement `ActionController::Parameters#has_value?` and `#value?` to avoid parameters and hashes comparison.
</title>
    <link>https://github.com/rails/rails/issues/44866</link>
    <guid>https://github.com/rails/rails/issues/44866</guid>
    <description>*   Reimplement `ActionController::Parameters#has_value?` and `#value?` to avoid parameters and hashes comparison.

    Deprecated equality between parameters and hashes is going to be removed in Rails 7.2.
    The new implementation takes care of conversions.

    *Seva Stefkin*</description>
    <pubDate>Fri, 06 May 2022 14:14:35 +0000</pubDate>
    <author>Seva Stefkin</author>
    <content:encoded><![CDATA[<p>Reimplement <code>ActionController::Parameters#has_value?</code> and <code>#value?</code> to avoid parameters and hashes comparison.</p>

<p>Deprecated equality between parameters and hashes is going to be removed in Rails 7.2.<br />
The new implementation takes care of conversions.</p>

<p><em>Seva Stefkin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow only String and Symbol keys in `ActionController::Parameters`.
</title>
    <link>https://github.com/rails/rails/issues/44844</link>
    <guid>https://github.com/rails/rails/issues/44844</guid>
    <description>*   Allow only String and Symbol keys in `ActionController::Parameters`.
    Raise `ActionController::InvalidParameterKey` when initializing Parameters
    with keys that aren&#39;t strings or symbols.

    *Seva Stefkin*</description>
    <pubDate>Wed, 06 Apr 2022 20:19:48 +0000</pubDate>
    <author>Seva Stefkin</author>
    <content:encoded><![CDATA[<p>Allow only String and Symbol keys in <code>ActionController::Parameters</code>.<br />
Raise <code>ActionController::InvalidParameterKey</code> when initializing Parameters<br />
with keys that aren’t strings or symbols.</p>

<p><em>Seva Stefkin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add the ability to use custom logic for storing and retrieving CSRF tokens.
</title>
    <link>https://github.com/rails/rails/issues/44283</link>
    <guid>https://github.com/rails/rails/issues/44283</guid>
    <description>*   Add the ability to use custom logic for storing and retrieving CSRF tokens.

    By default, the token will be stored in the session.  Custom classes can be
    defined to specify arbitrary behavior, but the ability to store them in
    encrypted cookies is built in.

    *Andrew Kowpak*</description>
    <pubDate>Wed, 06 Apr 2022 07:14:56 +0000</pubDate>
    <author>Andrew Kowpak</author>
    <content:encoded><![CDATA[<p>Add the ability to use custom logic for storing and retrieving CSRF tokens.</p>

<p>By default, the token will be stored in the session.  Custom classes can be<br />
defined to specify arbitrary behavior, but the ability to store them in<br />
encrypted cookies is built in.</p>

<p><em>Andrew Kowpak</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Make ActionController::Parameters#values cast nested hashes into parameters.
</title>
    <link>https://github.com/rails/rails/issues/44816</link>
    <guid>https://github.com/rails/rails/issues/44816</guid>
    <description>*   Make ActionController::Parameters#values cast nested hashes into parameters.

    *Gannon McGibbon*</description>
    <pubDate>Fri, 01 Apr 2022 12:48:26 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Make ActionController::Parameters#values cast nested hashes into parameters.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Introduce `html:` and `screenshot:` kwargs for system test screenshot helper
</title>
    <link>https://github.com/rails/rails/issues/44720</link>
    <guid>https://github.com/rails/rails/issues/44720</guid>
    <description>*   Introduce `html:` and `screenshot:` kwargs for system test screenshot helper

    Use these as an alternative to the already-available environment variables.

    For example, this will display a screenshot in iTerm, save the HTML, and output
    its path.

    ```ruby
    take_screenshot(html: true, screenshot: &quot;inline&quot;)
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Thu, 24 Mar 2022 18:57:47 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Introduce <code>html:</code> and <code>screenshot:</code> kwargs for system test screenshot helper</p>

<p>Use these as an alternative to the already-available environment variables.</p>

<p>For example, this will display a screenshot in iTerm, save the HTML, and output<br />
its path.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">take_screenshot</span><span class="p">(</span><span class="ss">html: </span><span class="kp">true</span><span class="p">,</span> <span class="ss">screenshot: </span><span class="s2">"inline"</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow `ActionController::Parameters#to_h` to receive a block.
</title>
    <link>https://github.com/rails/rails/issues/44756</link>
    <guid>https://github.com/rails/rails/issues/44756</guid>
    <description>*   Allow `ActionController::Parameters#to_h` to receive a block.

    *Bob Farrell*</description>
    <pubDate>Wed, 23 Mar 2022 22:40:03 +0000</pubDate>
    <author>Bob Farrell</author>
    <content:encoded><![CDATA[<p>Allow <code>ActionController::Parameters#to_h</code> to receive a block.</p>

<p><em>Bob Farrell</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow relative redirects when `raise_on_open_redirects` is enabled
</title>
    <link>https://github.com/rails/rails/issues/44650</link>
    <guid>https://github.com/rails/rails/issues/44650</guid>
    <description>*   Allow relative redirects when `raise_on_open_redirects` is enabled

    *Tom Hughes*</description>
    <pubDate>Thu, 10 Mar 2022 17:10:55 +0000</pubDate>
    <author>Tom Hughes</author>
    <content:encoded><![CDATA[<p>Allow relative redirects when <code>raise_on_open_redirects</code> is enabled</p>

<p><em>Tom Hughes</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Allow Content Security Policy DSL to generate for API responses.
</title>
    <link>https://github.com/rails/rails/issues/44635</link>
    <guid>https://github.com/rails/rails/issues/44635</guid>
    <description>*   Allow Content Security Policy DSL to generate for API responses.

    *Tim Wade*</description>
    <pubDate>Tue, 08 Mar 2022 21:23:15 +0000</pubDate>
    <author>Tim Wade</author>
    <content:encoded><![CDATA[<p>Allow Content Security Policy DSL to generate for API responses.</p>

<p><em>Tim Wade</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Fix `authenticate_with_http_basic` to allow for missing password.
</title>
    <link>https://github.com/rails/rails/issues/44610</link>
    <guid>https://github.com/rails/rails/issues/44610</guid>
    <description>*   Fix `authenticate_with_http_basic` to allow for missing password.

    Before Rails 7.0 it was possible to handle basic authentication with only a username.

    ```ruby
    authenticate_with_http_basic do |token, _|
      ApiClient.authenticate(token)
    end
    ```

    This ability is restored.

    *Jean Boussier*</description>
    <pubDate>Fri, 04 Mar 2022 13:55:57 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix <code>authenticate_with_http_basic</code> to allow for missing password.</p>

<p>Before Rails 7.0 it was possible to handle basic authentication with only a username.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">authenticate_with_http_basic</span> <span class="k">do</span> <span class="o">|</span><span class="n">token</span><span class="p">,</span> <span class="n">_</span><span class="o">|</span>
  <span class="no">ApiClient</span><span class="p">.</span><span class="nf">authenticate</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<p>This ability is restored.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Fix `content_security_policy` returning invalid directives.
</title>
    <link>https://github.com/rails/rails/issues/44578</link>
    <guid>https://github.com/rails/rails/issues/44578</guid>
    <description>*   Fix `content_security_policy` returning invalid directives.

    Directives such as `self`, `unsafe-eval` and few others were not
    single quoted when the directive was the result of calling a lambda
    returning an array.

    ```ruby
    content_security_policy do |policy|
      policy.frame_ancestors lambda { [:self, &quot;https://example.com&quot;] }
    end
    ```

    With this fix the policy generated from above will now be valid.

    *Edouard Chin*</description>
    <pubDate>Tue, 01 Mar 2022 18:51:02 +0000</pubDate>
    <author>Edouard CHIN</author>
    <content:encoded><![CDATA[<p>Fix <code>content_security_policy</code> returning invalid directives.</p>

<p>Directives such as <code>self</code>, <code>unsafe-eval</code> and few others were not<br />
single quoted when the directive was the result of calling a lambda<br />
returning an array.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">content_security_policy</span> <span class="k">do</span> <span class="o">|</span><span class="n">policy</span><span class="o">|</span>
  <span class="n">policy</span><span class="p">.</span><span class="nf">frame_ancestors</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="p">[</span><span class="ss">:self</span><span class="p">,</span> <span class="s2">"https://example.com"</span><span class="p">]</span> <span class="p">}</span>
<span class="k">end</span>
</code></pre></div></div>

<p>With this fix the policy generated from above will now be valid.</p>

<p><em>Edouard Chin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Fix `skip_forgery_protection` to run without raising an error if forgery
</title>
    <link>https://github.com/rails/rails/issues/44537</link>
    <guid>https://github.com/rails/rails/issues/44537</guid>
    <description>*   Fix `skip_forgery_protection` to run without raising an error if forgery
    protection has not been enabled / `verify_authenticity_token` is not a
    defined callback.

    This fix prevents the Rails 7.0 Welcome Page (`/`) from raising an
    `ArgumentError` if `default_protect_from_forgery` is false.

    *Brad Trick*</description>
    <pubDate>Mon, 28 Feb 2022 04:54:59 +0000</pubDate>
    <author>Brad Trick</author>
    <content:encoded><![CDATA[<p>Fix <code>skip_forgery_protection</code> to run without raising an error if forgery<br />
protection has not been enabled / <code>verify_authenticity_token</code> is not a<br />
defined callback.</p>

<p>This fix prevents the Rails 7.0 Welcome Page (<code>/</code>) from raising an<br />
<code>ArgumentError</code> if <code>default_protect_from_forgery</code> is false.</p>

<p><em>Brad Trick</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Make `redirect_to` return an empty response body.
</title>
    <link>https://github.com/rails/rails/issues/44554</link>
    <guid>https://github.com/rails/rails/issues/44554</guid>
    <description>*   Make `redirect_to` return an empty response body.

    Application controllers that wish to add a response body after calling
    `redirect_to` can continue to do so.

    *Jon Dufresne*</description>
    <pubDate>Fri, 25 Feb 2022 19:18:07 +0000</pubDate>
    <author>Jon Dufresne</author>
    <content:encoded><![CDATA[<p>Make <code>redirect_to</code> return an empty response body.</p>

<p>Application controllers that wish to add a response body after calling<br />
<code>redirect_to</code> can continue to do so.</p>

<p><em>Jon Dufresne</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Use non-capturing group for subdomain matching in `ActionDispatch::HostAuthorization`
</title>
    <link>https://github.com/rails/rails/issues/44520</link>
    <guid>https://github.com/rails/rails/issues/44520</guid>
    <description>*   Use non-capturing group for subdomain matching in `ActionDispatch::HostAuthorization`

    Since we do nothing with the captured subdomain group, we can use a non-capturing group instead.

    *Sam Bostock*</description>
    <pubDate>Tue, 22 Feb 2022 20:56:23 +0000</pubDate>
    <author>Sam Bostock</author>
    <content:encoded><![CDATA[<p>Use non-capturing group for subdomain matching in <code>ActionDispatch::HostAuthorization</code></p>

<p>Since we do nothing with the captured subdomain group, we can use a non-capturing group instead.</p>

<p><em>Sam Bostock</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Fix `ActionController::Live` to copy the IsolatedExecutionState in the ephemeral thread.
</title>
    <link>https://github.com/rails/rails/issues/44520</link>
    <guid>https://github.com/rails/rails/issues/44520</guid>
    <description>*   Fix `ActionController::Live` to copy the IsolatedExecutionState in the ephemeral thread.

    Since its inception `ActionController::Live` has been copying thread local variables
    to keep things such as `CurrentAttributes` set from middlewares working in the controller action.

    With the introduction of `IsolatedExecutionState` in 7.0, some of that global state was lost in
    `ActionController::Live` controllers.

    *Jean Boussier*</description>
    <pubDate>Tue, 22 Feb 2022 20:56:23 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix <code>ActionController::Live</code> to copy the IsolatedExecutionState in the ephemeral thread.</p>

<p>Since its inception <code>ActionController::Live</code> has been copying thread local variables<br />
to keep things such as <code>CurrentAttributes</code> set from middlewares working in the controller action.</p>

<p>With the introduction of <code>IsolatedExecutionState</code> in 7.0, some of that global state was lost in<br />
<code>ActionController::Live</code> controllers.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Fix setting `trailing_slash: true` in route definition.
</title>
    <link>https://github.com/rails/rails/issues/44434</link>
    <guid>https://github.com/rails/rails/issues/44434</guid>
    <description>*   Fix setting `trailing_slash: true` in route definition.

    ```ruby
    get &#39;/test&#39; =&gt; &quot;test#index&quot;, as: :test, trailing_slash: true

    test_path() # =&gt; &quot;/test/&quot;
    ```

    *Jean Boussier*</description>
    <pubDate>Tue, 15 Feb 2022 11:11:49 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix setting <code>trailing_slash: true</code> in route definition.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">get</span> <span class="s1">'/test'</span> <span class="o">=&gt;</span> <span class="s2">"test#index"</span><span class="p">,</span> <span class="ss">as: :test</span><span class="p">,</span> <span class="ss">trailing_slash: </span><span class="kp">true</span>

<span class="n">test_path</span><span class="p">()</span> <span class="c1"># =&gt; "/test/"</span>
</code></pre></div></div>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Make `Session#merge!` stringify keys.
</title>
    <link>https://github.com/rails/rails/issues/44261</link>
    <guid>https://github.com/rails/rails/issues/44261</guid>
    <description>*   Make `Session#merge!` stringify keys.

    Previously `Session#update` would, but `merge!` wouldn&#39;t.

    *Drew Bragg*</description>
    <pubDate>Sat, 05 Feb 2022 10:29:55 +0000</pubDate>
    <author>Drew Bragg</author>
    <content:encoded><![CDATA[<p>Make <code>Session#merge!</code> stringify keys.</p>

<p>Previously <code>Session#update</code> would, but <code>merge!</code> wouldn’t.</p>

<p><em>Drew Bragg</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionpack: Add `:unsafe_hashes` mapping for `content_security_policy`
</title>
    <link>https://github.com/rails/rails/issues/48212</link>
    <guid>https://github.com/rails/rails/issues/48212</guid>
    <description>*   Add `:unsafe_hashes` mapping for `content_security_policy`

    ```ruby
    # Before
    policy.script_src  :strict_dynamic, &quot;&#39;unsafe-hashes&#39;&quot;, &quot;&#39;sha256-rRMdkshZyJlCmDX27XnL7g3zXaxv7ei6Sg+yt4R3svU=&#39;&quot;

    # After
    policy.script_src  :strict_dynamic, :unsafe_hashes, &quot;&#39;sha256-rRMdkshZyJlCmDX27XnL7g3zXaxv7ei6Sg+yt4R3svU=&#39;&quot;
    ```

    *Igor Morozov*</description>
    <pubDate>Mon, 15 May 2023 18:58:07 +0000</pubDate>
    <author>Igor S. Morozov</author>
    <content:encoded><![CDATA[<p>Add <code>:unsafe_hashes</code> mapping for <code>content_security_policy</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Before</span>
<span class="n">policy</span><span class="p">.</span><span class="nf">script_src</span>  <span class="ss">:strict_dynamic</span><span class="p">,</span> <span class="s2">"'unsafe-hashes'"</span><span class="p">,</span> <span class="s2">"'sha256-rRMdkshZyJlCmDX27XnL7g3zXaxv7ei6Sg+yt4R3svU='"</span>

<span class="c1"># After</span>
<span class="n">policy</span><span class="p">.</span><span class="nf">script_src</span>  <span class="ss">:strict_dynamic</span><span class="p">,</span> <span class="ss">:unsafe_hashes</span><span class="p">,</span> <span class="s2">"'sha256-rRMdkshZyJlCmDX27XnL7g3zXaxv7ei6Sg+yt4R3svU='"</span>
</code></pre></div></div>

<p><em>Igor Morozov</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add an option to start rails console in sandbox mode by default
</title>
    <link>https://github.com/rails/rails/issues/48984</link>
    <guid>https://github.com/rails/rails/issues/48984</guid>
    <description>*   Add an option to start rails console in sandbox mode by default

    `sandbox_by_default` option is added to start rails console in sandbox
    mode by default. With this option turned on, `--no-sandbox` must be
    specified to start rails in non-sandbox mode.

    Note that this option is ignored when rails environment is development
    or test.

    *Shouichi Kamiya*</description>
    <pubDate>Tue, 22 Aug 2023 01:22:02 +0000</pubDate>
    <author>Shouichi Kamiya</author>
    <content:encoded><![CDATA[<p>Add an option to start rails console in sandbox mode by default</p>

<p><code>sandbox_by_default</code> option is added to start rails console in sandbox<br />
mode by default. With this option turned on, <code>--no-sandbox</code> must be<br />
specified to start rails in non-sandbox mode.</p>

<p>Note that this option is ignored when rails environment is development<br />
or test.</p>

<p><em>Shouichi Kamiya</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Omit `webdrivers` gem dependency from `Gemfile` template
</title>
    <link>https://github.com/rails/rails/issues/48847</link>
    <guid>https://github.com/rails/rails/issues/48847</guid>
    <description>*   Omit `webdrivers` gem dependency from `Gemfile` template

    *Sean Doyle*</description>
    <pubDate>Wed, 02 Aug 2023 17:49:28 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Omit <code>webdrivers</code> gem dependency from <code>Gemfile</code> template</p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Support filtering tests by line ranges
</title>
    <link>https://github.com/rails/rails/issues/48807</link>
    <guid>https://github.com/rails/rails/issues/48807</guid>
    <description>*   Support filtering tests by line ranges

    The new syntax allows you to filter tests by line ranges. For example, the
    following command runs tests from line 10 to 20.

    ```bash
    $ rails test test/models/user_test.rb:10-20
    ```

    *Shouichi Kamiya*, *Seonggi Yang*, *oljfte*, *Ryohei UEDA*</description>
    <pubDate>Tue, 01 Aug 2023 06:40:50 +0000</pubDate>
    <author>Shouichi Kamiya</author>
    <content:encoded><![CDATA[<p>Support filtering tests by line ranges</p>

<p>The new syntax allows you to filter tests by line ranges. For example, the<br />
following command runs tests from line 10 to 20.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rails <span class="nb">test test</span>/models/user_test.rb:10-20
</code></pre></div></div>

<p><em>Shouichi Kamiya</em>, <em>Seonggi Yang</em>, <em>oljfte</em>, <em>Ryohei UEDA</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Update default scaffold templates to set 303 (See Other) as status code
</title>
    <link>https://github.com/rails/rails/issues/48622</link>
    <guid>https://github.com/rails/rails/issues/48622</guid>
    <description>*   Update default scaffold templates to set 303 (See Other) as status code
    on redirect for the update action for XHR requests other than GET or POST
    to avoid issues (e.g browsers trying to follow the redirect using the
    original request method resulting in double PATCH/PUT)

    *Guillermo Iguaran*</description>
    <pubDate>Sun, 02 Jul 2023 05:10:48 +0000</pubDate>
    <author>Guillermo Iguaran</author>
    <content:encoded><![CDATA[<p>Update default scaffold templates to set 303 (See Other) as status code<br />
on redirect for the update action for XHR requests other than GET or POST<br />
to avoid issues (e.g browsers trying to follow the redirect using the<br />
original request method resulting in double PATCH/PUT)</p>

<p><em>Guillermo Iguaran</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: The new `config.autoload_lib_once` is similar to `config.autoload_lib`,
</title>
    <link>https://github.com/rails/rails/issues/48610</link>
    <guid>https://github.com/rails/rails/issues/48610</guid>
    <description>*   The new `config.autoload_lib_once` is similar to `config.autoload_lib`,
    except that it adds `lib` to `config.autoload_once_paths` instead.

    By calling `config.autoload_lib_once`, classes and modules in `lib` can be
    autoloaded, even from application initializers, but won&#39;t be reloaded.

    Please, see further details in the [autoloading
    guide](https://guides.rubyonrails.org/v7.1/autoloading_and_reloading_constants.html).

    *Xavier Noria*</description>
    <pubDate>Thu, 29 Jun 2023 07:28:26 +0000</pubDate>
    <author>Xavier Noria</author>
    <content:encoded><![CDATA[<p>The new <code>config.autoload_lib_once</code> is similar to <code>config.autoload_lib</code>,<br />
except that it adds <code>lib</code> to <code>config.autoload_once_paths</code> instead.</p>

<p>By calling <code>config.autoload_lib_once</code>, classes and modules in <code>lib</code> can be<br />
autoloaded, even from application initializers, but won’t be reloaded.</p>

<p>Please, see further details in the <a href="https://guides.rubyonrails.org/v7.1/autoloading_and_reloading_constants.html">autoloading<br />
guide</a>.</p>

<p><em>Xavier Noria</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `config.action_dispatch.debug_exception_log_level` to configure the log
</title>
    <link>https://github.com/rails/rails/issues/48575</link>
    <guid>https://github.com/rails/rails/issues/48575</guid>
    <description>*   Add `config.action_dispatch.debug_exception_log_level` to configure the log
    level used by `ActionDispatch::DebugExceptions`.

    The default is `:fatal`, but with `load_defaults &quot;7.1&quot;` the default will be
    `:error`.

    *Hartley McGuire*</description>
    <pubDate>Tue, 27 Jun 2023 17:17:45 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Add <code>config.action_dispatch.debug_exception_log_level</code> to configure the log<br />
level used by <code>ActionDispatch::DebugExceptions</code>.</p>

<p>The default is <code>:fatal</code>, but with <code>load_defaults "7.1"</code> the default will be<br />
<code>:error</code>.</p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `DATABASE` option to `railties:install:migrations`
</title>
    <link>https://github.com/rails/rails/issues/48579</link>
    <guid>https://github.com/rails/rails/issues/48579</guid>
    <description>*   Add `DATABASE` option to `railties:install:migrations`

    This allows you to specify which database the migrations should be copied to
    when running `rails railties:install:migrations`.

    ```bash
    $ rails railties:install:migrations DATABASE=animals
    ```

    *Matthew Hirst*</description>
    <pubDate>Mon, 26 Jun 2023 17:45:48 +0000</pubDate>
    <author>Matthew Hirst</author>
    <content:encoded><![CDATA[<p>Add <code>DATABASE</code> option to <code>railties:install:migrations</code></p>

<p>This allows you to specify which database the migrations should be copied to<br />
when running <code>rails railties:install:migrations</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rails railties:install:migrations <span class="nv">DATABASE</span><span class="o">=</span>animals
</code></pre></div></div>

<p><em>Matthew Hirst</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: The new method `config.autoload_lib(ignore:)` provides a simple way to
</title>
    <link>https://github.com/rails/rails/issues/48572</link>
    <guid>https://github.com/rails/rails/issues/48572</guid>
    <description>*   The new method `config.autoload_lib(ignore:)` provides a simple way to
    autoload from `lib`:

    ```ruby
    # config/application.rb
    config.autoload_lib(ignore: %w(assets tasks))
    ```

    Please, see further details in the [autoloading
    guide](https://guides.rubyonrails.org/v7.1/autoloading_and_reloading_constants.html).

    *Xavier Noria*</description>
    <pubDate>Sun, 25 Jun 2023 08:43:10 +0000</pubDate>
    <author>Xavier Noria</author>
    <content:encoded><![CDATA[<p>The new method <code>config.autoload_lib(ignore:)</code> provides a simple way to<br />
autoload from <code>lib</code>:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># config/application.rb</span>
<span class="n">config</span><span class="p">.</span><span class="nf">autoload_lib</span><span class="p">(</span><span class="ss">ignore: </span><span class="sx">%w(assets tasks)</span><span class="p">)</span>
</code></pre></div></div>

<p>Please, see further details in the <a href="https://guides.rubyonrails.org/v7.1/autoloading_and_reloading_constants.html">autoloading<br />
guide</a>.</p>

<p><em>Xavier Noria</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Don&#39;t show secret_key_base for `Rails.application.config#inspect`.
</title>
    <link>https://github.com/rails/rails/issues/48500</link>
    <guid>https://github.com/rails/rails/issues/48500</guid>
    <description>*   Don&#39;t show secret_key_base for `Rails.application.config#inspect`.

    Before:

    ```ruby
    Rails.application.config.inspect
    &quot;#&lt;Rails::Application::Configuration:0x00000001132b02a0 @root=... @secret_key_base=\&quot;b3c631c314c0bbca50c1b2843150fe33\&quot; ... &gt;&quot;
    ```

    After:

    ```ruby
    Rails.application.config.inspect
    &quot;#&lt;Rails::Application::Configuration:0x00000001132b02a0&gt;&quot;
    ```

    *Petrik de Heus*</description>
    <pubDate>Fri, 16 Jun 2023 18:19:40 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Don’t show secret_key_base for <code>Rails.application.config#inspect</code>.</p>

<p>Before:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">config</span><span class="p">.</span><span class="nf">inspect</span>
<span class="s2">"#&lt;Rails::Application::Configuration:0x00000001132b02a0 @root=... @secret_key_base=</span><span class="se">\"</span><span class="s2">b3c631c314c0bbca50c1b2843150fe33</span><span class="se">\"</span><span class="s2"> ... &gt;"</span>
</code></pre></div></div>

<p>After:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">config</span><span class="p">.</span><span class="nf">inspect</span>
<span class="s2">"#&lt;Rails::Application::Configuration:0x00000001132b02a0&gt;"</span>
</code></pre></div></div>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Deprecate calling `Rails.application.secrets`.
</title>
    <link>https://github.com/rails/rails/issues/48472</link>
    <guid>https://github.com/rails/rails/issues/48472</guid>
    <description>*   Deprecate calling `Rails.application.secrets`.

    Rails `secrets` have been deprecated in favor of `credentials`.
    Calling `Rails.application.secrets` should show a deprecation warning.

    *Petrik de Heus*</description>
    <pubDate>Thu, 15 Jun 2023 07:09:08 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Deprecate calling <code>Rails.application.secrets</code>.</p>

<p>Rails <code>secrets</code> have been deprecated in favor of <code>credentials</code>.<br />
Calling <code>Rails.application.secrets</code> should show a deprecation warning.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Store `secret_key_base` in `Rails.config` for local environments.
</title>
    <link>https://github.com/rails/rails/issues/48470</link>
    <guid>https://github.com/rails/rails/issues/48470</guid>
    <description>*   Store `secret_key_base` in `Rails.config` for local environments.

    Rails `secrets` have been deprecated in favor of `credentials`.
    For the local environments the `secret_key_base` is now stored in
    `Rails.config.secret_key_base` instead of the soft deprecated
    `Rails.application.secrets.secret_key_base`.

    *Petrik de Heus*</description>
    <pubDate>Wed, 14 Jun 2023 21:52:17 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Store <code>secret_key_base</code> in <code>Rails.config</code> for local environments.</p>

<p>Rails <code>secrets</code> have been deprecated in favor of <code>credentials</code>.<br />
For the local environments the <code>secret_key_base</code> is now stored in<br />
<code>Rails.config.secret_key_base</code> instead of the soft deprecated<br />
<code>Rails.application.secrets.secret_key_base</code>.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Enable force_ssl=true in production by default: Force all access to the app over SSL,
</title>
    <link>https://github.com/rails/rails/issues/47852</link>
    <guid>https://github.com/rails/rails/issues/47852</guid>
    <description>*   Enable force_ssl=true in production by default: Force all access to the app over SSL,
    use Strict-Transport-Security, and use secure cookies

    *Justin Searls*, *Aaron Patterson*, *Guillermo Iguaran*, *Vinícius Bispo*</description>
    <pubDate>Sat, 10 Jun 2023 14:41:59 +0000</pubDate>
    <author>Justin Searls</author>
    <content:encoded><![CDATA[<p>Enable force_ssl=true in production by default: Force all access to the app over SSL,<br />
use Strict-Transport-Security, and use secure cookies</p>

<p><em>Justin Searls</em>, <em>Aaron Patterson</em>, <em>Guillermo Iguaran</em>, <em>Vinícius Bispo</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add engine&#39;s draw paths to application route set, so that the application
</title>
    <link>https://github.com/rails/rails/issues/48388</link>
    <guid>https://github.com/rails/rails/issues/48388</guid>
    <description>*   Add engine&#39;s draw paths to application route set, so that the application
    can draw route files defined in engine paths.

    *Gannon McGibbon*</description>
    <pubDate>Tue, 06 Jun 2023 03:54:04 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Add engine’s draw paths to application route set, so that the application<br />
can draw route files defined in engine paths.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Support `VISUAL` environment variable for commands which open an editor,
</title>
    <link>https://github.com/rails/rails/issues/48374</link>
    <guid>https://github.com/rails/rails/issues/48374</guid>
    <description>*   Support `VISUAL` environment variable for commands which open an editor,
    and prefer it over `EDITOR`.

    *Summer ☀️*</description>
    <pubDate>Fri, 02 Jun 2023 03:55:17 +0000</pubDate>
    <author>Summer ☀️</author>
    <content:encoded><![CDATA[<p>Support <code>VISUAL</code> environment variable for commands which open an editor,<br />
and prefer it over <code>EDITOR</code>.</p>

<p><em>Summer ☀️</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add engine&#39;s `test/fixtures` path to `fixture_paths` in `on_load` hook if
</title>
    <link>https://github.com/rails/rails/issues/48287</link>
    <guid>https://github.com/rails/rails/issues/48287</guid>
    <description>*   Add engine&#39;s `test/fixtures` path to `fixture_paths` in `on_load` hook if
    path exists and is under the Rails application root.

    *Chris Salzberg*</description>
    <pubDate>Wed, 24 May 2023 14:40:19 +0000</pubDate>
    <author>Chris Salzberg</author>
    <content:encoded><![CDATA[<p>Add engine’s <code>test/fixtures</code> path to <code>fixture_paths</code> in <code>on_load</code> hook if<br />
path exists and is under the Rails application root.</p>

<p><em>Chris Salzberg</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: `bin/rails app:template` now runs `bundle install` and any `after_bundle`
</title>
    <link>https://github.com/rails/rails/issues/48269</link>
    <guid>https://github.com/rails/rails/issues/48269</guid>
    <description>*   `bin/rails app:template` now runs `bundle install` and any `after_bundle`
    blocks after the template is executed.

    *Jonathan Hefner* and *Gerry Caulfield*</description>
    <pubDate>Sun, 21 May 2023 19:56:43 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>bin/rails app:template</code> now runs <code>bundle install</code> and any <code>after_bundle</code><br />
blocks after the template is executed.</p>

<p><em>Jonathan Hefner</em> and <em>Gerry Caulfield</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Enable passing column size to migration generator
</title>
    <link>https://github.com/rails/rails/issues/48210</link>
    <guid>https://github.com/rails/rails/issues/48210</guid>
    <description>*   Enable passing column size to migration generator

    Previously you could pass a limit to the migration generator:

    `rails generate migration CreateAuthor name:text{65535}`

    Now, a size attribute can be passed to the migration generator:

    `rails generate migration CreateAuthor name:text{medium}`

    This generates a migration which includes the size attribute:

    ```ruby
    class CreateAuthor &lt; ActiveRecord::Migration[7.1]
      def change
        create_table :authors do |t|
          t.text :name, size: :medium
        end
      end
    end
    ```

    *Josh Broughton*, *Hartley McGuire*</description>
    <pubDate>Mon, 15 May 2023 19:40:07 +0000</pubDate>
    <author>Josh Broughton</author>
    <content:encoded><![CDATA[<p>Enable passing column size to migration generator</p>

<p>Previously you could pass a limit to the migration generator:</p>

<p><code>rails generate migration CreateAuthor name:text{65535}</code></p>

<p>Now, a size attribute can be passed to the migration generator:</p>

<p><code>rails generate migration CreateAuthor name:text{medium}</code></p>

<p>This generates a migration which includes the size attribute:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CreateAuthor</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span><span class="p">[</span><span class="mf">7.1</span><span class="p">]</span>
  <span class="k">def</span> <span class="nf">change</span>
    <span class="n">create_table</span> <span class="ss">:authors</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="p">.</span><span class="nf">text</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">size: :medium</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Josh Broughton</em>, <em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Trying to set a config key with the same name of a method now raises:
</title>
    <link>https://github.com/rails/rails/issues/48030</link>
    <guid>https://github.com/rails/rails/issues/48030</guid>
    <description>*   Trying to set a config key with the same name of a method now raises:

    ```ruby
    config.load_defaults = 7.0
    # NoMethodError: Cannot assign to `load_defaults`, it is a configuration method
    ```

    *Xavier Noria*</description>
    <pubDate>Sun, 23 Apr 2023 08:38:34 +0000</pubDate>
    <author>Xavier Noria</author>
    <content:encoded><![CDATA[<p>Trying to set a config key with the same name of a method now raises:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">load_defaults</span> <span class="o">=</span> <span class="mf">7.0</span>
<span class="c1"># NoMethodError: Cannot assign to `load_defaults`, it is a configuration method</span>
</code></pre></div></div>

<p><em>Xavier Noria</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Deprecate `secrets:edit/show` and remove `secrets:setup`
</title>
    <link>https://github.com/rails/rails/issues/47801</link>
    <guid>https://github.com/rails/rails/issues/47801</guid>
    <description>*   Deprecate `secrets:edit/show` and remove `secrets:setup`

    `bin/rails secrets:setup` has been deprecated since Rails 5.2 in favor of
    credentials. This command has been removed.

    `bin/rails secrets:show` and `bin/rails secrets:edit` have been deprecated
    in favor of credentials.

    Run `bin/rails credentials:help` for more information

    *Petrik de Heus*</description>
    <pubDate>Tue, 11 Apr 2023 21:52:46 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Deprecate <code>secrets:edit/show</code> and remove <code>secrets:setup</code></p>

<p><code>bin/rails secrets:setup</code> has been deprecated since Rails 5.2 in favor of<br />
credentials. This command has been removed.</p>

<p><code>bin/rails secrets:show</code> and <code>bin/rails secrets:edit</code> have been deprecated<br />
in favor of credentials.</p>

<p>Run <code>bin/rails credentials:help</code> for more information</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: `bin/rails --help` will now list only framework and plugin commands. Rake
</title>
    <link>https://github.com/rails/rails/issues/47718</link>
    <guid>https://github.com/rails/rails/issues/47718</guid>
    <description>*   `bin/rails --help` will now list only framework and plugin commands. Rake
    tasks defined in `lib/tasks/*.rake` files will no longer be included. For a
    list of those tasks, use `rake -T`.

    *Jonathan Hefner*</description>
    <pubDate>Tue, 28 Mar 2023 21:32:28 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>bin/rails --help</code> will now list only framework and plugin commands. Rake<br />
tasks defined in <code>lib/tasks/*.rake</code> files will no longer be included. For a<br />
list of those tasks, use <code>rake -T</code>.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Allow calling `bin/rails restart` outside of app directory.
</title>
    <link>https://github.com/rails/rails/issues/47619</link>
    <guid>https://github.com/rails/rails/issues/47619</guid>
    <description>*   Allow calling `bin/rails restart` outside of app directory.

    The following would previously fail with a &quot;No Rakefile found&quot; error.

    ```bash
    $ blog/bin/rails restart
    ```

    *Petrik de Heus*</description>
    <pubDate>Wed, 15 Mar 2023 16:38:07 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Allow calling <code>bin/rails restart</code> outside of app directory.</p>

<p>The following would previously fail with a “No Rakefile found” error.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>blog/bin/rails restart
</code></pre></div></div>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Support prerelease rubies in Gemfile template if RubyGems version is 3.3.13 or higher.
</title>
    <link>https://github.com/rails/rails/issues/47681</link>
    <guid>https://github.com/rails/rails/issues/47681</guid>
    <description>*   Support prerelease rubies in Gemfile template if RubyGems version is 3.3.13 or higher.

    *Yasuo Honda*, *David Rodríguez*</description>
    <pubDate>Wed, 15 Mar 2023 04:36:28 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Support prerelease rubies in Gemfile template if RubyGems version is 3.3.13 or higher.</p>

<p><em>Yasuo Honda</em>, <em>David Rodríguez</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Autoloading setup honors root directories manually set by the user.
</title>
    <link>https://github.com/rails/rails/issues/47583</link>
    <guid>https://github.com/rails/rails/issues/47583</guid>
    <description>*   Autoloading setup honors root directories manually set by the user.

    This is relevant for custom namespaces. For example, if you&#39;d like classes
    and modules under `app/services` to be defined in the `Services` namespace
    without an extra `app/services/services` directory, this is now enough:

    ```ruby
    # config/initializers/autoloading.rb

    # The namespace has to exist.
    #
    # In this example we define the module on the spot. Could also be created
    # elsewhere and its definition loaded here with an ordinary `require`. In
    # any case, `push_dir` expects a class or module object.
    module Services; end

    Rails.autoloaders.main.push_dir(&quot;#{Rails.root}/app/services&quot;, namespace: Services)
    ```

    Check the autoloading guide for further details.

    *Xavier Noria*</description>
    <pubDate>Sun, 05 Mar 2023 20:59:18 +0000</pubDate>
    <author>Xavier Noria</author>
    <content:encoded><![CDATA[<p>Autoloading setup honors root directories manually set by the user.</p>

<p>This is relevant for custom namespaces. For example, if you’d like classes<br />
and modules under <code>app/services</code> to be defined in the <code>Services</code> namespace<br />
without an extra <code>app/services/services</code> directory, this is now enough:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># config/initializers/autoloading.rb</span>

<span class="c1"># The namespace has to exist.</span>
<span class="c1">#</span>
<span class="c1"># In this example we define the module on the spot. Could also be created</span>
<span class="c1"># elsewhere and its definition loaded here with an ordinary `require`. In</span>
<span class="c1"># any case, `push_dir` expects a class or module object.</span>
<span class="k">module</span> <span class="nn">Services</span><span class="p">;</span> <span class="k">end</span>

<span class="no">Rails</span><span class="p">.</span><span class="nf">autoloaders</span><span class="p">.</span><span class="nf">main</span><span class="p">.</span><span class="nf">push_dir</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="no">Rails</span><span class="p">.</span><span class="nf">root</span><span class="si">}</span><span class="s2">/app/services"</span><span class="p">,</span> <span class="ss">namespace: </span><span class="no">Services</span><span class="p">)</span>
</code></pre></div></div>

<p>Check the autoloading guide for further details.</p>

<p><em>Xavier Noria</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Railties now requires the irb gem as a dependency, which means when you install Rails, irb will also
</title>
    <link>https://github.com/rails/rails/issues/47442</link>
    <guid>https://github.com/rails/rails/issues/47442</guid>
    <description>*   Railties now requires the irb gem as a dependency, which means when you install Rails, irb will also
    be installed as a gem. Rails will then use the installed version of irb for its console instead of
    relying on Ruby&#39;s built-in version.
    This ensures that Rails has access to the most up-to-date and reliable version of irb for its console.

    *Stan Lo*</description>
    <pubDate>Mon, 06 Mar 2023 22:11:52 +0000</pubDate>
    <author>Stan Lo</author>
    <content:encoded><![CDATA[<p>Railties now requires the irb gem as a dependency, which means when you install Rails, irb will also<br />
be installed as a gem. Rails will then use the installed version of irb for its console instead of<br />
relying on Ruby’s built-in version.<br />
This ensures that Rails has access to the most up-to-date and reliable version of irb for its console.</p>

<p><em>Stan Lo</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Use infinitive form for all rails command descriptions verbs.
</title>
    <link>https://github.com/rails/rails/issues/47215</link>
    <guid>https://github.com/rails/rails/issues/47215</guid>
    <description>*   Use infinitive form for all rails command descriptions verbs.

    *Petrik de Heus*</description>
    <pubDate>Wed, 01 Feb 2023 22:30:56 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Use infinitive form for all rails command descriptions verbs.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Credentials commands (e.g. `bin/rails credentials:edit`) now respect
</title>
    <link>https://github.com/rails/rails/issues/47107</link>
    <guid>https://github.com/rails/rails/issues/47107</guid>
    <description>*   Credentials commands (e.g. `bin/rails credentials:edit`) now respect
    `config.credentials.content_path` and `config.credentials.key_path` when set
    in `config/application.rb` or `config/environments/#{Rails.env}.rb`.

    Before:

      * `bin/rails credentials:edit` ignored `RAILS_ENV`, and would always edit
        `config/credentials.yml.enc`.

      * `bin/rails credentials:edit --environment foo` would create and edit
        `config/credentials/foo.yml.enc`.

      * If `config.credentials.content_path` or `config.credentials.key_path`
        was set, `bin/rails credentials:edit` could not be used to edit the
        credentials.  Editing credentials required using `bin/rails
        encrypted:edit path/to/credentials --key path/to/key`.

    After:

      * `bin/rails credentials:edit` will edit the credentials file that the app
        would load for the current `RAILS_ENV`.

      * `bin/rails credentials:edit` respects `config.credentials.content_path`
        and `config.credentials.key_path` when set in `config/application.rb`
        or `config/environments/#{Rails.env}.rb`.

      * `bin/rails credentials:edit --environment foo` will create and edit
        `config/credentials/foo.yml.enc` _if_ `config.credentials.content_path`
        has not been set for the `foo` environment.  Ultimately, it will edit
        the credentials file that the app would load for the `foo` environment.

    *Jonathan Hefner*</description>
    <pubDate>Wed, 25 Jan 2023 22:27:51 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Credentials commands (e.g. <code>bin/rails credentials:edit</code>) now respect<br />
<code>config.credentials.content_path</code> and <code>config.credentials.key_path</code> when set<br />
in <code>config/application.rb</code> or <code>config/environments/#{Rails.env}.rb</code>.</p>

<p>Before:</p>

<ul>
  <li>
    <p><code>bin/rails credentials:edit</code> ignored <code>RAILS_ENV</code>, and would always edit<br />
<code>config/credentials.yml.enc</code>.</p>
  </li>
  <li>
    <p><code>bin/rails credentials:edit --environment foo</code> would create and edit<br />
<code>config/credentials/foo.yml.enc</code>.</p>
  </li>
  <li>
    <p>If <code>config.credentials.content_path</code> or <code>config.credentials.key_path</code><br />
was set, <code>bin/rails credentials:edit</code> could not be used to edit the<br />
credentials.  Editing credentials required using <code>bin/rails
encrypted:edit path/to/credentials --key path/to/key</code>.</p>
  </li>
</ul>

<p>After:</p>

<ul>
  <li>
    <p><code>bin/rails credentials:edit</code> will edit the credentials file that the app<br />
would load for the current <code>RAILS_ENV</code>.</p>
  </li>
  <li>
    <p><code>bin/rails credentials:edit</code> respects <code>config.credentials.content_path</code><br />
and <code>config.credentials.key_path</code> when set in <code>config/application.rb</code><br />
or <code>config/environments/#{Rails.env}.rb</code>.</p>
  </li>
  <li>
    <p><code>bin/rails credentials:edit --environment foo</code> will create and edit<br />
<code>config/credentials/foo.yml.enc</code> <em>if</em> <code>config.credentials.content_path</code><br />
has not been set for the <code>foo</code> environment.  Ultimately, it will edit<br />
the credentials file that the app would load for the <code>foo</code> environment.</p>
  </li>
</ul>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add descriptions for non-Rake commands when running `rails -h`.
</title>
    <link>https://github.com/rails/rails/issues/46997</link>
    <guid>https://github.com/rails/rails/issues/46997</guid>
    <description>*   Add descriptions for non-Rake commands when running `rails -h`.

    *Petrik de Heus*</description>
    <pubDate>Mon, 16 Jan 2023 17:53:23 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Add descriptions for non-Rake commands when running <code>rails -h</code>.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Show relevant commands when calling help
</title>
    <link>https://github.com/rails/rails/issues/46164</link>
    <guid>https://github.com/rails/rails/issues/46164</guid>
    <description>*   Show relevant commands when calling help

    When running `rails -h` or just `rails` outside a Rails application,
    Rails outputs all options for running the `rails new` command. This can be
    confusing to users when they probably want to see the common Rails commands.

    Instead, we should always show the common commands when running `rails -h`
    inside or outside a Rails application.

    As the relevant commands inside a Rails application differ from the
    commands outside an application, the help USAGE file has been split to
    show the most relevant commands for the context.

    *Petrik de Heus*</description>
    <pubDate>Thu, 12 Jan 2023 21:24:54 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Show relevant commands when calling help</p>

<p>When running <code>rails -h</code> or just <code>rails</code> outside a Rails application,<br />
Rails outputs all options for running the <code>rails new</code> command. This can be<br />
confusing to users when they probably want to see the common Rails commands.</p>

<p>Instead, we should always show the common commands when running <code>rails -h</code><br />
inside or outside a Rails application.</p>

<p>As the relevant commands inside a Rails application differ from the<br />
commands outside an application, the help USAGE file has been split to<br />
show the most relevant commands for the context.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add Rails::HealthController#show and map it to /up for newly generated applications.
</title>
    <link>https://github.com/rails/rails/issues/46936</link>
    <guid>https://github.com/rails/rails/issues/46936</guid>
    <description>*   Add Rails::HealthController#show and map it to /up for newly generated applications.
    Load balancers and uptime monitors all need a basic endpoint to tell whether the app is up.
    This is a good starting point that&#39;ll work in many situations.

    *DHH*</description>
    <pubDate>Tue, 10 Jan 2023 11:22:12 +0000</pubDate>
    <author>David Heinemeier Hansson</author>
    <content:encoded><![CDATA[<p>Add Rails::HealthController#show and map it to /up for newly generated applications.<br />
Load balancers and uptime monitors all need a basic endpoint to tell whether the app is up.<br />
This is a good starting point that’ll work in many situations.</p>

<p><em>DHH</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Only use HostAuthorization middleware if `config.hosts` is not empty
</title>
    <link>https://github.com/rails/rails/issues/46858</link>
    <guid>https://github.com/rails/rails/issues/46858</guid>
    <description>*   Only use HostAuthorization middleware if `config.hosts` is not empty

    *Hartley McGuire*</description>
    <pubDate>Mon, 09 Jan 2023 06:11:45 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Only use HostAuthorization middleware if <code>config.hosts</code> is not empty</p>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Raise an exception when a `before_action`&#39;s &quot;only&quot; or &quot;except&quot; filter
</title>
    <link>https://github.com/rails/rails/issues/43487</link>
    <guid>https://github.com/rails/rails/issues/43487</guid>
    <description>*   Raise an exception when a `before_action`&#39;s &quot;only&quot; or &quot;except&quot; filter
    options reference an action that doesn&#39;t exist. This will be enabled by
    default but can be overridden via config.

    ```ruby
    # config/environments/production.rb
    config.action_controller.raise_on_missing_callback_actions = false
    ```

    *Jess Bees*</description>
    <pubDate>Sat, 07 Jan 2023 08:38:35 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Raise an exception when a <code>before_action</code>’s “only” or “except” filter<br />
options reference an action that doesn’t exist. This will be enabled by<br />
default but can be overridden via config.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># config/environments/production.rb</span>
<span class="n">config</span><span class="p">.</span><span class="nf">action_controller</span><span class="p">.</span><span class="nf">raise_on_missing_callback_actions</span> <span class="o">=</span> <span class="kp">false</span>
</code></pre></div></div>

<p><em>Jess Bees</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Use physical processor count as the default Puma worker count in production.
</title>
    <link>https://github.com/rails/rails/issues/46838</link>
    <guid>https://github.com/rails/rails/issues/46838</guid>
    <description>*   Use physical processor count as the default Puma worker count in production.
    This can be overridden by setting `ENV[&quot;WEB_CONCURRENCY&quot;]` or editing the
    generated &quot;config/puma.rb&quot; directly.

    *DHH*</description>
    <pubDate>Sat, 07 Jan 2023 08:38:35 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Use physical processor count as the default Puma worker count in production.<br />
This can be overridden by setting <code>ENV["WEB_CONCURRENCY"]</code> or editing the<br />
generated “config/puma.rb” directly.</p>

<p><em>DHH</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add Docker files by default to new apps: Dockerfile, .dockerignore, bin/docker-entrypoint.
</title>
    <link>https://github.com/rails/rails/issues/46762</link>
    <guid>https://github.com/rails/rails/issues/46762</guid>
    <description>*   Add Docker files by default to new apps: Dockerfile, .dockerignore, bin/docker-entrypoint.
    These files can be skipped with `--skip-docker`. They&#39;re intended as a starting point for
    a production deploy of the application. Not intended for development (see Docked Rails for that).

    Example:

    ```bash
    $ docker build -t app .
    $ docker volume create app-storage
    $ docker run --rm -it -v app-storage:/rails/storage -p 3000:3000 --env RAILS_MASTER_KEY=&lt;see config/master.key&gt; app
    ```

    You can also start a console or a runner from this image:

    ```bash
    $ docker run --rm -it -v app-storage:/rails/storage --env RAILS_MASTER_KEY=&lt;see config/master.key&gt; app console
    ```

    To create a multi-platform image on Apple Silicon to deploy on AMD or Intel and push to Docker Hub for user/app:

    ```bash
    $ docker login -u &lt;user&gt;
    $ docker buildx create --use
    $ docker buildx build --push --platform=linux/amd64,linux/arm64 -t &lt;user/image&gt; .
    ```

    *DHH, Sam Ruby*</description>
    <pubDate>Mon, 19 Dec 2022 18:32:01 +0000</pubDate>
    <author>David Heinemeier Hansson</author>
    <content:encoded><![CDATA[<p>Add Docker files by default to new apps: Dockerfile, .dockerignore, bin/docker-entrypoint.<br />
These files can be skipped with <code>--skip-docker</code>. They’re intended as a starting point for<br />
a production deploy of the application. Not intended for development (see Docked Rails for that).</p>

<p>Example:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker build <span class="nt">-t</span> app <span class="nb">.</span>
<span class="nv">$ </span>docker volume create app-storage
<span class="nv">$ </span>docker run <span class="nt">--rm</span> <span class="nt">-it</span> <span class="nt">-v</span> app-storage:/rails/storage <span class="nt">-p</span> 3000:3000 <span class="nt">--env</span> <span class="nv">RAILS_MASTER_KEY</span><span class="o">=</span>&lt;see config/master.key&gt; app
</code></pre></div></div>

<p>You can also start a console or a runner from this image:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker run <span class="nt">--rm</span> <span class="nt">-it</span> <span class="nt">-v</span> app-storage:/rails/storage <span class="nt">--env</span> <span class="nv">RAILS_MASTER_KEY</span><span class="o">=</span>&lt;see config/master.key&gt; app console
</code></pre></div></div>

<p>To create a multi-platform image on Apple Silicon to deploy on AMD or Intel and push to Docker Hub for user/app:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker login <span class="nt">-u</span> &lt;user&gt;
<span class="nv">$ </span>docker buildx create <span class="nt">--use</span>
<span class="nv">$ </span>docker buildx build <span class="nt">--push</span> <span class="nt">--platform</span><span class="o">=</span>linux/amd64,linux/arm64 <span class="nt">-t</span> &lt;user/image&gt; <span class="nb">.</span>
</code></pre></div></div>

<p><em>DHH, Sam Ruby</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add ENV[&quot;SECRET_KEY_BASE_DUMMY&quot;] for starting production environment with a generated secret base key,
</title>
    <link>https://github.com/rails/rails/issues/46760</link>
    <guid>https://github.com/rails/rails/issues/46760</guid>
    <description>*   Add ENV[&quot;SECRET_KEY_BASE_DUMMY&quot;] for starting production environment with a generated secret base key,
    which can be used to run tasks like `assets:precompile` without making the RAILS_MASTER_KEY available
    to the build process.

    Dockerfile layer example:

    ```
    RUN SECRET_KEY_BASE_DUMMY=1 bundle exec rails assets:precompile
    ```

    *DHH*</description>
    <pubDate>Sun, 18 Dec 2022 03:22:50 +0000</pubDate>
    <author>David Heinemeier Hansson</author>
    <content:encoded><![CDATA[<p>Add ENV[“SECRET_KEY_BASE_DUMMY”] for starting production environment with a generated secret base key,<br />
which can be used to run tasks like <code>assets:precompile</code> without making the RAILS_MASTER_KEY available<br />
to the build process.</p>

<p>Dockerfile layer example:</p>

<pre><code>RUN SECRET_KEY_BASE_DUMMY=1 bundle exec rails assets:precompile
</code></pre>

<p><em>DHH</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Show descriptions for all commands in Rails help
</title>
    <link>https://github.com/rails/rails/issues/46163</link>
    <guid>https://github.com/rails/rails/issues/46163</guid>
    <description>*   Show descriptions for all commands in Rails help

    When calling `rails help` most commands missed their description. We now
    show the same descriptions as shown in `rails -T`.

    *Petrik de Heus*</description>
    <pubDate>Fri, 16 Dec 2022 09:35:06 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Show descriptions for all commands in Rails help</p>

<p>When calling <code>rails help</code> most commands missed their description. We now<br />
show the same descriptions as shown in <code>rails -T</code>.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Always generate the storage/ directory with rails new to ensure there&#39;s a stable place to
</title>
    <link>https://github.com/rails/rails/issues/46701</link>
    <guid>https://github.com/rails/rails/issues/46701</guid>
    <description>*   Always generate the storage/ directory with rails new to ensure there&#39;s a stable place to
    put permanent files, and a single mount point for containers to map. Then default sqlite3 databases
    to live there instead of db/, which is only meant for configuration, not data.

    *DHH*</description>
    <pubDate>Mon, 12 Dec 2022 16:49:11 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Always generate the storage/ directory with rails new to ensure there’s a stable place to<br />
put permanent files, and a single mount point for containers to map. Then default sqlite3 databases<br />
to live there instead of db/, which is only meant for configuration, not data.</p>

<p><em>DHH</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Rails console now disables `IRB`&#39;s autocompletion feature in production by default.
</title>
    <link>https://github.com/rails/rails/issues/46656</link>
    <guid>https://github.com/rails/rails/issues/46656</guid>
    <description>*   Rails console now disables `IRB`&#39;s autocompletion feature in production by default.

    Setting `IRB_USE_AUTOCOMPLETE=true` can override this default.

    *Stan Lo*</description>
    <pubDate>Tue, 06 Dec 2022 15:44:35 +0000</pubDate>
    <author>Stan Lo</author>
    <content:encoded><![CDATA[<p>Rails console now disables <code>IRB</code>’s autocompletion feature in production by default.</p>

<p>Setting <code>IRB_USE_AUTOCOMPLETE=true</code> can override this default.</p>

<p><em>Stan Lo</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `config.precompile_filter_parameters`, which enables precompilation of
</title>
    <link>https://github.com/rails/rails/issues/46452</link>
    <guid>https://github.com/rails/rails/issues/46452</guid>
    <description>*   Add `config.precompile_filter_parameters`, which enables precompilation of
    `config.filter_parameters` using `ActiveSupport::ParameterFilter.precompile_filters`.
    Precompilation can improve filtering performance, depending on the quantity
    and types of filters.

    `config.precompile_filter_parameters` defaults to `true` for
    `config.load_defaults 7.1` and above.

    *Jonathan Hefner*</description>
    <pubDate>Thu, 24 Nov 2022 18:30:27 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Add <code>config.precompile_filter_parameters</code>, which enables precompilation of<br />
<code>config.filter_parameters</code> using <code>ActiveSupport::ParameterFilter.precompile_filters</code>.<br />
Precompilation can improve filtering performance, depending on the quantity<br />
and types of filters.</p>

<p><code>config.precompile_filter_parameters</code> defaults to <code>true</code> for<br />
<code>config.load_defaults 7.1</code> and above.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `after_routes_loaded` hook to `Rails::Railtie::Configuration` for
</title>
    <link>https://github.com/rails/rails/issues/46539</link>
    <guid>https://github.com/rails/rails/issues/46539</guid>
    <description>*   Add `after_routes_loaded` hook to `Rails::Railtie::Configuration` for
    engines to add a hook to be called after application routes have been
    loaded.

    ```ruby
    MyEngine.config.after_routes_loaded do
      # code that must happen after routes have been loaded
    end
    ```

    *Chris Salzberg*</description>
    <pubDate>Tue, 22 Nov 2022 20:24:24 +0000</pubDate>
    <author>Chris Salzberg</author>
    <content:encoded><![CDATA[<p>Add <code>after_routes_loaded</code> hook to <code>Rails::Railtie::Configuration</code> for<br />
engines to add a hook to be called after application routes have been<br />
loaded.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">MyEngine</span><span class="p">.</span><span class="nf">config</span><span class="p">.</span><span class="nf">after_routes_loaded</span> <span class="k">do</span>
  <span class="c1"># code that must happen after routes have been loaded</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Chris Salzberg</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Send 303 See Other status code back for the destroy action on newly generated
</title>
    <link>https://github.com/rails/rails/issues/45383</link>
    <guid>https://github.com/rails/rails/issues/45383</guid>
    <description>*   Send 303 See Other status code back for the destroy action on newly generated
    scaffold controllers.

    *Tony Drake*</description>
    <pubDate>Fri, 14 Oct 2022 17:13:13 +0000</pubDate>
    <author>Tony Drake</author>
    <content:encoded><![CDATA[<p>Send 303 See Other status code back for the destroy action on newly generated<br />
scaffold controllers.</p>

<p><em>Tony Drake</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `Rails.application.deprecators` as a central point to manage deprecators
</title>
    <link>https://github.com/rails/rails/issues/46049</link>
    <guid>https://github.com/rails/rails/issues/46049</guid>
    <description>*   Add `Rails.application.deprecators` as a central point to manage deprecators
    for an application.

    Individual deprecators can be added and retrieved from the collection:

    ```ruby
    Rails.application.deprecators[:my_gem] = ActiveSupport::Deprecation.new(&quot;2.0&quot;, &quot;MyGem&quot;)
    Rails.application.deprecators[:other_gem] = ActiveSupport::Deprecation.new(&quot;3.0&quot;, &quot;OtherGem&quot;)
    ```

    And the collection&#39;s configuration methods affect all deprecators in the
    collection:

    ```ruby
    Rails.application.deprecators.debug = true

    Rails.application.deprecators[:my_gem].debug
    # =&gt; true
    Rails.application.deprecators[:other_gem].debug
    # =&gt; true
    ```

    Additionally, all deprecators in the collection can be silenced for the
    duration of a given block:

    ```ruby
    Rails.application.deprecators.silence do
      Rails.application.deprecators[:my_gem].warn    # =&gt; silenced (no warning)
      Rails.application.deprecators[:other_gem].warn # =&gt; silenced (no warning)
    end
    ```

    *Jonathan Hefner*</description>
    <pubDate>Wed, 05 Oct 2022 20:10:10 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Add <code>Rails.application.deprecators</code> as a central point to manage deprecators<br />
for an application.</p>

<p>Individual deprecators can be added and retrieved from the collection:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">[</span><span class="ss">:my_gem</span><span class="p">]</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"2.0"</span><span class="p">,</span> <span class="s2">"MyGem"</span><span class="p">)</span>
<span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">[</span><span class="ss">:other_gem</span><span class="p">]</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Deprecation</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"3.0"</span><span class="p">,</span> <span class="s2">"OtherGem"</span><span class="p">)</span>
</code></pre></div></div>

<p>And the collection’s configuration methods affect all deprecators in the<br />
collection:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">.</span><span class="nf">debug</span> <span class="o">=</span> <span class="kp">true</span>

<span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">[</span><span class="ss">:my_gem</span><span class="p">].</span><span class="nf">debug</span>
<span class="c1"># =&gt; true</span>
<span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">[</span><span class="ss">:other_gem</span><span class="p">].</span><span class="nf">debug</span>
<span class="c1"># =&gt; true</span>
</code></pre></div></div>

<p>Additionally, all deprecators in the collection can be silenced for the<br />
duration of a given block:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">.</span><span class="nf">silence</span> <span class="k">do</span>
  <span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">[</span><span class="ss">:my_gem</span><span class="p">].</span><span class="nf">warn</span>    <span class="c1"># =&gt; silenced (no warning)</span>
  <span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">deprecators</span><span class="p">[</span><span class="ss">:other_gem</span><span class="p">].</span><span class="nf">warn</span> <span class="c1"># =&gt; silenced (no warning)</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Move dbconsole logic to Active Record connection adapter.
</title>
    <link>https://github.com/rails/rails/issues/46093</link>
    <guid>https://github.com/rails/rails/issues/46093</guid>
    <description>*   Move dbconsole logic to Active Record connection adapter.

    Instead of hosting the connection logic in the command object, the
    database adapter should be responsible for connecting to a console session.
    This patch moves #find_cmd_and_exec to the adapter and exposes a new API to
    lookup the adapter class without instantiating it.

    *Gannon McGibbon*, *Paarth Madan*</description>
    <pubDate>Thu, 29 Sep 2022 21:47:27 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Move dbconsole logic to Active Record connection adapter.</p>

<p>Instead of hosting the connection logic in the command object, the<br />
database adapter should be responsible for connecting to a console session.<br />
This patch moves #find_cmd_and_exec to the adapter and exposes a new API to<br />
lookup the adapter class without instantiating it.</p>

<p><em>Gannon McGibbon</em>, <em>Paarth Madan</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `Rails.application.message_verifiers` as a central point to configure
</title>
    <link>https://github.com/rails/rails/issues/44179</link>
    <guid>https://github.com/rails/rails/issues/44179</guid>
    <description>*   Add `Rails.application.message_verifiers` as a central point to configure
    and create message verifiers for an application.

    This allows applications to, for example, rotate old `secret_key_base`
    values:

    ```ruby
    config.before_initialize do |app|
      app.message_verifiers.rotate(secret_key_base: &quot;old secret_key_base&quot;)
    end
    ```

    And for libraries to create preconfigured message verifiers:

    ```ruby
    ActiveStorage.verifier = Rails.application.message_verifiers[&quot;ActiveStorage&quot;]
    ```

    *Jonathan Hefner*</description>
    <pubDate>Thu, 29 Sep 2022 21:47:27 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Add <code>Rails.application.message_verifiers</code> as a central point to configure<br />
and create message verifiers for an application.</p>

<p>This allows applications to, for example, rotate old <code>secret_key_base</code><br />
values:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">before_initialize</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>
  <span class="n">app</span><span class="p">.</span><span class="nf">message_verifiers</span><span class="p">.</span><span class="nf">rotate</span><span class="p">(</span><span class="ss">secret_key_base: </span><span class="s2">"old secret_key_base"</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<p>And for libraries to create preconfigured message verifiers:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveStorage</span><span class="p">.</span><span class="nf">verifier</span> <span class="o">=</span> <span class="no">Rails</span><span class="p">.</span><span class="nf">application</span><span class="p">.</span><span class="nf">message_verifiers</span><span class="p">[</span><span class="s2">"ActiveStorage"</span><span class="p">]</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Support MySQL&#39;s ssl-mode option for the dbconsole command.
</title>
    <link>https://github.com/rails/rails/issues/46008</link>
    <guid>https://github.com/rails/rails/issues/46008</guid>
    <description>*   Support MySQL&#39;s ssl-mode option for the dbconsole command.

    Verifying the identity of the database server requires setting the ssl-mode
    option to VERIFY_CA or VERIFY_IDENTITY. This option was previously ignored
    for the dbconsole command.

    *Petrik de Heus*</description>
    <pubDate>Fri, 16 Sep 2022 07:51:51 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Support MySQL’s ssl-mode option for the dbconsole command.</p>

<p>Verifying the identity of the database server requires setting the ssl-mode<br />
option to VERIFY_CA or VERIFY_IDENTITY. This option was previously ignored<br />
for the dbconsole command.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Delegate application record generator description to orm hooked generator.
</title>
    <link>https://github.com/rails/rails/issues/45975</link>
    <guid>https://github.com/rails/rails/issues/45975</guid>
    <description>*   Delegate application record generator description to orm hooked generator.

    *Gannon McGibbon*</description>
    <pubDate>Fri, 09 Sep 2022 16:32:31 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Delegate application record generator description to orm hooked generator.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Show BCC recipients when present in Action Mailer previews.
</title>
    <link>https://github.com/rails/rails/issues/45935</link>
    <guid>https://github.com/rails/rails/issues/45935</guid>
    <description>*   Show BCC recipients when present in Action Mailer previews.

    *Akshay Birajdar*</description>
    <pubDate>Thu, 08 Sep 2022 17:00:26 +0000</pubDate>
    <author>Akshay Birajdar</author>
    <content:encoded><![CDATA[<p>Show BCC recipients when present in Action Mailer previews.</p>

<p><em>Akshay Birajdar</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Extend `routes --grep` to also filter routes by matching against path.
</title>
    <link>https://github.com/rails/rails/issues/45874</link>
    <guid>https://github.com/rails/rails/issues/45874</guid>
    <description>*   Extend `routes --grep` to also filter routes by matching against path.

    Example:

    ```bash
    $ bin/rails routes --grep /cats/1
    Prefix Verb   URI Pattern         Controller#Action
       cat GET    /cats/:id(.:format) cats#show
           PATCH  /cats/:id(.:format) cats#update
           PUT    /cats/:id(.:format) cats#update
           DELETE /cats/:id(.:format) cats#destroy
    ```

    *Orhan Toy*</description>
    <pubDate>Thu, 25 Aug 2022 14:56:20 +0000</pubDate>
    <author>Orhan Toy</author>
    <content:encoded><![CDATA[<p>Extend <code>routes --grep</code> to also filter routes by matching against path.</p>

<p>Example:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bin/rails routes <span class="nt">--grep</span> /cats/1
Prefix Verb   URI Pattern         Controller#Action
   <span class="nb">cat </span>GET    /cats/:id<span class="o">(</span>.:format<span class="o">)</span> cats#show
       PATCH  /cats/:id<span class="o">(</span>.:format<span class="o">)</span> cats#update
       PUT    /cats/:id<span class="o">(</span>.:format<span class="o">)</span> cats#update
       DELETE /cats/:id<span class="o">(</span>.:format<span class="o">)</span> cats#destroy
</code></pre></div></div>

<p><em>Orhan Toy</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Improve `rails runner` output when given a file path that doesn&#39;t exist.
</title>
    <link>https://github.com/rails/rails/issues/45875</link>
    <guid>https://github.com/rails/rails/issues/45875</guid>
    <description>*   Improve `rails runner` output when given a file path that doesn&#39;t exist.

    *Tekin Suleyman*</description>
    <pubDate>Wed, 24 Aug 2022 13:38:43 +0000</pubDate>
    <author>Tekin Süleyman</author>
    <content:encoded><![CDATA[<p>Improve <code>rails runner</code> output when given a file path that doesn’t exist.</p>

<p><em>Tekin Suleyman</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: `config.allow_concurrency = false` now use a `Monitor` instead of a `Mutex`
</title>
    <link>https://github.com/rails/rails/issues/45857</link>
    <guid>https://github.com/rails/rails/issues/45857</guid>
    <description>*   `config.allow_concurrency = false` now use a `Monitor` instead of a `Mutex`

    This allows to enable `config.active_support.executor_around_test_case` even
    when `config.allow_concurrency` is disabled.

    *Jean Boussier*</description>
    <pubDate>Fri, 19 Aug 2022 21:04:15 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>config.allow_concurrency = false</code> now use a <code>Monitor</code> instead of a <code>Mutex</code></p>

<p>This allows to enable <code>config.active_support.executor_around_test_case</code> even<br />
when <code>config.allow_concurrency</code> is disabled.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `routes --unused` option to detect extraneous routes.
</title>
    <link>https://github.com/rails/rails/issues/45701</link>
    <guid>https://github.com/rails/rails/issues/45701</guid>
    <description>*   Add `routes --unused` option to detect extraneous routes.

    Example:

    ```bash
    $ bin/rails routes --unused

    Found 2 unused routes:

    Prefix Verb URI Pattern    Controller#Action
       one GET  /one(.:format) action#one
       two GET  /two(.:format) action#two
    ```

    *Gannon McGibbon*</description>
    <pubDate>Fri, 05 Aug 2022 02:57:09 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Add <code>routes --unused</code> option to detect extraneous routes.</p>

<p>Example:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bin/rails routes <span class="nt">--unused</span>

Found 2 unused routes:

Prefix Verb URI Pattern    Controller#Action
   one GET  /one<span class="o">(</span>.:format<span class="o">)</span> action#one
   two GET  /two<span class="o">(</span>.:format<span class="o">)</span> action#two
</code></pre></div></div>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `--parent` option to controller generator to specify parent class of job.
</title>
    <link>https://github.com/rails/rails/issues/45627</link>
    <guid>https://github.com/rails/rails/issues/45627</guid>
    <description>*   Add `--parent` option to controller generator to specify parent class of job.

    Example:

    `bin/rails g controller admin/users --parent=admin_controller` generates:

    ```ruby
    class Admin::UsersController &lt; AdminController
      # ...
    end
    ```

    *Gannon McGibbon*</description>
    <pubDate>Fri, 22 Jul 2022 19:23:00 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Add <code>--parent</code> option to controller generator to specify parent class of job.</p>

<p>Example:</p>

<p><code>bin/rails g controller admin/users --parent=admin_controller</code> generates:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Admin::UsersController</span> <span class="o">&lt;</span> <span class="no">AdminController</span>
  <span class="c1"># ...</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: In-app custom credentials templates are now supported.  When a credentials
</title>
    <link>https://github.com/rails/rails/issues/45544</link>
    <guid>https://github.com/rails/rails/issues/45544</guid>
    <description>*   In-app custom credentials templates are now supported.  When a credentials
    file does not exist, `rails credentials:edit` will now try to use
    `lib/templates/rails/credentials/credentials.yml.tt` to generate the
    credentials file, before falling back to the default template.

    This allows e.g. an open-source Rails app (which would not include encrypted
    credentials files in its repo) to include a credentials template, so that
    users who install the app will get a custom pre-filled credentials file when
    they run `rails credentials:edit`.

    *Jonathan Hefner*</description>
    <pubDate>Mon, 11 Jul 2022 21:42:48 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>In-app custom credentials templates are now supported.  When a credentials<br />
file does not exist, <code>rails credentials:edit</code> will now try to use<br />
<code>lib/templates/rails/credentials/credentials.yml.tt</code> to generate the<br />
credentials file, before falling back to the default template.</p>

<p>This allows e.g. an open-source Rails app (which would not include encrypted<br />
credentials files in its repo) to include a credentials template, so that<br />
users who install the app will get a custom pre-filled credentials file when<br />
they run <code>rails credentials:edit</code>.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Except for `dev` and `test` environments, newly generated per-environment
</title>
    <link>https://github.com/rails/rails/issues/45574</link>
    <guid>https://github.com/rails/rails/issues/45574</guid>
    <description>*   Except for `dev` and `test` environments, newly generated per-environment
    credentials files (e.g. `config/credentials/production.yml.enc`) now include
    a `secret_key_base` for convenience, just as `config/credentials.yml.enc`
    does.

    *Jonathan Hefner*</description>
    <pubDate>Tue, 19 Jul 2022 16:48:12 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Except for <code>dev</code> and <code>test</code> environments, newly generated per-environment<br />
credentials files (e.g. <code>config/credentials/production.yml.enc</code>) now include<br />
a <code>secret_key_base</code> for convenience, just as <code>config/credentials.yml.enc</code><br />
does.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: `--no-*` options now work with the app generator&#39;s `--minimal` option, and
</title>
    <link>https://github.com/rails/rails/issues/45520</link>
    <guid>https://github.com/rails/rails/issues/45520</guid>
    <description>*   `--no-*` options now work with the app generator&#39;s `--minimal` option, and
    are both comprehensive and precise.  For example:

    ```bash
    $ rails new my_cool_app --minimal
    Based on the specified options, the following options will also be activated:

      --skip-active-job [due to --minimal]
      --skip-action-mailer [due to --skip-active-job, --minimal]
      --skip-active-storage [due to --skip-active-job, --minimal]
      --skip-action-mailbox [due to --skip-active-storage, --minimal]
      --skip-action-text [due to --skip-active-storage, --minimal]
      --skip-javascript [due to --minimal]
      --skip-hotwire [due to --skip-javascript, --minimal]
      --skip-action-cable [due to --minimal]
      --skip-bootsnap [due to --minimal]
      --skip-dev-gems [due to --minimal]
      --skip-system-test [due to --minimal]

    ...

    $ rails new my_cool_app --minimal --no-skip-active-storage
    Based on the specified options, the following options will also be activated:

      --skip-action-mailer [due to --minimal]
      --skip-action-mailbox [due to --minimal]
      --skip-action-text [due to --minimal]
      --skip-javascript [due to --minimal]
      --skip-hotwire [due to --skip-javascript, --minimal]
      --skip-action-cable [due to --minimal]
      --skip-bootsnap [due to --minimal]
      --skip-dev-gems [due to --minimal]
      --skip-system-test [due to --minimal]

    ...
    ```

    *Brad Trick* and *Jonathan Hefner*</description>
    <pubDate>Wed, 06 Jul 2022 16:26:21 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>--no-*</code> options now work with the app generator’s <code>--minimal</code> option, and<br />
are both comprehensive and precise.  For example:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rails new my_cool_app <span class="nt">--minimal</span>
Based on the specified options, the following options will also be activated:

  <span class="nt">--skip-active-job</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-action-mailer</span> <span class="o">[</span>due to <span class="nt">--skip-active-job</span>, <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-active-storage</span> <span class="o">[</span>due to <span class="nt">--skip-active-job</span>, <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-action-mailbox</span> <span class="o">[</span>due to <span class="nt">--skip-active-storage</span>, <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-action-text</span> <span class="o">[</span>due to <span class="nt">--skip-active-storage</span>, <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-javascript</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-hotwire</span> <span class="o">[</span>due to <span class="nt">--skip-javascript</span>, <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-action-cable</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-bootsnap</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-dev-gems</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-system-test</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>

...

<span class="nv">$ </span>rails new my_cool_app <span class="nt">--minimal</span> <span class="nt">--no-skip-active-storage</span>
Based on the specified options, the following options will also be activated:

  <span class="nt">--skip-action-mailer</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-action-mailbox</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-action-text</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-javascript</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-hotwire</span> <span class="o">[</span>due to <span class="nt">--skip-javascript</span>, <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-action-cable</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-bootsnap</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-dev-gems</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>
  <span class="nt">--skip-system-test</span> <span class="o">[</span>due to <span class="nt">--minimal</span><span class="o">]</span>

...
</code></pre></div></div>

<p><em>Brad Trick</em> and <em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `--skip-dev-gems` option to app generator to skip adding development
</title>
    <link>https://github.com/rails/rails/issues/45402</link>
    <guid>https://github.com/rails/rails/issues/45402</guid>
    <description>*   Add `--skip-dev-gems` option to app generator to skip adding development
    gems (like `web-console`) to the Gemfile.

    *Brad Trick*</description>
    <pubDate>Mon, 20 Jun 2022 19:20:28 +0000</pubDate>
    <author>Brad Trick</author>
    <content:encoded><![CDATA[<p>Add <code>--skip-dev-gems</code> option to app generator to skip adding development<br />
gems (like <code>web-console</code>) to the Gemfile.</p>

<p><em>Brad Trick</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Skip Active Storage and Action Mailer if Active Job is skipped.
</title>
    <link>https://github.com/rails/rails/issues/45354</link>
    <guid>https://github.com/rails/rails/issues/45354</guid>
    <description>*   Skip Active Storage and Action Mailer if Active Job is skipped.

    *Étienne Barrié*</description>
    <pubDate>Tue, 14 Jun 2022 17:53:01 +0000</pubDate>
    <author>Étienne Barrié</author>
    <content:encoded><![CDATA[<p>Skip Active Storage and Action Mailer if Active Job is skipped.</p>

<p><em>Étienne Barrié</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Correctly check if frameworks are disabled when running app:update.
</title>
    <link>https://github.com/rails/rails/issues/45351</link>
    <guid>https://github.com/rails/rails/issues/45351</guid>
    <description>*   Correctly check if frameworks are disabled when running app:update.

    *Étienne Barrié* and *Paulo Barros*</description>
    <pubDate>Tue, 14 Jun 2022 13:49:09 +0000</pubDate>
    <author>Étienne Barrié</author>
    <content:encoded><![CDATA[<p>Correctly check if frameworks are disabled when running app:update.</p>

<p><em>Étienne Barrié</em> and <em>Paulo Barros</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Delegate model generator description to orm hooked generator.
</title>
    <link>https://github.com/rails/rails/issues/45315</link>
    <guid>https://github.com/rails/rails/issues/45315</guid>
    <description>*   Delegate model generator description to orm hooked generator.

    *Gannon McGibbon*</description>
    <pubDate>Mon, 13 Jun 2022 16:49:29 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Delegate model generator description to orm hooked generator.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Execute `rails runner` scripts inside the executor.
</title>
    <link>https://github.com/rails/rails/issues/44999</link>
    <guid>https://github.com/rails/rails/issues/44999</guid>
    <description>*   Execute `rails runner` scripts inside the executor.

    Enables error reporting, query cache, etc.

    *Jean Boussier*</description>
    <pubDate>Fri, 10 Jun 2022 12:35:02 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Execute <code>rails runner</code> scripts inside the executor.</p>

<p>Enables error reporting, query cache, etc.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Avoid booting in development then test for test tasks.
</title>
    <link>https://github.com/rails/rails/issues/44106</link>
    <guid>https://github.com/rails/rails/issues/44106</guid>
    <description>*   Avoid booting in development then test for test tasks.

    Running one of the rails test subtasks (e.g. test:system, test:models) would
    go through Rake and cause the app to be booted twice. Now all the test:*
    subtasks are defined as Thor tasks and directly load the test environment.

    *Étienne Barrié*</description>
    <pubDate>Wed, 01 Jun 2022 11:32:10 +0000</pubDate>
    <author>Étienne Barrié</author>
    <content:encoded><![CDATA[<p>Avoid booting in development then test for test tasks.</p>

<p>Running one of the rails test subtasks (e.g. test:system, test:models) would<br />
go through Rake and cause the app to be booted twice. Now all the test:*<br />
subtasks are defined as Thor tasks and directly load the test environment.</p>

<p><em>Étienne Barrié</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Deprecate `Rails::Generators::Testing::Behaviour` in favor of `Rails::Generators::Testing::Behavior`.
</title>
    <link>https://github.com/rails/rails/issues/45180</link>
    <guid>https://github.com/rails/rails/issues/45180</guid>
    <description>*   Deprecate `Rails::Generators::Testing::Behaviour` in favor of `Rails::Generators::Testing::Behavior`.

    *Gannon McGibbon*</description>
    <pubDate>Fri, 27 May 2022 13:06:54 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Deprecate <code>Rails::Generators::Testing::Behaviour</code> in favor of <code>Rails::Generators::Testing::Behavior</code>.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Allow configuration of logger size for local and test environments
</title>
    <link>https://github.com/rails/rails/issues/44888</link>
    <guid>https://github.com/rails/rails/issues/44888</guid>
    <description>*   Allow configuration of logger size for local and test environments

    `config.log_file_size`

    Defaults to `100` megabytes.

    *Bernie Chiu*</description>
    <pubDate>Fri, 20 May 2022 18:52:05 +0000</pubDate>
    <author>Bernie Chiu</author>
    <content:encoded><![CDATA[<p>Allow configuration of logger size for local and test environments</p>

<p><code>config.log_file_size</code></p>

<p>Defaults to <code>100</code> megabytes.</p>

<p><em>Bernie Chiu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Enroll new apps in decrypted diffs of credentials by default.  This behavior
</title>
    <link>https://github.com/rails/rails/issues/39686</link>
    <guid>https://github.com/rails/rails/issues/39686</guid>
    <description>*   Enroll new apps in decrypted diffs of credentials by default.  This behavior
    can be opted out of with the app generator&#39;s `--skip-decrypted-diffs` flag.

    *Jonathan Hefner*</description>
    <pubDate>Thu, 19 May 2022 20:55:19 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Enroll new apps in decrypted diffs of credentials by default.  This behavior<br />
can be opted out of with the app generator’s <code>--skip-decrypted-diffs</code> flag.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Support declarative-style test name filters with `bin/rails test`.
</title>
    <link>https://github.com/rails/rails/issues/44290</link>
    <guid>https://github.com/rails/rails/issues/44290</guid>
    <description>*   Support declarative-style test name filters with `bin/rails test`.

    This makes it possible to run a declarative-style test such as:

    ```ruby
    class MyTest &lt; ActiveSupport::TestCase
      test &quot;does something&quot; do
        # ...
      end
    end
    ```

    Using its declared name:

    ```bash
    $ bin/rails test test/my_test.rb -n &quot;does something&quot;
    ```

    Instead of having to specify its expanded method name:

    ```bash
    $ bin/rails test test/my_test.rb -n test_does_something
    ```

    *Jonathan Hefner*</description>
    <pubDate>Thu, 19 May 2022 14:55:52 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Support declarative-style test name filters with <code>bin/rails test</code>.</p>

<p>This makes it possible to run a declarative-style test such as:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MyTest</span> <span class="o">&lt;</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="nb">test</span> <span class="s2">"does something"</span> <span class="k">do</span>
    <span class="c1"># ...</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Using its declared name:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bin/rails <span class="nb">test test</span>/my_test.rb <span class="nt">-n</span> <span class="s2">"does something"</span>
</code></pre></div></div>

<p>Instead of having to specify its expanded method name:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>bin/rails <span class="nb">test test</span>/my_test.rb <span class="nt">-n</span> test_does_something
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add `--js` and `--skip-javascript` options to `rails new`
</title>
    <link>https://github.com/rails/rails/issues/43754</link>
    <guid>https://github.com/rails/rails/issues/43754</guid>
    <description>*   Add `--js` and `--skip-javascript` options to `rails new`

    `--js` alias to `rails new --javascript ...`

    Same as `-j`, e.g. `rails new --js esbuild ...`

    `--skip-js` alias to `rails new --skip-javascript ...`

    Same as `-J`, e.g. `rails new --skip-js ...`

    *Dorian Marié*</description>
    <pubDate>Fri, 13 May 2022 21:11:44 +0000</pubDate>
    <author>Dorian Marié</author>
    <content:encoded><![CDATA[<p>Add <code>--js</code> and <code>--skip-javascript</code> options to <code>rails new</code></p>

<p><code>--js</code> alias to <code>rails new --javascript ...</code></p>

<p>Same as <code>-j</code>, e.g. <code>rails new --js esbuild ...</code></p>

<p><code>--skip-js</code> alias to <code>rails new --skip-javascript ...</code></p>

<p>Same as <code>-J</code>, e.g. <code>rails new --skip-js ...</code></p>

<p><em>Dorian Marié</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Allow relative paths with leading dot slash to be passed to `rails test`.
</title>
    <link>https://github.com/rails/rails/issues/45085</link>
    <guid>https://github.com/rails/rails/issues/45085</guid>
    <description>*   Allow relative paths with leading dot slash to be passed to `rails test`.

    Fix `rails test ./test/model/post_test.rb` to run a single test file.

    *Shouichi Kamiya* and *oljfte*</description>
    <pubDate>Fri, 13 May 2022 11:02:44 +0000</pubDate>
    <author>Shouichi Kamiya</author>
    <content:encoded><![CDATA[<p>Allow relative paths with leading dot slash to be passed to <code>rails test</code>.</p>

<p>Fix <code>rails test ./test/model/post_test.rb</code> to run a single test file.</p>

<p><em>Shouichi Kamiya</em> and <em>oljfte</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Deprecate `config.enable_dependency_loading`. This flag addressed a limitation of the `classic` autoloader and has no effect nowadays. To fix this deprecation, please just delete the reference.
</title>
    <link>https://github.com/rails/rails/issues/44900</link>
    <guid>https://github.com/rails/rails/issues/44900</guid>
    <description>*   Deprecate `config.enable_dependency_loading`. This flag addressed a limitation of the `classic` autoloader and has no effect nowadays. To fix this deprecation, please just delete the reference.

    *Xavier Noria*</description>
    <pubDate>Thu, 14 Apr 2022 23:33:14 +0000</pubDate>
    <author>Xavier Noria</author>
    <content:encoded><![CDATA[<p>Deprecate <code>config.enable_dependency_loading</code>. This flag addressed a limitation of the <code>classic</code> autoloader and has no effect nowadays. To fix this deprecation, please just delete the reference.</p>

<p><em>Xavier Noria</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Define `config.enable_reloading` to be `!config.cache_classes` for a more intuitive name. While `config.enable_reloading` and `config.reloading_enabled?` are preferred from now on, `config.cache_classes` is supported for backwards compatibility.
</title>
    <link>https://github.com/rails/rails/issues/44870</link>
    <guid>https://github.com/rails/rails/issues/44870</guid>
    <description>*   Define `config.enable_reloading` to be `!config.cache_classes` for a more intuitive name. While `config.enable_reloading` and `config.reloading_enabled?` are preferred from now on, `config.cache_classes` is supported for backwards compatibility.

    *Xavier Noria*</description>
    <pubDate>Thu, 14 Apr 2022 16:36:48 +0000</pubDate>
    <author>Xavier Noria</author>
    <content:encoded><![CDATA[<p>Define <code>config.enable_reloading</code> to be <code>!config.cache_classes</code> for a more intuitive name. While <code>config.enable_reloading</code> and <code>config.reloading_enabled?</code> are preferred from now on, <code>config.cache_classes</code> is supported for backwards compatibility.</p>

<p><em>Xavier Noria</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add JavaScript dependencies installation on bin/setup
</title>
    <link>https://github.com/rails/rails/issues/44717</link>
    <guid>https://github.com/rails/rails/issues/44717</guid>
    <description>*   Add JavaScript dependencies installation on bin/setup

    Add  `yarn install` to bin/setup when using esbuild, webpack, or rollout.

    *Carlos Ribeiro*</description>
    <pubDate>Mon, 28 Mar 2022 19:34:17 +0000</pubDate>
    <author>Cadu Ribeiro</author>
    <content:encoded><![CDATA[<p>Add JavaScript dependencies installation on bin/setup</p>

<p>Add  <code>yarn install</code> to bin/setup when using esbuild, webpack, or rollout.</p>

<p><em>Carlos Ribeiro</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Use `controller_class_path` in `Rails::Generators::NamedBase#route_url`
</title>
    <link>https://github.com/rails/rails/issues/44670</link>
    <guid>https://github.com/rails/rails/issues/44670</guid>
    <description>*   Use `controller_class_path` in `Rails::Generators::NamedBase#route_url`

    The `route_url` method now returns the correct path when generating
    a namespaced controller with a top-level model using `--model-name`.

    Previously, when running this command:

    ``` sh
    bin/rails generate scaffold_controller Admin/Post --model-name Post
    ```

    the comments above the controller action would look like:

    ``` ruby
    # GET /posts
    def index
      @posts = Post.all
    end
    ```

    afterwards, they now look like this:

    ``` ruby
    # GET /admin/posts
    def index
      @posts = Post.all
    end
    ```

    Fixes #44662.

    *Andrew White*</description>
    <pubDate>Mon, 14 Mar 2022 16:40:51 +0000</pubDate>
    <author>Andrew White</author>
    <content:encoded><![CDATA[<p>Use <code>controller_class_path</code> in <code>Rails::Generators::NamedBase#route_url</code></p>

<p>The <code>route_url</code> method now returns the correct path when generating<br />
a namespaced controller with a top-level model using <code>--model-name</code>.</p>

<p>Previously, when running this command:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bin/rails generate scaffold_controller Admin/Post <span class="nt">--model-name</span> Post
</code></pre></div></div>

<p>the comments above the controller action would look like:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># GET /posts</span>
<span class="k">def</span> <span class="nf">index</span>
  <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span><span class="p">.</span><span class="nf">all</span>
<span class="k">end</span>
</code></pre></div></div>

<p>afterwards, they now look like this:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># GET /admin/posts</span>
<span class="k">def</span> <span class="nf">index</span>
  <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span><span class="p">.</span><span class="nf">all</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Fixes #44662.</p>

<p><em>Andrew White</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: No longer add autoloaded paths to `$LOAD_PATH`.
</title>
    <link>https://github.com/rails/rails/issues/44133</link>
    <guid>https://github.com/rails/rails/issues/44133</guid>
    <description>*   No longer add autoloaded paths to `$LOAD_PATH`.

    This means it won&#39;t be possible to load them with a manual `require` call, the class or module can be referenced instead.

    Reducing the size of `$LOAD_PATH` speed-up `require` calls for apps not using `bootsnap`, and reduce the
    size of the `bootsnap` cache for the others.

    *Jean Boussier*</description>
    <pubDate>Tue, 11 Jan 2022 11:12:08 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>No longer add autoloaded paths to <code>$LOAD_PATH</code>.</p>

<p>This means it won’t be possible to load them with a manual <code>require</code> call, the class or module can be referenced instead.</p>

<p>Reducing the size of <code>$LOAD_PATH</code> speed-up <code>require</code> calls for apps not using <code>bootsnap</code>, and reduce the<br />
size of the <code>bootsnap</code> cache for the others.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Remove default `X-Download-Options` header
</title>
    <link>https://github.com/rails/rails/issues/43968</link>
    <guid>https://github.com/rails/rails/issues/43968</guid>
    <description>*   Remove default `X-Download-Options` header

    This header is currently only used by Internet Explorer which
    will be discontinued in 2022 and since Rails 7 does not fully
    support Internet Explorer this header should not be a default one.

    *Harun Sabljaković*</description>
    <pubDate>Thu, 06 Jan 2022 15:39:14 +0000</pubDate>
    <author>Harun Sabljaković</author>
    <content:encoded><![CDATA[<p>Remove default <code>X-Download-Options</code> header</p>

<p>This header is currently only used by Internet Explorer which<br />
will be discontinued in 2022 and since Rails 7 does not fully<br />
support Internet Explorer this header should not be a default one.</p>

<p><em>Harun Sabljaković</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>railties: Add .node-version files for Rails apps that use Node.js
</title>
    <link>https://github.com/rails/rails/issues/46794</link>
    <guid>https://github.com/rails/rails/issues/46794</guid>
    <description>*   Add .node-version files for Rails apps that use Node.js

    Node version managers that make use of this file:
      https://github.com/shadowspawn/node-version-usage#node-version-file-usage

    The generated Dockerfile will use the same node version.

    *Sam Ruby*</description>
    <pubDate>Mon, 09 Jan 2023 16:43:33 +0000</pubDate>
    <author>Sam Ruby</author>
    <content:encoded><![CDATA[<p>Add .node-version files for Rails apps that use Node.js</p>

<p>Node version managers that make use of this file:<br />
  https://github.com/shadowspawn/node-version-usage#node-version-file-usage</p>

<p>The generated Dockerfile will use the same node version.</p>

<p><em>Sam Ruby</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailbox: Added `bounce_now_with` to send the bounce email without going through a mailer queue.
</title>
    <link>https://github.com/rails/rails/issues/48446</link>
    <guid>https://github.com/rails/rails/issues/48446</guid>
    <description>*   Added `bounce_now_with` to send the bounce email without going through a mailer queue.

    *Ronan Limon Duparcmeur*</description>
    <pubDate>Wed, 28 Jun 2023 21:39:55 +0000</pubDate>
    <author>Ronan Limon Duparcmeur</author>
    <content:encoded><![CDATA[<p>Added <code>bounce_now_with</code> to send the bounce email without going through a mailer queue.</p>

<p><em>Ronan Limon Duparcmeur</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailbox: Support configured primary key types in generated migrations.
</title>
    <link>https://github.com/rails/rails/issues/48126</link>
    <guid>https://github.com/rails/rails/issues/48126</guid>
    <description>*   Support configured primary key types in generated migrations.

    *Nishiki Liu*</description>
    <pubDate>Thu, 04 May 2023 15:46:29 +0000</pubDate>
    <author>Nishiki Liu</author>
    <content:encoded><![CDATA[<p>Support configured primary key types in generated migrations.</p>

<p><em>Nishiki Liu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailbox: Fixed ingress controllers&#39; ability to accept emails that contain no UTF-8 encoded parts.
</title>
    <link>https://github.com/rails/rails/issues/46300</link>
    <guid>https://github.com/rails/rails/issues/46300</guid>
    <description>*   Fixed ingress controllers&#39; ability to accept emails that contain no UTF-8 encoded parts.

    Fixes #46297.

    *Jan Honza Sterba*</description>
    <pubDate>Sun, 22 Jan 2023 13:53:59 +0000</pubDate>
    <author>Petrik de Heus</author>
    <content:encoded><![CDATA[<p>Fixed ingress controllers’ ability to accept emails that contain no UTF-8 encoded parts.</p>

<p>Fixes #46297.</p>

<p><em>Jan Honza Sterba</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionmailbox: Add X-Forwarded-To addresses to recipients.
</title>
    <link>https://github.com/rails/rails/issues/46552</link>
    <guid>https://github.com/rails/rails/issues/46552</guid>
    <description>*   Add X-Forwarded-To addresses to recipients.

    *Andrew Stewart*</description>
    <pubDate>Tue, 22 Nov 2022 23:56:45 +0000</pubDate>
    <author>Andy Stewart</author>
    <content:encoded><![CDATA[<p>Add X-Forwarded-To addresses to recipients.</p>

<p><em>Andrew Stewart</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Don&#39;t double-encode nested `field_id` and `field_name` index values
</title>
    <link>https://github.com/rails/rails/issues/47436</link>
    <guid>https://github.com/rails/rails/issues/47436</guid>
    <description>*   Don&#39;t double-encode nested `field_id` and `field_name` index values

    Pass `index: @options` as a default keyword argument to `field_id` and
    `field_name` view helper methods.

    *Sean Doyle*</description>
    <pubDate>Sun, 02 Jul 2023 21:34:24 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Don’t double-encode nested <code>field_id</code> and <code>field_name</code> index values</p>

<p>Pass <code>index: @options</code> as a default keyword argument to <code>field_id</code> and<br />
<code>field_name</code> view helper methods.</p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Allow opting in/out of `Link preload` headers when calling `stylesheet_link_tag` or `javascript_include_tag`
</title>
    <link>https://github.com/rails/rails/issues/48553</link>
    <guid>https://github.com/rails/rails/issues/48553</guid>
    <description>*   Allow opting in/out of `Link preload` headers when calling `stylesheet_link_tag` or `javascript_include_tag`

    ```ruby
    # will exclude header, even if setting is enabled:
    javascript_include_tag(&quot;http://example.com/all.js&quot;, preload_links_header: false)

    # will include header, even if setting is disabled:
    stylesheet_link_tag(&quot;http://example.com/all.js&quot;, preload_links_header: true)
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Fri, 30 Jun 2023 20:40:03 +0000</pubDate>
    <author>Alex</author>
    <content:encoded><![CDATA[<p>Allow opting in/out of <code>Link preload</code> headers when calling <code>stylesheet_link_tag</code> or <code>javascript_include_tag</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># will exclude header, even if setting is enabled:</span>
<span class="n">javascript_include_tag</span><span class="p">(</span><span class="s2">"http://example.com/all.js"</span><span class="p">,</span> <span class="ss">preload_links_header: </span><span class="kp">false</span><span class="p">)</span>

<span class="c1"># will include header, even if setting is disabled:</span>
<span class="n">stylesheet_link_tag</span><span class="p">(</span><span class="s2">"http://example.com/all.js"</span><span class="p">,</span> <span class="ss">preload_links_header: </span><span class="kp">true</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Stop generating `Link preload` headers once it has reached 1KB.
</title>
    <link>https://github.com/rails/rails/issues/48405</link>
    <guid>https://github.com/rails/rails/issues/48405</guid>
    <description>*   Stop generating `Link preload` headers once it has reached 1KB.

    Some proxies have trouble handling large headers, but more importantly preload links
    have diminishing returns so it&#39;s preferable not to go overboard with them.

    If tighter control is needed, it&#39;s recommended to disable automatic generation of preloads
    and to generate them manually from the controller or from a middleware.

    *Jean Boussier*</description>
    <pubDate>Wed, 07 Jun 2023 09:19:35 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Stop generating <code>Link preload</code> headers once it has reached 1KB.</p>

<p>Some proxies have trouble handling large headers, but more importantly preload links<br />
have diminishing returns so it’s preferable not to go overboard with them.</p>

<p>If tighter control is needed, it’s recommended to disable automatic generation of preloads<br />
and to generate them manually from the controller or from a middleware.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: `simple_format` helper now handles a `:sanitize_options` - any extra options you want appending to the sanitize.
</title>
    <link>https://github.com/rails/rails/issues/48355</link>
    <guid>https://github.com/rails/rails/issues/48355</guid>
    <description>*   `simple_format` helper now handles a `:sanitize_options` - any extra options you want appending to the sanitize.

    Before:
    ```ruby
      simple_format(&quot;&lt;a target=\&quot;_blank\&quot; href=\&quot;http://example.com\&quot;&gt;Continue&lt;/a&gt;&quot;)
      # =&gt; &quot;&lt;p&gt;&lt;a href=\&quot;http://example.com\&quot;&gt;Continue&lt;/a&gt;&lt;/p&gt;&quot;
    ```

    After:
    ```ruby
      simple_format(&quot;&lt;a target=\&quot;_blank\&quot; href=\&quot;http://example.com\&quot;&gt;Continue&lt;/a&gt;&quot;, {}, { sanitize_options: { attributes: %w[target href] } })
      # =&gt; &quot;&lt;p&gt;&lt;a target=\&quot;_blank\&quot; href=\&quot;http://example.com\&quot;&gt;Continue&lt;/a&gt;&lt;/p&gt;&quot;
    ```

    *Andrei Andriichuk*</description>
    <pubDate>Thu, 01 Jun 2023 00:04:41 +0000</pubDate>
    <author>Andriichuk</author>
    <content:encoded><![CDATA[<p><code>simple_format</code> helper now handles a <code>:sanitize_options</code> - any extra options you want appending to the sanitize.</p>

<p>Before:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">simple_format</span><span class="p">(</span><span class="s2">"&lt;a target=</span><span class="se">\"</span><span class="s2">_blank</span><span class="se">\"</span><span class="s2"> href=</span><span class="se">\"</span><span class="s2">http://example.com</span><span class="se">\"</span><span class="s2">&gt;Continue&lt;/a&gt;"</span><span class="p">)</span>
  <span class="c1"># =&gt; "&lt;p&gt;&lt;a href=\"http://example.com\"&gt;Continue&lt;/a&gt;&lt;/p&gt;"</span>
</code></pre></div></div>

<p>After:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">simple_format</span><span class="p">(</span><span class="s2">"&lt;a target=</span><span class="se">\"</span><span class="s2">_blank</span><span class="se">\"</span><span class="s2"> href=</span><span class="se">\"</span><span class="s2">http://example.com</span><span class="se">\"</span><span class="s2">&gt;Continue&lt;/a&gt;"</span><span class="p">,</span> <span class="p">{},</span> <span class="p">{</span> <span class="ss">sanitize_options: </span><span class="p">{</span> <span class="ss">attributes: </span><span class="sx">%w[target href]</span> <span class="p">}</span> <span class="p">})</span>
  <span class="c1"># =&gt; "&lt;p&gt;&lt;a target=\"_blank\" href=\"http://example.com\"&gt;Continue&lt;/a&gt;&lt;/p&gt;"</span>
</code></pre></div></div>

<p><em>Andrei Andriichuk</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Add support for HTML5 standards-compliant sanitizers, and default to `Rails::HTML5::Sanitizer`
</title>
    <link>https://github.com/rails/rails/issues/48293</link>
    <guid>https://github.com/rails/rails/issues/48293</guid>
    <description>*   Add support for HTML5 standards-compliant sanitizers, and default to `Rails::HTML5::Sanitizer`
    in the Rails 7.1 configuration if it is supported.

    Action View&#39;s HTML sanitizers can be configured by setting
    `config.action_view.sanitizer_vendor`. Supported values are `Rails::HTML4::Sanitizer` or
    `Rails::HTML5::Sanitizer`.

    The Rails 7.1 configuration will set this to `Rails::HTML5::Sanitizer` when it is supported, and
    fall back to `Rails::HTML4::Sanitizer`. Previous configurations default to
    `Rails::HTML4::Sanitizer`.

    *Mike Dalessio*</description>
    <pubDate>Tue, 30 May 2023 20:00:13 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>Add support for HTML5 standards-compliant sanitizers, and default to <code>Rails::HTML5::Sanitizer</code><br />
in the Rails 7.1 configuration if it is supported.</p>

<p>Action View’s HTML sanitizers can be configured by setting<br />
<code>config.action_view.sanitizer_vendor</code>. Supported values are <code>Rails::HTML4::Sanitizer</code> or<br />
<code>Rails::HTML5::Sanitizer</code>.</p>

<p>The Rails 7.1 configuration will set this to <code>Rails::HTML5::Sanitizer</code> when it is supported, and<br />
fall back to <code>Rails::HTML4::Sanitizer</code>. Previous configurations default to<br />
<code>Rails::HTML4::Sanitizer</code>.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: `config.dom_testing_default_html_version` controls the HTML parser used by
</title>
    <link>https://github.com/rails/rails/issues/48682</link>
    <guid>https://github.com/rails/rails/issues/48682</guid>
    <description>*   `config.dom_testing_default_html_version` controls the HTML parser used by
    `ActionView::TestCase#document_root_element`, which creates the DOM used by the assertions in
    Rails::Dom::Testing.

    The Rails 7.1 default configuration opts into the HTML5 parser when it is supported, to better
    represent what the DOM would be in a browser user agent. Previously this test helper always used
    Nokogiri&#39;s HTML4 parser.

    *Mike Dalessio*</description>
    <pubDate>Thu, 03 Aug 2023 17:47:58 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p><code>config.dom_testing_default_html_version</code> controls the HTML parser used by<br />
<code>ActionView::TestCase#document_root_element</code>, which creates the DOM used by the assertions in<br />
Rails::Dom::Testing.</p>

<p>The Rails 7.1 default configuration opts into the HTML5 parser when it is supported, to better<br />
represent what the DOM would be in a browser user agent. Previously this test helper always used<br />
Nokogiri’s HTML4 parser.</p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Add support for the HTML picture tag. It supports passing a String, an Array or a Block.
</title>
    <link>https://github.com/rails/rails/issues/48100</link>
    <guid>https://github.com/rails/rails/issues/48100</guid>
    <description>*   Add support for the HTML picture tag. It supports passing a String, an Array or a Block.
    Supports passing properties directly to the img tag via the `:image` key.
    Since the picture tag requires an img tag, the last element you provide will be used for the img tag.
    For complete control over the picture tag, a block can be passed, which will populate the contents of the tag accordingly.

    Can be used like this for a single source:
    ```erb
    &lt;%= picture_tag(&quot;picture.webp&quot;) %&gt;
    ```
    which will generate the following:
    ```html
    &lt;picture&gt;
        &lt;img src=&quot;/images/picture.webp&quot; /&gt;
    &lt;/picture&gt;
    ```

    For multiple sources:
    ```erb
    &lt;%= picture_tag(&quot;picture.webp&quot;, &quot;picture.png&quot;, :class =&gt; &quot;mt-2&quot;, :image =&gt; { alt: &quot;Image&quot;, class: &quot;responsive-img&quot; }) %&gt;
    ```
    will generate:
    ```html
    &lt;picture class=&quot;mt-2&quot;&gt;
        &lt;source srcset=&quot;/images/picture.webp&quot; /&gt;
        &lt;source srcset=&quot;/images/picture.png&quot; /&gt;
        &lt;img alt=&quot;Image&quot; class=&quot;responsive-img&quot; src=&quot;/images/picture.png&quot; /&gt;
    &lt;/picture&gt;
    ```

    Full control via a block:
    ```erb
    &lt;%= picture_tag(:class =&gt; &quot;my-class&quot;) do %&gt;
        &lt;%= tag(:source, :srcset =&gt; image_path(&quot;picture.webp&quot;)) %&gt;
        &lt;%= tag(:source, :srcset =&gt; image_path(&quot;picture.png&quot;)) %&gt;
        &lt;%= image_tag(&quot;picture.png&quot;, :alt =&gt; &quot;Image&quot;) %&gt;
    &lt;% end %&gt;
    ```
    will generate:
    ```html
    &lt;picture class=&quot;my-class&quot;&gt;
        &lt;source srcset=&quot;/images/picture.webp&quot; /&gt;
        &lt;source srcset=&quot;/images/picture.png&quot; /&gt;
        &lt;img alt=&quot;Image&quot; src=&quot;/images/picture.png&quot; /&gt;
    &lt;/picture&gt;
    ```

    *Juan Pablo Balarini*</description>
    <pubDate>Fri, 12 May 2023 02:27:35 +0000</pubDate>
    <author>Juan Pablo Balarini</author>
    <content:encoded><![CDATA[<p>Add support for the HTML picture tag. It supports passing a String, an Array or a Block.<br />
Supports passing properties directly to the img tag via the <code>:image</code> key.<br />
Since the picture tag requires an img tag, the last element you provide will be used for the img tag.<br />
For complete control over the picture tag, a block can be passed, which will populate the contents of the tag accordingly.</p>

<p>Can be used like this for a single source:</p>
<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="n">picture_tag</span><span class="p">(</span><span class="s2">"picture.webp"</span><span class="p">)</span> <span class="cp">%&gt;</span>
</code></pre></div></div>
<p>which will generate the following:</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;picture&gt;</span>
    <span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"/images/picture.webp"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/picture&gt;</span>
</code></pre></div></div>

<p>For multiple sources:</p>
<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="n">picture_tag</span><span class="p">(</span><span class="s2">"picture.webp"</span><span class="p">,</span> <span class="s2">"picture.png"</span><span class="p">,</span> <span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"mt-2"</span><span class="p">,</span> <span class="ss">:image</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">alt: </span><span class="s2">"Image"</span><span class="p">,</span> <span class="ss">class: </span><span class="s2">"responsive-img"</span> <span class="p">})</span> <span class="cp">%&gt;</span>
</code></pre></div></div>
<p>will generate:</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;picture</span> <span class="na">class=</span><span class="s">"mt-2"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;source</span> <span class="na">srcset=</span><span class="s">"/images/picture.webp"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;source</span> <span class="na">srcset=</span><span class="s">"/images/picture.png"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;img</span> <span class="na">alt=</span><span class="s">"Image"</span> <span class="na">class=</span><span class="s">"responsive-img"</span> <span class="na">src=</span><span class="s">"/images/picture.png"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/picture&gt;</span>
</code></pre></div></div>

<p>Full control via a block:</p>
<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="n">picture_tag</span><span class="p">(</span><span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">"my-class"</span><span class="p">)</span> <span class="k">do</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">tag</span><span class="p">(</span><span class="ss">:source</span><span class="p">,</span> <span class="ss">:srcset</span> <span class="o">=&gt;</span> <span class="n">image_path</span><span class="p">(</span><span class="s2">"picture.webp"</span><span class="p">))</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">tag</span><span class="p">(</span><span class="ss">:source</span><span class="p">,</span> <span class="ss">:srcset</span> <span class="o">=&gt;</span> <span class="n">image_path</span><span class="p">(</span><span class="s2">"picture.png"</span><span class="p">))</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">image_tag</span><span class="p">(</span><span class="s2">"picture.png"</span><span class="p">,</span> <span class="ss">:alt</span> <span class="o">=&gt;</span> <span class="s2">"Image"</span><span class="p">)</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre></div></div>
<p>will generate:</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;picture</span> <span class="na">class=</span><span class="s">"my-class"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;source</span> <span class="na">srcset=</span><span class="s">"/images/picture.webp"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;source</span> <span class="na">srcset=</span><span class="s">"/images/picture.png"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;img</span> <span class="na">alt=</span><span class="s">"Image"</span> <span class="na">src=</span><span class="s">"/images/picture.png"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/picture&gt;</span>
</code></pre></div></div>

<p><em>Juan Pablo Balarini</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Remove deprecated support to passing instance variables as locals to partials.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated support to passing instance variables as locals to partials.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated support to passing instance variables as locals to partials.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Remove deprecated constant `ActionView::Path`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated constant `ActionView::Path`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated constant <code>ActionView::Path</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Guard `token_list` calls from escaping HTML too often
</title>
    <link>https://github.com/rails/rails/issues/47318</link>
    <guid>https://github.com/rails/rails/issues/47318</guid>
    <description>*   Guard `token_list` calls from escaping HTML too often

    *Sean Doyle*</description>
    <pubDate>Wed, 08 Feb 2023 19:11:47 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Guard <code>token_list</code> calls from escaping HTML too often</p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: `select` can now be called with a single hash containing options and some HTML options
</title>
    <link>https://github.com/rails/rails/issues/46629</link>
    <guid>https://github.com/rails/rails/issues/46629</guid>
    <description>*   `select` can now be called with a single hash containing options and some HTML options

    Previously this would not work as expected:

    ```erb
    &lt;%= select :post, :author, authors, required: true %&gt;
    ```

    Instead you needed to do this:

    ```erb
    &lt;%= select :post, :author, authors, {}, required: true %&gt;
    ```

    Now, either form is accepted, for the following HTML attributes: `required`, `multiple`, `size`.

    *Alex Ghiculescu*</description>
    <pubDate>Tue, 13 Dec 2022 17:45:27 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>select</code> can now be called with a single hash containing options and some HTML options</p>

<p>Previously this would not work as expected:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="nb">select</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:author</span><span class="p">,</span> <span class="n">authors</span><span class="p">,</span> <span class="ss">required: </span><span class="kp">true</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>Instead you needed to do this:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="nb">select</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:author</span><span class="p">,</span> <span class="n">authors</span><span class="p">,</span> <span class="p">{},</span> <span class="ss">required: </span><span class="kp">true</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>Now, either form is accepted, for the following HTML attributes: <code>required</code>, <code>multiple</code>, <code>size</code>.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Datetime form helpers (`time_field`, `date_field`, `datetime_field`, `week_field`, `month_field`) now accept an instance of Time/Date/DateTime as `:value` option.
</title>
    <link>https://github.com/rails/rails/issues/46629</link>
    <guid>https://github.com/rails/rails/issues/46629</guid>
    <description>*   Datetime form helpers (`time_field`, `date_field`, `datetime_field`, `week_field`, `month_field`) now accept an instance of Time/Date/DateTime as `:value` option.

    Before:
    ```erb
    &lt;%= form.datetime_field :written_at, value: Time.current.strftime(&quot;%Y-%m-%dT%T&quot;) %&gt;
    ```

    After:
    ```erb
    &lt;%= form.datetime_field :written_at, value: Time.current %&gt;
    ```

    *Andrey Samsonov*</description>
    <pubDate>Tue, 13 Dec 2022 17:45:27 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Datetime form helpers (<code>time_field</code>, <code>date_field</code>, <code>datetime_field</code>, <code>week_field</code>, <code>month_field</code>) now accept an instance of Time/Date/DateTime as <code>:value</code> option.</p>

<p>Before:</p>
<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="n">form</span><span class="p">.</span><span class="nf">datetime_field</span> <span class="ss">:written_at</span><span class="p">,</span> <span class="ss">value: </span><span class="no">Time</span><span class="p">.</span><span class="nf">current</span><span class="p">.</span><span class="nf">strftime</span><span class="p">(</span><span class="s2">"%Y-%m-%dT%T"</span><span class="p">)</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>After:</p>
<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="n">form</span><span class="p">.</span><span class="nf">datetime_field</span> <span class="ss">:written_at</span><span class="p">,</span> <span class="ss">value: </span><span class="no">Time</span><span class="p">.</span><span class="nf">current</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p><em>Andrey Samsonov</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Choices of `select` can optionally contain html attributes as the last element
</title>
    <link>https://github.com/rails/rails/issues/43019</link>
    <guid>https://github.com/rails/rails/issues/43019</guid>
    <description>*   Choices of `select` can optionally contain html attributes as the last element
    of the child arrays when using grouped/nested collections

    ```erb
    &lt;%= form.select :foo, [[&quot;North America&quot;, [[&quot;United States&quot;,&quot;US&quot;],[&quot;Canada&quot;,&quot;CA&quot;]], { disabled: &quot;disabled&quot; }]] %&gt;
    # =&gt; &lt;select&gt;&lt;optgroup label=&quot;North America&quot; disabled=&quot;disabled&quot;&gt;&lt;option value=&quot;US&quot;&gt;United States&lt;/option&gt;&lt;option value=&quot;CA&quot;&gt;Canada&lt;/option&gt;&lt;/optgroup&gt;&lt;/select&gt;
    ```

    *Chris Gunther*</description>
    <pubDate>Wed, 23 Nov 2022 19:59:20 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Choices of <code>select</code> can optionally contain html attributes as the last element<br />
of the child arrays when using grouped/nested collections</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="n">form</span><span class="p">.</span><span class="nf">select</span> <span class="ss">:foo</span><span class="p">,</span> <span class="p">[[</span><span class="s2">"North America"</span><span class="p">,</span> <span class="p">[[</span><span class="s2">"United States"</span><span class="p">,</span><span class="s2">"US"</span><span class="p">],[</span><span class="s2">"Canada"</span><span class="p">,</span><span class="s2">"CA"</span><span class="p">]],</span> <span class="p">{</span> <span class="ss">disabled: </span><span class="s2">"disabled"</span> <span class="p">}]]</span> <span class="cp">%&gt;</span>
# =&gt; <span class="nt">&lt;select&gt;&lt;optgroup</span> <span class="na">label=</span><span class="s">"North America"</span> <span class="na">disabled=</span><span class="s">"disabled"</span><span class="nt">&gt;&lt;option</span> <span class="na">value=</span><span class="s">"US"</span><span class="nt">&gt;</span>United States<span class="nt">&lt;/option&gt;&lt;option</span> <span class="na">value=</span><span class="s">"CA"</span><span class="nt">&gt;</span>Canada<span class="nt">&lt;/option&gt;&lt;/optgroup&gt;&lt;/select&gt;</span>
</code></pre></div></div>

<p><em>Chris Gunther</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: `check_box_tag` and `radio_button_tag` now accept `checked` as a keyword argument
</title>
    <link>https://github.com/rails/rails/issues/45527</link>
    <guid>https://github.com/rails/rails/issues/45527</guid>
    <description>*   `check_box_tag` and `radio_button_tag` now accept `checked` as a keyword argument

    This is to make the API more consistent with the `FormHelper` variants. You can now
    provide `checked` as a positional or keyword argument:

    ```erb
    = check_box_tag &quot;admin&quot;, &quot;1&quot;, false
    = check_box_tag &quot;admin&quot;, &quot;1&quot;, checked: false

    = radio_button_tag &#39;favorite_color&#39;, &#39;maroon&#39;, false
    = radio_button_tag &#39;favorite_color&#39;, &#39;maroon&#39;, checked: false
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Sat, 22 Oct 2022 20:19:45 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>check_box_tag</code> and <code>radio_button_tag</code> now accept <code>checked</code> as a keyword argument</p>

<p>This is to make the API more consistent with the <code>FormHelper</code> variants. You can now<br />
provide <code>checked</code> as a positional or keyword argument:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code>= check_box_tag "admin", "1", false
= check_box_tag "admin", "1", checked: false

= radio_button_tag 'favorite_color', 'maroon', false
= radio_button_tag 'favorite_color', 'maroon', checked: false
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Allow passing a class to `dom_id`.
</title>
    <link>https://github.com/rails/rails/issues/46068</link>
    <guid>https://github.com/rails/rails/issues/46068</guid>
    <description>*   Allow passing a class to `dom_id`.
    You no longer need to call `new` when passing a class to `dom_id`.
    This makes `dom_id` behave like `dom_class` in this regard.
    Apart from saving a few keystrokes, it prevents Ruby from needing
    to instantiate a whole new object just to generate a string.

    Before:
    ```ruby
    dom_id(Post) # =&gt; NoMethodError: undefined method `to_key&#39; for Post:Class
    ```

    After:
    ```ruby
    dom_id(Post) # =&gt; &quot;new_post&quot;
    ```

    *Goulven Champenois*</description>
    <pubDate>Tue, 20 Sep 2022 19:05:36 +0000</pubDate>
    <author>Goulven Champenois</author>
    <content:encoded><![CDATA[<p>Allow passing a class to <code>dom_id</code>.<br />
You no longer need to call <code>new</code> when passing a class to <code>dom_id</code>.<br />
This makes <code>dom_id</code> behave like <code>dom_class</code> in this regard.<br />
Apart from saving a few keystrokes, it prevents Ruby from needing<br />
to instantiate a whole new object just to generate a string.</p>

<p>Before:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dom_id</span><span class="p">(</span><span class="no">Post</span><span class="p">)</span> <span class="c1"># =&gt; NoMethodError: undefined method `to_key' for Post:Class</span>
</code></pre></div></div>

<p>After:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dom_id</span><span class="p">(</span><span class="no">Post</span><span class="p">)</span> <span class="c1"># =&gt; "new_post"</span>
</code></pre></div></div>

<p><em>Goulven Champenois</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Report `:locals` as part of the data returned by ActionView render instrumentation.
</title>
    <link>https://github.com/rails/rails/issues/45977</link>
    <guid>https://github.com/rails/rails/issues/45977</guid>
    <description>*   Report `:locals` as part of the data returned by ActionView render instrumentation.

    Before:
    ```ruby
    {
    identifier: &quot;/Users/adam/projects/notifications/app/views/posts/index.html.erb&quot;,
    layout: &quot;layouts/application&quot;
    }
    ```

    After:
    ```ruby
    {
    identifier: &quot;/Users/adam/projects/notifications/app/views/posts/index.html.erb&quot;,
    layout: &quot;layouts/application&quot;,
    locals: {foo: &quot;bar&quot;}
    }
    ```

    *Aaron Gough*</description>
    <pubDate>Fri, 09 Sep 2022 19:45:42 +0000</pubDate>
    <author>Aaron Gough</author>
    <content:encoded><![CDATA[<p>Report <code>:locals</code> as part of the data returned by ActionView render instrumentation.</p>

<p>Before:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
<span class="ss">identifier: </span><span class="s2">"/Users/adam/projects/notifications/app/views/posts/index.html.erb"</span><span class="p">,</span>
<span class="ss">layout: </span><span class="s2">"layouts/application"</span>
<span class="p">}</span>
</code></pre></div></div>

<p>After:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
<span class="ss">identifier: </span><span class="s2">"/Users/adam/projects/notifications/app/views/posts/index.html.erb"</span><span class="p">,</span>
<span class="ss">layout: </span><span class="s2">"layouts/application"</span><span class="p">,</span>
<span class="ss">locals: </span><span class="p">{</span><span class="ss">foo: </span><span class="s2">"bar"</span><span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><em>Aaron Gough</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Strip `break_sequence` at the end of `word_wrap`.
</title>
    <link>https://github.com/rails/rails/issues/45942</link>
    <guid>https://github.com/rails/rails/issues/45942</guid>
    <description>*   Strip `break_sequence` at the end of `word_wrap`.

    This fixes a bug where `word_wrap` didn&#39;t properly strip off break sequences that had printable characters.

    For example, compare the outputs of this template:

    ```erb
    # &lt;%= word_wrap(&quot;11 22\n33 44&quot;, line_width: 2, break_sequence: &quot;\n# &quot;) %&gt;
    ```

    Before:

    ```
    # 11
    # 22
    #
    # 33
    # 44
    #
    ```

    After:

    ```
    # 11
    # 22
    # 33
    # 44
    ```

    *Max Chernyak*</description>
    <pubDate>Mon, 05 Sep 2022 21:02:49 +0000</pubDate>
    <author>Max Chernyak</author>
    <content:encoded><![CDATA[<p>Strip <code>break_sequence</code> at the end of <code>word_wrap</code>.</p>

<p>This fixes a bug where <code>word_wrap</code> didn’t properly strip off break sequences that had printable characters.</p>

<p>For example, compare the outputs of this template:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code># <span class="cp">&lt;%=</span> <span class="n">word_wrap</span><span class="p">(</span><span class="s2">"11 22</span><span class="se">\n</span><span class="s2">33 44"</span><span class="p">,</span> <span class="ss">line_width: </span><span class="mi">2</span><span class="p">,</span> <span class="ss">break_sequence: </span><span class="s2">"</span><span class="se">\n</span><span class="s2"># "</span><span class="p">)</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>Before:</p>

<pre><code># 11
# 22
#
# 33
# 44
#
</code></pre>

<p>After:</p>

<pre><code># 11
# 22
# 33
# 44
</code></pre>

<p><em>Max Chernyak</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Allow templates to set strict `locals`.
</title>
    <link>https://github.com/rails/rails/issues/45727</link>
    <guid>https://github.com/rails/rails/issues/45727</guid>
    <description>*   Allow templates to set strict `locals`.

    By default, templates will accept any `locals` as keyword arguments. To define what `locals` a template accepts, add a `locals` magic comment:

    ```erb
    &lt;%# locals: (message:) -%&gt;
    &lt;%= message %&gt;
    ```

    Default values can also be provided:

    ```erb
    &lt;%# locals: (message: &quot;Hello, world!&quot;) -%&gt;
    &lt;%= message %&gt;
    ```

    Or `locals` can be disabled entirely:

    ```erb
    &lt;%# locals: () %&gt;
    ```

    *Joel Hawksley*</description>
    <pubDate>Tue, 02 Aug 2022 06:35:24 +0000</pubDate>
    <author>Joel Hawksley</author>
    <content:encoded><![CDATA[<p>Allow templates to set strict <code>locals</code>.</p>

<p>By default, templates will accept any <code>locals</code> as keyword arguments. To define what <code>locals</code> a template accepts, add a <code>locals</code> magic comment:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;%# locals: (message:) -%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">message</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>Default values can also be provided:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;%# locals: (message: "Hello, world!") -%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">message</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p>Or <code>locals</code> can be disabled entirely:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;%# locals: () %&gt;</span>
</code></pre></div></div>

<p><em>Joel Hawksley</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Add `include_seconds` option for `datetime_local_field`
</title>
    <link>https://github.com/rails/rails/issues/45188</link>
    <guid>https://github.com/rails/rails/issues/45188</guid>
    <description>*   Add `include_seconds` option for `datetime_local_field`

    This allows to omit seconds part in the input field, by passing `include_seconds: false`

    *Wojciech Wnętrzak*</description>
    <pubDate>Thu, 07 Jul 2022 18:16:24 +0000</pubDate>
    <author>Wojciech Wnętrzak</author>
    <content:encoded><![CDATA[<p>Add <code>include_seconds</code> option for <code>datetime_local_field</code></p>

<p>This allows to omit seconds part in the input field, by passing <code>include_seconds: false</code></p>

<p><em>Wojciech Wnętrzak</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Guard against `ActionView::Helpers::FormTagHelper#field_name` calls with nil
</title>
    <link>https://github.com/rails/rails/issues/45366</link>
    <guid>https://github.com/rails/rails/issues/45366</guid>
    <description>*   Guard against `ActionView::Helpers::FormTagHelper#field_name` calls with nil
    `object_name` arguments. For example:

    ```erb
    &lt;%= fields do |f| %&gt;
      &lt;%= f.field_name :body %&gt;
    &lt;% end %&gt;
    ```

    *Sean Doyle*</description>
    <pubDate>Wed, 15 Jun 2022 19:23:27 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Guard against <code>ActionView::Helpers::FormTagHelper#field_name</code> calls with nil<br />
<code>object_name</code> arguments. For example:</p>

<div class="language-erb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;%=</span> <span class="n">fields</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="p">.</span><span class="nf">field_name</span> <span class="ss">:body</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre></div></div>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Strings returned from `strip_tags` are correctly tagged `html_safe?`
</title>
    <link>https://github.com/rails/rails/issues/45218</link>
    <guid>https://github.com/rails/rails/issues/45218</guid>
    <description>*   Strings returned from `strip_tags` are correctly tagged `html_safe?`

    Because these strings contain no HTML elements and the basic entities are escaped, they are safe
    to be included as-is as PCDATA in HTML content. Tagging them as html-safe avoids double-escaping
    entities when being concatenated to a SafeBuffer during rendering.

    Fixes [rails/rails-html-sanitizer#124](https://github.com/rails/rails-html-sanitizer/issues/124)

    *Mike Dalessio*</description>
    <pubDate>Tue, 31 May 2022 14:25:57 +0000</pubDate>
    <author>Mike Dalessio</author>
    <content:encoded><![CDATA[<p>Strings returned from <code>strip_tags</code> are correctly tagged <code>html_safe?</code></p>

<p>Because these strings contain no HTML elements and the basic entities are escaped, they are safe<br />
to be included as-is as PCDATA in HTML content. Tagging them as html-safe avoids double-escaping<br />
entities when being concatenated to a SafeBuffer during rendering.</p>

<p>Fixes <a href="https://github.com/rails/rails-html-sanitizer/issues/124">rails/rails-html-sanitizer#124</a></p>

<p><em>Mike Dalessio</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Move `convert_to_model` call from `form_for` into `form_with`
</title>
    <link>https://github.com/rails/rails/issues/44468</link>
    <guid>https://github.com/rails/rails/issues/44468</guid>
    <description>*   Move `convert_to_model` call from `form_for` into `form_with`

    Now that `form_for` is implemented in terms of `form_with`, remove the
    `convert_to_model` call from `form_for`.

    *Sean Doyle*</description>
    <pubDate>Wed, 25 May 2022 14:24:45 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Move <code>convert_to_model</code> call from <code>form_for</code> into <code>form_with</code></p>

<p>Now that <code>form_for</code> is implemented in terms of <code>form_with</code>, remove the<br />
<code>convert_to_model</code> call from <code>form_for</code>.</p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Fix and add protections for XSS in `ActionView::Helpers` and `ERB::Util`.
</title>
    <link>https://github.com/rails/rails/issues/44973</link>
    <guid>https://github.com/rails/rails/issues/44973</guid>
    <description>*   Fix and add protections for XSS in `ActionView::Helpers` and `ERB::Util`.

    Escape dangerous characters in names of tags and names of attributes in the
    tag helpers, following the XML specification. Rename the option
    `:escape_attributes` to `:escape`, to simplify by applying the option to the
    whole tag.

    *Álvaro Martín Fraguas*</description>
    <pubDate>Thu, 28 Apr 2022 19:39:20 +0000</pubDate>
    <author>Alvaro Martin Fraguas</author>
    <content:encoded><![CDATA[<p>Fix and add protections for XSS in <code>ActionView::Helpers</code> and <code>ERB::Util</code>.</p>

<p>Escape dangerous characters in names of tags and names of attributes in the<br />
tag helpers, following the XML specification. Rename the option<br />
<code>:escape_attributes</code> to <code>:escape</code>, to simplify by applying the option to the<br />
whole tag.</p>

<p><em>Álvaro Martín Fraguas</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Extend audio_tag and video_tag to accept Active Storage attachments.
</title>
    <link>https://github.com/rails/rails/issues/44085</link>
    <guid>https://github.com/rails/rails/issues/44085</guid>
    <description>*   Extend audio_tag and video_tag to accept Active Storage attachments.

    Now it&#39;s possible to write

    ```ruby
    audio_tag(user.audio_file)
    video_tag(user.video_file)
    ```

    Instead of

    ```ruby
    audio_tag(polymorphic_path(user.audio_file))
    video_tag(polymorphic_path(user.video_file))
    ```

    `image_tag` already supported that, so this follows the same pattern.

    *Matheus Richard*</description>
    <pubDate>Mon, 14 Mar 2022 07:46:54 +0000</pubDate>
    <author>Matheus Richard</author>
    <content:encoded><![CDATA[<p>Extend audio_tag and video_tag to accept Active Storage attachments.</p>

<p>Now it’s possible to write</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">audio_tag</span><span class="p">(</span><span class="n">user</span><span class="p">.</span><span class="nf">audio_file</span><span class="p">)</span>
<span class="n">video_tag</span><span class="p">(</span><span class="n">user</span><span class="p">.</span><span class="nf">video_file</span><span class="p">)</span>
</code></pre></div></div>

<p>Instead of</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">audio_tag</span><span class="p">(</span><span class="n">polymorphic_path</span><span class="p">(</span><span class="n">user</span><span class="p">.</span><span class="nf">audio_file</span><span class="p">))</span>
<span class="n">video_tag</span><span class="p">(</span><span class="n">polymorphic_path</span><span class="p">(</span><span class="n">user</span><span class="p">.</span><span class="nf">video_file</span><span class="p">))</span>
</code></pre></div></div>

<p><code>image_tag</code> already supported that, so this follows the same pattern.</p>

<p><em>Matheus Richard</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actionview: Ensure models passed to `form_for` attempt to call `to_model`.
</title>
    <link>https://github.com/rails/rails/issues/44328</link>
    <guid>https://github.com/rails/rails/issues/44328</guid>
    <description>*   Ensure models passed to `form_for` attempt to call `to_model`.

    *Sean Doyle*</description>
    <pubDate>Thu, 17 Feb 2022 21:21:09 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Ensure models passed to <code>form_for</code> attempt to call <code>to_model</code>.</p>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `ActiveRecord::Base#id_value` alias to access the raw value of a record&#39;s id column.
</title>
    <link>https://github.com/rails/rails/issues/48930</link>
    <guid>https://github.com/rails/rails/issues/48930</guid>
    <description>*   Add `ActiveRecord::Base#id_value` alias to access the raw value of a record&#39;s id column.

    This alias is only provided for models that declare an `:id` column.

    *Adrianna Chang*</description>
    <pubDate>Mon, 21 Aug 2023 18:33:39 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Add <code>ActiveRecord::Base#id_value</code> alias to access the raw value of a record’s id column.</p>

<p>This alias is only provided for models that declare an <code>:id</code> column.</p>

<p><em>Adrianna Chang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix previous change tracking for `ActiveRecord::Store` when using a column with JSON structured database type
</title>
    <link>https://github.com/rails/rails/issues/43386</link>
    <guid>https://github.com/rails/rails/issues/43386</guid>
    <description>*   Fix previous change tracking for `ActiveRecord::Store` when using a column with JSON structured database type

    Before, the methods to access the changes made during the last save `#saved_change_to_key?`, `#saved_change_to_key`, and `#key_before_last_save` did not work if the store was defined as a `store_accessor` on a column with a JSON structured database type

    *Robert DiMartino*</description>
    <pubDate>Wed, 09 Aug 2023 16:32:16 +0000</pubDate>
    <author>Robert DiMartino</author>
    <content:encoded><![CDATA[<p>Fix previous change tracking for <code>ActiveRecord::Store</code> when using a column with JSON structured database type</p>

<p>Before, the methods to access the changes made during the last save <code>#saved_change_to_key?</code>, <code>#saved_change_to_key</code>, and <code>#key_before_last_save</code> did not work if the store was defined as a <code>store_accessor</code> on a column with a JSON structured database type</p>

<p><em>Robert DiMartino</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fully support `NULLS [NOT] DISTINCT` for PostgreSQL 15+ indexes.
</title>
    <link>https://github.com/rails/rails/issues/48608</link>
    <guid>https://github.com/rails/rails/issues/48608</guid>
    <description>*   Fully support `NULLS [NOT] DISTINCT` for PostgreSQL 15+ indexes.

    Previous work was done to allow the index to be created in a migration, but it was not
    supported in schema.rb. Additionally, the matching for `NULLS [NOT] DISTINCT` was not
    in the correct order, which could have resulted in inconsistent schema detection.

    *Gregory Jones*</description>
    <pubDate>Thu, 03 Aug 2023 20:00:34 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Fully support <code>NULLS [NOT] DISTINCT</code> for PostgreSQL 15+ indexes.</p>

<p>Previous work was done to allow the index to be created in a migration, but it was not<br />
supported in schema.rb. Additionally, the matching for <code>NULLS [NOT] DISTINCT</code> was not<br />
in the correct order, which could have resulted in inconsistent schema detection.</p>

<p><em>Gregory Jones</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow escaping of literal colon characters in `sanitize_sql_*` methods when named bind variables are used
</title>
    <link>https://github.com/rails/rails/issues/48852</link>
    <guid>https://github.com/rails/rails/issues/48852</guid>
    <description>*   Allow escaping of literal colon characters in `sanitize_sql_*` methods when named bind variables are used

    *Justin Bull*</description>
    <pubDate>Tue, 01 Aug 2023 14:38:04 +0000</pubDate>
    <author>Justin Bull</author>
    <content:encoded><![CDATA[<p>Allow escaping of literal colon characters in <code>sanitize_sql_*</code> methods when named bind variables are used</p>

<p><em>Justin Bull</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `#previously_new_record?` to return true for destroyed records.
</title>
    <link>https://github.com/rails/rails/issues/48796</link>
    <guid>https://github.com/rails/rails/issues/48796</guid>
    <description>*   Fix `#previously_new_record?` to return true for destroyed records.

    Before, if a record was created and then destroyed, `#previously_new_record?` would return true.
    Now, any UPDATE or DELETE to a record is considered a change, and will result in `#previously_new_record?`
    returning false.

    *Adrianna Chang*</description>
    <pubDate>Tue, 25 Jul 2023 20:55:34 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Fix <code>#previously_new_record?</code> to return true for destroyed records.</p>

<p>Before, if a record was created and then destroyed, <code>#previously_new_record?</code> would return true.<br />
Now, any UPDATE or DELETE to a record is considered a change, and will result in <code>#previously_new_record?</code><br />
returning false.</p>

<p><em>Adrianna Chang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Specify callback in `has_secure_token`
</title>
    <link>https://github.com/rails/rails/issues/47420</link>
    <guid>https://github.com/rails/rails/issues/47420</guid>
    <description>*   Specify callback in `has_secure_token`

    ```ruby
    class User &lt; ApplicationRecord
      has_secure_token on: :initialize
    end

    User.new.token # =&gt; &quot;abc123....&quot;
    ```

    *Sean Doyle*</description>
    <pubDate>Tue, 18 Jul 2023 21:19:36 +0000</pubDate>
    <author>Sean Doyle</author>
    <content:encoded><![CDATA[<p>Specify callback in <code>has_secure_token</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">has_secure_token</span> <span class="ss">on: :initialize</span>
<span class="k">end</span>

<span class="no">User</span><span class="p">.</span><span class="nf">new</span><span class="p">.</span><span class="nf">token</span> <span class="c1"># =&gt; "abc123...."</span>
</code></pre></div></div>

<p><em>Sean Doyle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix incrementation of in memory counter caches when associations overlap
</title>
    <link>https://github.com/rails/rails/issues/48665</link>
    <guid>https://github.com/rails/rails/issues/48665</guid>
    <description>*   Fix incrementation of in memory counter caches when associations overlap

    When two associations had a similarly named counter cache column, Active Record
    could sometime increment the wrong one.

    *Jacopo Beschi*, *Jean Boussier*</description>
    <pubDate>Thu, 13 Jul 2023 11:57:45 +0000</pubDate>
    <author>Jacopo</author>
    <content:encoded><![CDATA[<p>Fix incrementation of in memory counter caches when associations overlap</p>

<p>When two associations had a similarly named counter cache column, Active Record<br />
could sometime increment the wrong one.</p>

<p><em>Jacopo Beschi</em>, <em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Don&#39;t show secrets for Active Record&#39;s `Cipher::Aes256Gcm#inspect`.
</title>
    <link>https://github.com/rails/rails/issues/48679</link>
    <guid>https://github.com/rails/rails/issues/48679</guid>
    <description>*   Don&#39;t show secrets for Active Record&#39;s `Cipher::Aes256Gcm#inspect`.

    Before:

    ```ruby
    ActiveRecord::Encryption::Cipher::Aes256Gcm.new(secret).inspect
    &quot;#&lt;ActiveRecord::Encryption::Cipher::Aes256Gcm:0x0000000104888038 ... @secret=\&quot;\\xAF\\bFh]LV}q\\nl\\xB2U\\xB3 ... &gt;&quot;
    ```

    After:

    ```ruby
    ActiveRecord::Encryption::Cipher::Aes256Gcm(secret).inspect
    &quot;#&lt;ActiveRecord::Encryption::Cipher::Aes256Gcm:0x0000000104888038&gt;&quot;
    ```

    *Petrik de Heus*</description>
    <pubDate>Tue, 11 Jul 2023 20:55:48 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Don’t show secrets for Active Record’s <code>Cipher::Aes256Gcm#inspect</code>.</p>

<p>Before:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Encryption</span><span class="o">::</span><span class="no">Cipher</span><span class="o">::</span><span class="no">Aes256Gcm</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">secret</span><span class="p">).</span><span class="nf">inspect</span>
<span class="s2">"#&lt;ActiveRecord::Encryption::Cipher::Aes256Gcm:0x0000000104888038 ... @secret=</span><span class="se">\"\\</span><span class="s2">xAF</span><span class="se">\\</span><span class="s2">bFh]LV}q</span><span class="se">\\</span><span class="s2">nl</span><span class="se">\\</span><span class="s2">xB2U</span><span class="se">\\</span><span class="s2">xB3 ... &gt;"</span>
</code></pre></div></div>

<p>After:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Encryption</span><span class="o">::</span><span class="no">Cipher</span><span class="o">::</span><span class="no">Aes256Gcm</span><span class="p">(</span><span class="n">secret</span><span class="p">).</span><span class="nf">inspect</span>
<span class="s2">"#&lt;ActiveRecord::Encryption::Cipher::Aes256Gcm:0x0000000104888038&gt;"</span>
</code></pre></div></div>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Bring back the historical behavior of committing transaction on non-local return.
</title>
    <link>https://github.com/rails/rails/issues/48600</link>
    <guid>https://github.com/rails/rails/issues/48600</guid>
    <description>*   Bring back the historical behavior of committing transaction on non-local return.

    ```ruby
    Model.transaction do
      model.save
      return
      other_model.save # not executed
    end
    ```

    Historically only raised errors would trigger a rollback, but in Ruby `2.3`, the `timeout` library
    started using `throw` to interrupt execution which had the adverse effect of committing open transactions.

    To solve this, in Active Record 6.1 the behavior was changed to instead rollback the transaction as it was safer
    than to potentially commit an incomplete transaction.

    Using `return`, `break` or `throw` inside a `transaction` block was essentially deprecated from Rails 6.1 onwards.

    However with the release of `timeout 0.4.0`, `Timeout.timeout` now raises an error again, and Active Record is able
    to return to its original, less surprising, behavior.

    This historical behavior can now be opt-ed in via:

    ```
    Rails.application.config.active_record.commit_transaction_on_non_local_return = true
    ```

    And is the default for new applications created in Rails 7.1.

    *Jean Boussier*</description>
    <pubDate>Mon, 10 Jul 2023 08:55:41 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Bring back the historical behavior of committing transaction on non-local return.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Model</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span>
  <span class="n">model</span><span class="p">.</span><span class="nf">save</span>
  <span class="k">return</span>
  <span class="n">other_model</span><span class="p">.</span><span class="nf">save</span> <span class="c1"># not executed</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Historically only raised errors would trigger a rollback, but in Ruby <code>2.3</code>, the <code>timeout</code> library<br />
started using <code>throw</code> to interrupt execution which had the adverse effect of committing open transactions.</p>

<p>To solve this, in Active Record 6.1 the behavior was changed to instead rollback the transaction as it was safer<br />
than to potentially commit an incomplete transaction.</p>

<p>Using <code>return</code>, <code>break</code> or <code>throw</code> inside a <code>transaction</code> block was essentially deprecated from Rails 6.1 onwards.</p>

<p>However with the release of <code>timeout 0.4.0</code>, <code>Timeout.timeout</code> now raises an error again, and Active Record is able<br />
to return to its original, less surprising, behavior.</p>

<p>This historical behavior can now be opt-ed in via:</p>

<pre><code>Rails.application.config.active_record.commit_transaction_on_non_local_return = true
</code></pre>

<p>And is the default for new applications created in Rails 7.1.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Deprecate `name` argument on `#remove_connection`.
</title>
    <link>https://github.com/rails/rails/issues/48681</link>
    <guid>https://github.com/rails/rails/issues/48681</guid>
    <description>*   Deprecate `name` argument on `#remove_connection`.

    The `name` argument is deprecated on `#remove_connection` without replacement. `#remove_connection` should be called directly on the class that established the connection.

    *Eileen M. Uchitelle*</description>
    <pubDate>Thu, 06 Jul 2023 20:15:20 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Deprecate <code>name</code> argument on <code>#remove_connection</code>.</p>

<p>The <code>name</code> argument is deprecated on <code>#remove_connection</code> without replacement. <code>#remove_connection</code> should be called directly on the class that established the connection.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix has_one through singular building with inverse.
</title>
    <link>https://github.com/rails/rails/issues/48674</link>
    <guid>https://github.com/rails/rails/issues/48674</guid>
    <description>*   Fix has_one through singular building with inverse.

    Allows building of records from an association with a has_one through a
    singular association with inverse. For belongs_to through associations,
    linking the foreign key to the primary key model isn&#39;t needed.
    For has_one, we cannot build records due to the association not being mutable.

    *Gannon McGibbon*</description>
    <pubDate>Thu, 06 Jul 2023 13:09:28 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Fix has_one through singular building with inverse.</p>

<p>Allows building of records from an association with a has_one through a<br />
singular association with inverse. For belongs_to through associations,<br />
linking the foreign key to the primary key model isn’t needed.<br />
For has_one, we cannot build records due to the association not being mutable.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Disable database prepared statements when query logs are enabled
</title>
    <link>https://github.com/rails/rails/issues/48631</link>
    <guid>https://github.com/rails/rails/issues/48631</guid>
    <description>*   Disable database prepared statements when query logs are enabled

    Prepared Statements and Query Logs are incompatible features due to query logs making every query unique.

    *zzak, Jean Boussier*</description>
    <pubDate>Mon, 03 Jul 2023 10:39:33 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Disable database prepared statements when query logs are enabled</p>

<p>Prepared Statements and Query Logs are incompatible features due to query logs making every query unique.</p>

<p><em>zzak, Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Support decrypting data encrypted non-deterministically with a SHA1 hash digest.
</title>
    <link>https://github.com/rails/rails/issues/48530</link>
    <guid>https://github.com/rails/rails/issues/48530</guid>
    <description>*   Support decrypting data encrypted non-deterministically with a SHA1 hash digest.

    This adds a new Active Record encryption option to support decrypting data encrypted
    non-deterministically with a SHA1 hash digest:

    ```
    Rails.application.config.active_record.encryption.support_sha1_for_non_deterministic_encryption = true
    ```

    The new option addresses a problem when upgrading from 7.0 to 7.1. Due to a bug in how Active Record
    Encryption was getting initialized, the key provider used for non-deterministic encryption were using
    SHA-1 as its digest class, instead of the one configured globally by Rails via
    `Rails.application.config.active_support.key_generator_hash_digest_class`.

    *Cadu Ribeiro and Jorge Manrubia*</description>
    <pubDate>Sun, 25 Jun 2023 08:43:10 +0000</pubDate>
    <author>Jorge Manrubia</author>
    <content:encoded><![CDATA[<p>Support decrypting data encrypted non-deterministically with a SHA1 hash digest.</p>

<p>This adds a new Active Record encryption option to support decrypting data encrypted<br />
non-deterministically with a SHA1 hash digest:</p>

<pre><code>Rails.application.config.active_record.encryption.support_sha1_for_non_deterministic_encryption = true
</code></pre>

<p>The new option addresses a problem when upgrading from 7.0 to 7.1. Due to a bug in how Active Record<br />
Encryption was getting initialized, the key provider used for non-deterministic encryption were using<br />
SHA-1 as its digest class, instead of the one configured globally by Rails via<br />
<code>Rails.application.config.active_support.key_generator_hash_digest_class</code>.</p>

<p><em>Cadu Ribeiro and Jorge Manrubia</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Added PostgreSQL migration commands for enum rename, add value, and rename value.
</title>
    <link>https://github.com/rails/rails/issues/44898</link>
    <guid>https://github.com/rails/rails/issues/44898</guid>
    <description>*   Added PostgreSQL migration commands for enum rename, add value, and rename value.

    `rename_enum` and `rename_enum_value` are reversible. Due to Postgres
    limitation, `add_enum_value` is not reversible since you cannot delete enum
    values. As an alternative you should drop and recreate the enum entirely.

    ```ruby
    rename_enum :article_status, to: :article_state
    ```

    ```ruby
    add_enum_value :article_state, &quot;archived&quot; # will be at the end of existing values
    add_enum_value :article_state, &quot;in review&quot;, before: &quot;published&quot;
    add_enum_value :article_state, &quot;approved&quot;, after: &quot;in review&quot;
    ```

    ```ruby
    rename_enum_value :article_state, from: &quot;archived&quot;, to: &quot;deleted&quot;
    ```

    *Ray Faddis*</description>
    <pubDate>Thu, 15 Jun 2023 14:45:43 +0000</pubDate>
    <author>Ray Faddis</author>
    <content:encoded><![CDATA[<p>Added PostgreSQL migration commands for enum rename, add value, and rename value.</p>

<p><code>rename_enum</code> and <code>rename_enum_value</code> are reversible. Due to Postgres<br />
limitation, <code>add_enum_value</code> is not reversible since you cannot delete enum<br />
values. As an alternative you should drop and recreate the enum entirely.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rename_enum</span> <span class="ss">:article_status</span><span class="p">,</span> <span class="ss">to: :article_state</span>
</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_enum_value</span> <span class="ss">:article_state</span><span class="p">,</span> <span class="s2">"archived"</span> <span class="c1"># will be at the end of existing values</span>
<span class="n">add_enum_value</span> <span class="ss">:article_state</span><span class="p">,</span> <span class="s2">"in review"</span><span class="p">,</span> <span class="ss">before: </span><span class="s2">"published"</span>
<span class="n">add_enum_value</span> <span class="ss">:article_state</span><span class="p">,</span> <span class="s2">"approved"</span><span class="p">,</span> <span class="ss">after: </span><span class="s2">"in review"</span>
</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rename_enum_value</span> <span class="ss">:article_state</span><span class="p">,</span> <span class="ss">from: </span><span class="s2">"archived"</span><span class="p">,</span> <span class="ss">to: </span><span class="s2">"deleted"</span>
</code></pre></div></div>

<p><em>Ray Faddis</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow composite primary key to be derived from schema
</title>
    <link>https://github.com/rails/rails/issues/47633</link>
    <guid>https://github.com/rails/rails/issues/47633</guid>
    <description>*   Allow composite primary key to be derived from schema

    Booting an application with a schema that contains composite primary keys
    will not issue warning and won&#39;t `nil`ify the `ActiveRecord::Base#primary_key` value anymore.

    Given a `travel_routes` table definition and a `TravelRoute` model like:
    ```ruby
    create_table :travel_routes, primary_key: [:origin, :destination], force: true do |t|
      t.string :origin
      t.string :destination
    end

    class TravelRoute &lt; ActiveRecord::Base; end
    ```
    The `TravelRoute.primary_key` value will be automatically derived to `[&quot;origin&quot;, &quot;destination&quot;]`

    *Nikita Vasilevsky*</description>
    <pubDate>Tue, 06 Jun 2023 15:01:27 +0000</pubDate>
    <author>Nikita Vasilevsky</author>
    <content:encoded><![CDATA[<p>Allow composite primary key to be derived from schema</p>

<p>Booting an application with a schema that contains composite primary keys<br />
will not issue warning and won’t <code>nil</code>ify the <code>ActiveRecord::Base#primary_key</code> value anymore.</p>

<p>Given a <code>travel_routes</code> table definition and a <code>TravelRoute</code> model like:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">create_table</span> <span class="ss">:travel_routes</span><span class="p">,</span> <span class="ss">primary_key: </span><span class="p">[</span><span class="ss">:origin</span><span class="p">,</span> <span class="ss">:destination</span><span class="p">],</span> <span class="ss">force: </span><span class="kp">true</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
  <span class="n">t</span><span class="p">.</span><span class="nf">string</span> <span class="ss">:origin</span>
  <span class="n">t</span><span class="p">.</span><span class="nf">string</span> <span class="ss">:destination</span>
<span class="k">end</span>

<span class="k">class</span> <span class="nc">TravelRoute</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="p">;</span> <span class="k">end</span>
</code></pre></div></div>
<p>The <code>TravelRoute.primary_key</code> value will be automatically derived to <code>["origin", "destination"]</code></p>

<p><em>Nikita Vasilevsky</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Include the `connection_pool` with exceptions raised from an adapter.
</title>
    <link>https://github.com/rails/rails/issues/48295</link>
    <guid>https://github.com/rails/rails/issues/48295</guid>
    <description>*   Include the `connection_pool` with exceptions raised from an adapter.

    The `connection_pool` provides added context such as the connection used
    that led to the exception as well as which role and shard.

    *Luan Vieira*</description>
    <pubDate>Tue, 06 Jun 2023 11:03:55 +0000</pubDate>
    <author>Luan Vieira</author>
    <content:encoded><![CDATA[<p>Include the <code>connection_pool</code> with exceptions raised from an adapter.</p>

<p>The <code>connection_pool</code> provides added context such as the connection used<br />
that led to the exception as well as which role and shard.</p>

<p><em>Luan Vieira</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Support multiple column ordering for `find_each`, `find_in_batches` and `in_batches`.
</title>
    <link>https://github.com/rails/rails/issues/48268</link>
    <guid>https://github.com/rails/rails/issues/48268</guid>
    <description>*   Support multiple column ordering for `find_each`, `find_in_batches` and `in_batches`.

    When find_each/find_in_batches/in_batches are performed on a table with composite primary keys, ascending or descending order can be selected for each key.

    ```ruby
    Person.find_each(order: [:desc, :asc]) do |person|
      person.party_all_night!
    end
    ```

    *Takuya Kurimoto*</description>
    <pubDate>Mon, 05 Jun 2023 17:32:47 +0000</pubDate>
    <author>takuyaK</author>
    <content:encoded><![CDATA[<p>Support multiple column ordering for <code>find_each</code>, <code>find_in_batches</code> and <code>in_batches</code>.</p>

<p>When find_each/find_in_batches/in_batches are performed on a table with composite primary keys, ascending or descending order can be selected for each key.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Person</span><span class="p">.</span><span class="nf">find_each</span><span class="p">(</span><span class="ss">order: </span><span class="p">[</span><span class="ss">:desc</span><span class="p">,</span> <span class="ss">:asc</span><span class="p">])</span> <span class="k">do</span> <span class="o">|</span><span class="n">person</span><span class="o">|</span>
  <span class="n">person</span><span class="p">.</span><span class="nf">party_all_night!</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Takuya Kurimoto</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix where on association with has_one/has_many polymorphic relations.
</title>
    <link>https://github.com/rails/rails/issues/48362</link>
    <guid>https://github.com/rails/rails/issues/48362</guid>
    <description>*   Fix where on association with has_one/has_many polymorphic relations.

    Before:
    ```ruby
    Treasure.where(price_estimates: PriceEstimate.all)
    #=&gt; SELECT (...) WHERE &quot;treasures&quot;.&quot;id&quot; IN (SELECT &quot;price_estimates&quot;.&quot;estimate_of_id&quot; FROM &quot;price_estimates&quot;)
    ```

    Later:
    ```ruby
    Treasure.where(price_estimates: PriceEstimate.all)
    #=&gt; SELECT (...) WHERE &quot;treasures&quot;.&quot;id&quot; IN (SELECT &quot;price_estimates&quot;.&quot;estimate_of_id&quot; FROM &quot;price_estimates&quot; WHERE &quot;price_estimates&quot;.&quot;estimate_of_type&quot; = &#39;Treasure&#39;)
    ```

    *Lázaro Nixon*</description>
    <pubDate>Fri, 02 Jun 2023 07:06:58 +0000</pubDate>
    <author>Nixon</author>
    <content:encoded><![CDATA[<p>Fix where on association with has_one/has_many polymorphic relations.</p>

<p>Before:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Treasure</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="ss">price_estimates: </span><span class="no">PriceEstimate</span><span class="p">.</span><span class="nf">all</span><span class="p">)</span>
<span class="c1">#=&gt; SELECT (...) WHERE "treasures"."id" IN (SELECT "price_estimates"."estimate_of_id" FROM "price_estimates")</span>
</code></pre></div></div>

<p>Later:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Treasure</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="ss">price_estimates: </span><span class="no">PriceEstimate</span><span class="p">.</span><span class="nf">all</span><span class="p">)</span>
<span class="c1">#=&gt; SELECT (...) WHERE "treasures"."id" IN (SELECT "price_estimates"."estimate_of_id" FROM "price_estimates" WHERE "price_estimates"."estimate_of_type" = 'Treasure')</span>
</code></pre></div></div>

<p><em>Lázaro Nixon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Assign auto populated columns on Active Record record creation.
</title>
    <link>https://github.com/rails/rails/issues/48339</link>
    <guid>https://github.com/rails/rails/issues/48339</guid>
    <description>*   Assign auto populated columns on Active Record record creation.

    Changes record creation logic to allow for the `auto_increment` column to be assigned
    immediately after creation regardless of it&#39;s relation to the model&#39;s primary key.

    The PostgreSQL adapter benefits the most from the change allowing for any number of auto-populated
    columns to be assigned on the object immediately after row insertion utilizing the `RETURNING` statement.

    *Nikita Vasilevsky*</description>
    <pubDate>Thu, 01 Jun 2023 23:17:02 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Assign auto populated columns on Active Record record creation.</p>

<p>Changes record creation logic to allow for the <code>auto_increment</code> column to be assigned<br />
immediately after creation regardless of it’s relation to the model’s primary key.</p>

<p>The PostgreSQL adapter benefits the most from the change allowing for any number of auto-populated<br />
columns to be assigned on the object immediately after row insertion utilizing the <code>RETURNING</code> statement.</p>

<p><em>Nikita Vasilevsky</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Use the first key in the `shards` hash from `connected_to` for the `default_shard`.
</title>
    <link>https://github.com/rails/rails/issues/48353</link>
    <guid>https://github.com/rails/rails/issues/48353</guid>
    <description>*   Use the first key in the `shards` hash from `connected_to` for the `default_shard`.

    Some applications may not want to use `:default` as a shard name in their connection model. Unfortunately Active Record expects there to be a `:default` shard because it must assume a shard to get the right connection from the pool manager. Rather than force applications to manually set this, `connects_to` can infer the default shard name from the hash of shards and will now assume that the first shard is your default.

    For example if your model looked like this:

    ```ruby
    class ShardRecord &lt; ApplicationRecord
      self.abstract_class = true

      connects_to shards: {
        shard_one: { writing: :shard_one },
        shard_two: { writing: :shard_two }
      }
    ```

    Then the `default_shard` for this class would be set to `shard_one`.

    Fixes: #45390

    *Eileen M. Uchitelle*</description>
    <pubDate>Wed, 31 May 2023 19:29:57 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Use the first key in the <code>shards</code> hash from <code>connected_to</code> for the <code>default_shard</code>.</p>

<p>Some applications may not want to use <code>:default</code> as a shard name in their connection model. Unfortunately Active Record expects there to be a <code>:default</code> shard because it must assume a shard to get the right connection from the pool manager. Rather than force applications to manually set this, <code>connects_to</code> can infer the default shard name from the hash of shards and will now assume that the first shard is your default.</p>

<p>For example if your model looked like this:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">ShardRecord</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="nb">self</span><span class="p">.</span><span class="nf">abstract_class</span> <span class="o">=</span> <span class="kp">true</span>

  <span class="n">connects_to</span> <span class="ss">shards: </span><span class="p">{</span>
    <span class="ss">shard_one: </span><span class="p">{</span> <span class="ss">writing: :shard_one</span> <span class="p">},</span>
    <span class="ss">shard_two: </span><span class="p">{</span> <span class="ss">writing: :shard_two</span> <span class="p">}</span>
  <span class="p">}</span>
</code></pre></div></div>

<p>Then the <code>default_shard</code> for this class would be set to <code>shard_one</code>.</p>

<p>Fixes: #45390</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix mutation detection for serialized attributes backed by binary columns.
</title>
    <link>https://github.com/rails/rails/issues/48274</link>
    <guid>https://github.com/rails/rails/issues/48274</guid>
    <description>*   Fix mutation detection for serialized attributes backed by binary columns.

    *Jean Boussier*</description>
    <pubDate>Mon, 22 May 2023 12:44:19 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix mutation detection for serialized attributes backed by binary columns.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `ActiveRecord.disconnect_all!` method to immediately close all connections from all pools.
</title>
    <link>https://github.com/rails/rails/issues/47856</link>
    <guid>https://github.com/rails/rails/issues/47856</guid>
    <description>*   Add `ActiveRecord.disconnect_all!` method to immediately close all connections from all pools.

    *Jean Boussier*</description>
    <pubDate>Fri, 19 May 2023 11:21:17 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Add <code>ActiveRecord.disconnect_all!</code> method to immediately close all connections from all pools.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Discard connections which may have been left in a transaction.
</title>
    <link>https://github.com/rails/rails/issues/48200</link>
    <guid>https://github.com/rails/rails/issues/48200</guid>
    <description>*   Discard connections which may have been left in a transaction.

    There are cases where, due to an error, `within_new_transaction` may unexpectedly leave a connection in an open transaction. In these cases the connection may be reused, and the following may occur:
    - Writes appear to fail when they actually succeed.
    - Writes appear to succeed when they actually fail.
    - Reads return stale or uncommitted data.

    Previously, the following case was detected:
    - An error is encountered during the transaction, then another error is encountered while attempting to roll it back.

    Now, the following additional cases are detected:
    - An error is encountered just after successfully beginning a transaction.
    - An error is encountered while committing a transaction, then another error is encountered while attempting to roll it back.
    - An error is encountered while rolling back a transaction.

    *Nick Dower*</description>
    <pubDate>Sun, 14 May 2023 02:48:32 +0000</pubDate>
    <author>Nick Dower</author>
    <content:encoded><![CDATA[<p>Discard connections which may have been left in a transaction.</p>

<p>There are cases where, due to an error, <code>within_new_transaction</code> may unexpectedly leave a connection in an open transaction. In these cases the connection may be reused, and the following may occur:</p>
<ul>
  <li>Writes appear to fail when they actually succeed.</li>
  <li>Writes appear to succeed when they actually fail.</li>
  <li>Reads return stale or uncommitted data.</li>
</ul>

<p>Previously, the following case was detected:</p>
<ul>
  <li>An error is encountered during the transaction, then another error is encountered while attempting to roll it back.</li>
</ul>

<p>Now, the following additional cases are detected:</p>
<ul>
  <li>An error is encountered just after successfully beginning a transaction.</li>
  <li>An error is encountered while committing a transaction, then another error is encountered while attempting to roll it back.</li>
  <li>An error is encountered while rolling back a transaction.</li>
</ul>

<p><em>Nick Dower</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Active Record query cache now evicts least recently used entries
</title>
    <link>https://github.com/rails/rails/issues/48192</link>
    <guid>https://github.com/rails/rails/issues/48192</guid>
    <description>*   Active Record query cache now evicts least recently used entries

    By default it only keeps the `100` most recently used queries.

    The cache size can be configured via `database.yml`

    ```yaml
    development:
      adapter: mysql2
      query_cache: 200
    ```

    It can also be entirely disabled:

    ```yaml
    development:
      adapter: mysql2
      query_cache: false
    ```

    *Jean Boussier*</description>
    <pubDate>Thu, 11 May 2023 15:21:02 +0000</pubDate>
    <author>Olivier</author>
    <content:encoded><![CDATA[<p>Active Record query cache now evicts least recently used entries</p>

<p>By default it only keeps the <code>100</code> most recently used queries.</p>

<p>The cache size can be configured via <code>database.yml</code></p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">development</span><span class="pi">:</span>
  <span class="na">adapter</span><span class="pi">:</span> <span class="s">mysql2</span>
  <span class="na">query_cache</span><span class="pi">:</span> <span class="m">200</span>
</code></pre></div></div>

<p>It can also be entirely disabled:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">development</span><span class="pi">:</span>
  <span class="na">adapter</span><span class="pi">:</span> <span class="s">mysql2</span>
  <span class="na">query_cache</span><span class="pi">:</span> <span class="no">false</span>
</code></pre></div></div>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Deprecate `check_pending!` in favor of `check_all_pending!`.
</title>
    <link>https://github.com/rails/rails/issues/48964</link>
    <guid>https://github.com/rails/rails/issues/48964</guid>
    <description>*   Deprecate `check_pending!` in favor of `check_all_pending!`.

    `check_pending!` will only check for pending migrations on the current database connection or the one passed in. This has been deprecated in favor of `check_all_pending!` which will find all pending migrations for the database configurations in a given environment.

    *Eileen M. Uchitelle*</description>
    <pubDate>Thu, 17 Aug 2023 14:04:41 +0000</pubDate>
    <author>Takumi Shotoku</author>
    <content:encoded><![CDATA[<p>Deprecate <code>check_pending!</code> in favor of <code>check_all_pending!</code>.</p>

<p><code>check_pending!</code> will only check for pending migrations on the current database connection or the one passed in. This has been deprecated in favor of <code>check_all_pending!</code> which will find all pending migrations for the database configurations in a given environment.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Make `increment_counter`/`decrement_counter` accept an amount argument
</title>
    <link>https://github.com/rails/rails/issues/48128</link>
    <guid>https://github.com/rails/rails/issues/48128</guid>
    <description>*   Make `increment_counter`/`decrement_counter` accept an amount argument

    ```ruby
    Post.increment_counter(:comments_count, 5, by: 3)
    ```

    *fatkodima*</description>
    <pubDate>Fri, 05 May 2023 12:03:43 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Make <code>increment_counter</code>/<code>decrement_counter</code> accept an amount argument</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span><span class="p">.</span><span class="nf">increment_counter</span><span class="p">(</span><span class="ss">:comments_count</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">by: </span><span class="mi">3</span><span class="p">)</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add support for `Array#intersect?` to `ActiveRecord::Relation`.
</title>
    <link>https://github.com/rails/rails/issues/48544</link>
    <guid>https://github.com/rails/rails/issues/48544</guid>
    <description>*   Add support for `Array#intersect?` to `ActiveRecord::Relation`.

    `Array#intersect?` is only available on Ruby 3.1 or later.

    This allows the Rubocop `Style/ArrayIntersect` cop to work with `ActiveRecord::Relation` objects.

    *John Harry Kelly*</description>
    <pubDate>Wed, 21 Jun 2023 21:08:32 +0000</pubDate>
    <author>Guillermo Iguaran</author>
    <content:encoded><![CDATA[<p>Add support for <code>Array#intersect?</code> to <code>ActiveRecord::Relation</code>.</p>

<p><code>Array#intersect?</code> is only available on Ruby 3.1 or later.</p>

<p>This allows the Rubocop <code>Style/ArrayIntersect</code> cop to work with <code>ActiveRecord::Relation</code> objects.</p>

<p><em>John Harry Kelly</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: The deferrable foreign key can be passed to `t.references`.
</title>
    <link>https://github.com/rails/rails/issues/47671</link>
    <guid>https://github.com/rails/rails/issues/47671</guid>
    <description>*   The deferrable foreign key can be passed to `t.references`.

    *Hiroyuki Ishii*</description>
    <pubDate>Thu, 27 Apr 2023 02:16:38 +0000</pubDate>
    <author>alpaca-tc</author>
    <content:encoded><![CDATA[<p>The deferrable foreign key can be passed to <code>t.references</code>.</p>

<p><em>Hiroyuki Ishii</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Deprecate `deferrable: true` option of `add_foreign_key`.
</title>
    <link>https://github.com/rails/rails/issues/47659</link>
    <guid>https://github.com/rails/rails/issues/47659</guid>
    <description>*   Deprecate `deferrable: true` option of `add_foreign_key`.

    `deferrable: true` is deprecated in favor of `deferrable: :immediate`, and
    will be removed in Rails 7.2.

    Because `deferrable: true` and `deferrable: :deferred` are hard to understand.
    Both true and :deferred are truthy values.
    This behavior is the same as the deferrable option of the add_unique_key method, added in #46192.

    *Hiroyuki Ishii*</description>
    <pubDate>Wed, 26 Apr 2023 23:45:51 +0000</pubDate>
    <author>alpaca-tc</author>
    <content:encoded><![CDATA[<p>Deprecate <code>deferrable: true</code> option of <code>add_foreign_key</code>.</p>

<p><code>deferrable: true</code> is deprecated in favor of <code>deferrable: :immediate</code>, and<br />
will be removed in Rails 7.2.</p>

<p>Because <code>deferrable: true</code> and <code>deferrable: :deferred</code> are hard to understand.<br />
Both true and :deferred are truthy values.<br />
This behavior is the same as the deferrable option of the add_unique_key method, added in #46192.</p>

<p><em>Hiroyuki Ishii</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `AbstractAdapter#execute` and `#exec_query` now clear the query cache
</title>
    <link>https://github.com/rails/rails/issues/48188</link>
    <guid>https://github.com/rails/rails/issues/48188</guid>
    <description>*   `AbstractAdapter#execute` and `#exec_query` now clear the query cache

    If you need to perform a read only SQL query without clearing the query
    cache, use `AbstractAdapter#select_all`.

    *Jean Boussier*</description>
    <pubDate>Mon, 15 May 2023 15:03:08 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p><code>AbstractAdapter#execute</code> and <code>#exec_query</code> now clear the query cache</p>

<p>If you need to perform a read only SQL query without clearing the query<br />
cache, use <code>AbstractAdapter#select_all</code>.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Make `.joins` / `.left_outer_joins` work with CTEs.
</title>
    <link>https://github.com/rails/rails/issues/46843</link>
    <guid>https://github.com/rails/rails/issues/46843</guid>
    <description>*   Make `.joins` / `.left_outer_joins` work with CTEs.

    For example:

    ```ruby
    Post
     .with(commented_posts: Comment.select(:post_id).distinct)
     .joins(:commented_posts)
    #=&gt; WITH (...) SELECT ... INNER JOIN commented_posts on posts.id = commented_posts.post_id
    ```

    *Vladimir Dementyev*</description>
    <pubDate>Tue, 25 Apr 2023 18:27:08 +0000</pubDate>
    <author>Vladimir Dementyev</author>
    <content:encoded><![CDATA[<p>Make <code>.joins</code> / <code>.left_outer_joins</code> work with CTEs.</p>

<p>For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span>
 <span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">commented_posts: </span><span class="no">Comment</span><span class="p">.</span><span class="nf">select</span><span class="p">(</span><span class="ss">:post_id</span><span class="p">).</span><span class="nf">distinct</span><span class="p">)</span>
 <span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:commented_posts</span><span class="p">)</span>
<span class="c1">#=&gt; WITH (...) SELECT ... INNER JOIN commented_posts on posts.id = commented_posts.post_id</span>
</code></pre></div></div>

<p><em>Vladimir Dementyev</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add a load hook for `ActiveRecord::ConnectionAdapters::Mysql2Adapter`
</title>
    <link>https://github.com/rails/rails/issues/48012</link>
    <guid>https://github.com/rails/rails/issues/48012</guid>
    <description>*   Add a load hook for `ActiveRecord::ConnectionAdapters::Mysql2Adapter`
    (named `active_record_mysql2adapter`) to allow for overriding aspects of the
    `ActiveRecord::ConnectionAdapters::Mysql2Adapter` class. This makes `Mysql2Adapter`
    consistent with `PostgreSQLAdapter` and `SQLite3Adapter` that already have load hooks.

    *fatkodima*</description>
    <pubDate>Fri, 21 Apr 2023 22:56:16 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Add a load hook for <code>ActiveRecord::ConnectionAdapters::Mysql2Adapter</code><br />
(named <code>active_record_mysql2adapter</code>) to allow for overriding aspects of the<br />
<code>ActiveRecord::ConnectionAdapters::Mysql2Adapter</code> class. This makes <code>Mysql2Adapter</code><br />
consistent with <code>PostgreSQLAdapter</code> and <code>SQLite3Adapter</code> that already have load hooks.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Introduce adapter for Trilogy database client
</title>
    <link>https://github.com/rails/rails/issues/47880</link>
    <guid>https://github.com/rails/rails/issues/47880</guid>
    <description>*   Introduce adapter for Trilogy database client

    Trilogy is a MySQL-compatible database client. Rails applications can use Trilogy
    by configuring their `config/database.yml`:

    ```yaml
    development:
    adapter: trilogy
    database: blog_development
    pool: 5
    ```

    Or by using the `DATABASE_URL` environment variable:

    ```ruby
    ENV[&#39;DATABASE_URL&#39;] # =&gt; &quot;trilogy://localhost/blog_development?pool=5&quot;
    ```

    *Adrianna Chang*</description>
    <pubDate>Mon, 17 Apr 2023 18:56:49 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Introduce adapter for Trilogy database client</p>

<p>Trilogy is a MySQL-compatible database client. Rails applications can use Trilogy<br />
by configuring their <code>config/database.yml</code>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">development</span><span class="pi">:</span>
<span class="na">adapter</span><span class="pi">:</span> <span class="s">trilogy</span>
<span class="na">database</span><span class="pi">:</span> <span class="s">blog_development</span>
<span class="na">pool</span><span class="pi">:</span> <span class="m">5</span>
</code></pre></div></div>

<p>Or by using the <code>DATABASE_URL</code> environment variable:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ENV</span><span class="p">[</span><span class="s1">'DATABASE_URL'</span><span class="p">]</span> <span class="c1"># =&gt; "trilogy://localhost/blog_development?pool=5"</span>
</code></pre></div></div>

<p><em>Adrianna Chang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `after_commit` callbacks defined on models now execute in the correct order.
</title>
    <link>https://github.com/rails/rails/issues/46992</link>
    <guid>https://github.com/rails/rails/issues/46992</guid>
    <description>*   `after_commit` callbacks defined on models now execute in the correct order.

    ```ruby
    class User &lt; ActiveRecord::Base
      after_commit { puts(&quot;this gets called first&quot;) }
      after_commit { puts(&quot;this gets called second&quot;) }
    end
    ```

    Previously, the callbacks executed in the reverse order. To opt in to the new behaviour:

    ```ruby
    config.active_record.run_after_transaction_callbacks_in_order_defined = true
    ```

    This is the default for new apps.

    *Alex Ghiculescu*</description>
    <pubDate>Fri, 07 Apr 2023 17:12:35 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>after_commit</code> callbacks defined on models now execute in the correct order.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">after_commit</span> <span class="p">{</span> <span class="nb">puts</span><span class="p">(</span><span class="s2">"this gets called first"</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">after_commit</span> <span class="p">{</span> <span class="nb">puts</span><span class="p">(</span><span class="s2">"this gets called second"</span><span class="p">)</span> <span class="p">}</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Previously, the callbacks executed in the reverse order. To opt in to the new behaviour:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">active_record</span><span class="p">.</span><span class="nf">run_after_transaction_callbacks_in_order_defined</span> <span class="o">=</span> <span class="kp">true</span>
</code></pre></div></div>

<p>This is the default for new apps.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Infer `foreign_key` when `inverse_of` is present on `has_one` and `has_many` associations.
</title>
    <link>https://github.com/rails/rails/issues/47834</link>
    <guid>https://github.com/rails/rails/issues/47834</guid>
    <description>*   Infer `foreign_key` when `inverse_of` is present on `has_one` and `has_many` associations.

    ```ruby
    has_many :citations, foreign_key: &quot;book1_id&quot;, inverse_of: :book
    ```

    can be simplified to

    ```ruby
    has_many :citations, inverse_of: :book
    ```

    and the foreign_key will be read from the corresponding `belongs_to` association.

    *Daniel Whitney*</description>
    <pubDate>Fri, 31 Mar 2023 15:44:53 +0000</pubDate>
    <author>Viktor Habchak</author>
    <content:encoded><![CDATA[<p>Infer <code>foreign_key</code> when <code>inverse_of</code> is present on <code>has_one</code> and <code>has_many</code> associations.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">has_many</span> <span class="ss">:citations</span><span class="p">,</span> <span class="ss">foreign_key: </span><span class="s2">"book1_id"</span><span class="p">,</span> <span class="ss">inverse_of: :book</span>
</code></pre></div></div>

<p>can be simplified to</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">has_many</span> <span class="ss">:citations</span><span class="p">,</span> <span class="ss">inverse_of: :book</span>
</code></pre></div></div>

<p>and the foreign_key will be read from the corresponding <code>belongs_to</code> association.</p>

<p><em>Daniel Whitney</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Limit max length of auto generated index names
</title>
    <link>https://github.com/rails/rails/issues/47753</link>
    <guid>https://github.com/rails/rails/issues/47753</guid>
    <description>*   Limit max length of auto generated index names

    Auto generated index names are now limited to 62 bytes, which fits within
    the default index name length limits for MySQL, Postgres and SQLite.

    Any index name over the limit will fallback to the new short format.

    Before (too long):
    ```
    index_testings_on_foo_and_bar_and_first_name_and_last_name_and_administrator
    ```

    After (short format):
    ```
    idx_on_foo_bar_first_name_last_name_administrator_5939248142
    ```

    The short format includes a hash to ensure the name is unique database-wide.

    *Mike Coutermarsh*</description>
    <pubDate>Wed, 29 Mar 2023 07:25:03 +0000</pubDate>
    <author>Mike Coutermarsh</author>
    <content:encoded><![CDATA[<p>Limit max length of auto generated index names</p>

<p>Auto generated index names are now limited to 62 bytes, which fits within<br />
the default index name length limits for MySQL, Postgres and SQLite.</p>

<p>Any index name over the limit will fallback to the new short format.</p>

<p>Before (too long):</p>
<pre><code>index_testings_on_foo_and_bar_and_first_name_and_last_name_and_administrator
</code></pre>

<p>After (short format):</p>
<pre><code>idx_on_foo_bar_first_name_last_name_administrator_5939248142
</code></pre>

<p>The short format includes a hash to ensure the name is unique database-wide.</p>

<p><em>Mike Coutermarsh</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Introduce a more stable and optimized Marshal serializer for Active Record models.
</title>
    <link>https://github.com/rails/rails/issues/47747</link>
    <guid>https://github.com/rails/rails/issues/47747</guid>
    <description>*   Introduce a more stable and optimized Marshal serializer for Active Record models.

    Can be enabled with `config.active_record.marshalling_format_version = 7.1`.

    *Jean Boussier*</description>
    <pubDate>Tue, 28 Mar 2023 15:19:23 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Introduce a more stable and optimized Marshal serializer for Active Record models.</p>

<p>Can be enabled with <code>config.active_record.marshalling_format_version = 7.1</code>.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow specifying where clauses with column-tuple syntax.
</title>
    <link>https://github.com/rails/rails/issues/47729</link>
    <guid>https://github.com/rails/rails/issues/47729</guid>
    <description>*   Allow specifying where clauses with column-tuple syntax.

    Querying through `#where` now accepts a new tuple-syntax which accepts, as
    a key, an array of columns and, as a value, an array of corresponding tuples.
    The key specifies a list of columns, while the value is an array of
    ordered-tuples that conform to the column list.

    For instance:

    ```ruby
    # Cpk::Book =&gt; Cpk::Book(author_id: integer, number: integer, title: string, revision: integer)
    # Cpk::Book.primary_key =&gt; [&quot;author_id&quot;, &quot;number&quot;]

    book = Cpk::Book.create!(author_id: 1, number: 1)
    Cpk::Book.where(Cpk::Book.primary_key =&gt; [[1, 2]]) # =&gt; [book]

    # Topic =&gt; Topic(id: integer, title: string, author_name: string...)

    Topic.where([:title, :author_name] =&gt; [[&quot;The Alchemist&quot;, &quot;Paul Coelho&quot;], [&quot;Harry Potter&quot;, &quot;J.K Rowling&quot;]])
    ```

    *Paarth Madan*</description>
    <pubDate>Wed, 22 Mar 2023 21:08:42 +0000</pubDate>
    <author>Paarth Madan</author>
    <content:encoded><![CDATA[<p>Allow specifying where clauses with column-tuple syntax.</p>

<p>Querying through <code>#where</code> now accepts a new tuple-syntax which accepts, as<br />
a key, an array of columns and, as a value, an array of corresponding tuples.<br />
The key specifies a list of columns, while the value is an array of<br />
ordered-tuples that conform to the column list.</p>

<p>For instance:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Cpk::Book =&gt; Cpk::Book(author_id: integer, number: integer, title: string, revision: integer)</span>
<span class="c1"># Cpk::Book.primary_key =&gt; ["author_id", "number"]</span>

<span class="n">book</span> <span class="o">=</span> <span class="no">Cpk</span><span class="o">::</span><span class="no">Book</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span><span class="ss">author_id: </span><span class="mi">1</span><span class="p">,</span> <span class="ss">number: </span><span class="mi">1</span><span class="p">)</span>
<span class="no">Cpk</span><span class="o">::</span><span class="no">Book</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="no">Cpk</span><span class="o">::</span><span class="no">Book</span><span class="p">.</span><span class="nf">primary_key</span> <span class="o">=&gt;</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">]])</span> <span class="c1"># =&gt; [book]</span>

<span class="c1"># Topic =&gt; Topic(id: integer, title: string, author_name: string...)</span>

<span class="no">Topic</span><span class="p">.</span><span class="nf">where</span><span class="p">([</span><span class="ss">:title</span><span class="p">,</span> <span class="ss">:author_name</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="p">[[</span><span class="s2">"The Alchemist"</span><span class="p">,</span> <span class="s2">"Paul Coelho"</span><span class="p">],</span> <span class="p">[</span><span class="s2">"Harry Potter"</span><span class="p">,</span> <span class="s2">"J.K Rowling"</span><span class="p">]])</span>
</code></pre></div></div>

<p><em>Paarth Madan</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow warning codes to be ignore when reporting SQL warnings.
</title>
    <link>https://github.com/rails/rails/issues/47650</link>
    <guid>https://github.com/rails/rails/issues/47650</guid>
    <description>*   Allow warning codes to be ignore when reporting SQL warnings.

    Active Record config that can ignore warning codes

    ```ruby
    # Configure allowlist of warnings that should always be ignored
    config.active_record.db_warnings_ignore = [
      &quot;1062&quot;, # MySQL Error 1062: Duplicate entry
    ]
    ```

    This is supported for the MySQL and PostgreSQL adapters.

    *Nick Borromeo*</description>
    <pubDate>Tue, 21 Mar 2023 03:08:49 +0000</pubDate>
    <author>Nick Borromeo</author>
    <content:encoded><![CDATA[<p>Allow warning codes to be ignore when reporting SQL warnings.</p>

<p>Active Record config that can ignore warning codes</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Configure allowlist of warnings that should always be ignored</span>
<span class="n">config</span><span class="p">.</span><span class="nf">active_record</span><span class="p">.</span><span class="nf">db_warnings_ignore</span> <span class="o">=</span> <span class="p">[</span>
  <span class="s2">"1062"</span><span class="p">,</span> <span class="c1"># MySQL Error 1062: Duplicate entry</span>
<span class="p">]</span>
</code></pre></div></div>

<p>This is supported for the MySQL and PostgreSQL adapters.</p>

<p><em>Nick Borromeo</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Introduce `:active_record_fixtures` lazy load hook.
</title>
    <link>https://github.com/rails/rails/issues/47690</link>
    <guid>https://github.com/rails/rails/issues/47690</guid>
    <description>*   Introduce `:active_record_fixtures` lazy load hook.

    Hooks defined with this name will be run whenever `TestFixtures` is included
    in a class.

    ```ruby
    ActiveSupport.on_load(:active_record_fixtures) do
      self.fixture_paths &lt;&lt; &quot;test/fixtures&quot;
    end

    klass = Class.new
    klass.include(ActiveRecord::TestFixtures)

    klass.fixture_paths # =&gt; [&quot;test/fixtures&quot;]
    ```

    *Andrew Novoselac*</description>
    <pubDate>Fri, 17 Mar 2023 18:10:52 +0000</pubDate>
    <author>Andrew Novoselac</author>
    <content:encoded><![CDATA[<p>Introduce <code>:active_record_fixtures</code> lazy load hook.</p>

<p>Hooks defined with this name will be run whenever <code>TestFixtures</code> is included<br />
in a class.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="p">.</span><span class="nf">on_load</span><span class="p">(</span><span class="ss">:active_record_fixtures</span><span class="p">)</span> <span class="k">do</span>
  <span class="nb">self</span><span class="p">.</span><span class="nf">fixture_paths</span> <span class="o">&lt;&lt;</span> <span class="s2">"test/fixtures"</span>
<span class="k">end</span>

<span class="n">klass</span> <span class="o">=</span> <span class="no">Class</span><span class="p">.</span><span class="nf">new</span>
<span class="n">klass</span><span class="p">.</span><span class="nf">include</span><span class="p">(</span><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">TestFixtures</span><span class="p">)</span>

<span class="n">klass</span><span class="p">.</span><span class="nf">fixture_paths</span> <span class="c1"># =&gt; ["test/fixtures"]</span>
</code></pre></div></div>

<p><em>Andrew Novoselac</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Introduce `TestFixtures#fixture_paths`.
</title>
    <link>https://github.com/rails/rails/issues/47675</link>
    <guid>https://github.com/rails/rails/issues/47675</guid>
    <description>*   Introduce `TestFixtures#fixture_paths`.

    Multiple fixture paths can now be specified using the `#fixture_paths` accessor.
    Apps will continue to have `test/fixtures` as their one fixture path by default,
    but additional fixture paths can be specified.

    ```ruby
    ActiveSupport::TestCase.fixture_paths &lt;&lt; &quot;component1/test/fixtures&quot;
    ActiveSupport::TestCase.fixture_paths &lt;&lt; &quot;component2/test/fixtures&quot;
    ```

    `TestFixtures#fixture_path` is now deprecated.

    *Andrew Novoselac*</description>
    <pubDate>Wed, 15 Mar 2023 13:05:44 +0000</pubDate>
    <author>Andrew Novoselac</author>
    <content:encoded><![CDATA[<p>Introduce <code>TestFixtures#fixture_paths</code>.</p>

<p>Multiple fixture paths can now be specified using the <code>#fixture_paths</code> accessor.<br />
Apps will continue to have <code>test/fixtures</code> as their one fixture path by default,<br />
but additional fixture paths can be specified.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span><span class="p">.</span><span class="nf">fixture_paths</span> <span class="o">&lt;&lt;</span> <span class="s2">"component1/test/fixtures"</span>
<span class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span><span class="p">.</span><span class="nf">fixture_paths</span> <span class="o">&lt;&lt;</span> <span class="s2">"component2/test/fixtures"</span>
</code></pre></div></div>

<p><code>TestFixtures#fixture_path</code> is now deprecated.</p>

<p><em>Andrew Novoselac</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Adds support for deferrable exclude constraints in PostgreSQL.
</title>
    <link>https://github.com/rails/rails/issues/47655</link>
    <guid>https://github.com/rails/rails/issues/47655</guid>
    <description>*   Adds support for deferrable exclude constraints in PostgreSQL.

    By default, exclude constraints in PostgreSQL are checked after each statement.
    This works for most use cases, but becomes a major limitation when replacing
    records with overlapping ranges by using multiple statements.

    ```ruby
    exclusion_constraint :users, &quot;daterange(valid_from, valid_to) WITH &amp;&amp;&quot;, deferrable: :immediate
    ```

    Passing `deferrable: :immediate` checks constraint after each statement,
    but allows manually deferring the check using `SET CONSTRAINTS ALL DEFERRED`
    within a transaction. This will cause the excludes to be checked after the transaction.

    It&#39;s also possible to change the default behavior from an immediate check
    (after the statement), to a deferred check (after the transaction):

    ```ruby
    exclusion_constraint :users, &quot;daterange(valid_from, valid_to) WITH &amp;&amp;&quot;, deferrable: :deferred
    ```

    *Hiroyuki Ishii*</description>
    <pubDate>Tue, 14 Mar 2023 23:27:01 +0000</pubDate>
    <author>alpaca-tc</author>
    <content:encoded><![CDATA[<p>Adds support for deferrable exclude constraints in PostgreSQL.</p>

<p>By default, exclude constraints in PostgreSQL are checked after each statement.<br />
This works for most use cases, but becomes a major limitation when replacing<br />
records with overlapping ranges by using multiple statements.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exclusion_constraint</span> <span class="ss">:users</span><span class="p">,</span> <span class="s2">"daterange(valid_from, valid_to) WITH &amp;&amp;"</span><span class="p">,</span> <span class="ss">deferrable: :immediate</span>
</code></pre></div></div>

<p>Passing <code>deferrable: :immediate</code> checks constraint after each statement,<br />
but allows manually deferring the check using <code>SET CONSTRAINTS ALL DEFERRED</code><br />
within a transaction. This will cause the excludes to be checked after the transaction.</p>

<p>It’s also possible to change the default behavior from an immediate check<br />
(after the statement), to a deferred check (after the transaction):</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exclusion_constraint</span> <span class="ss">:users</span><span class="p">,</span> <span class="s2">"daterange(valid_from, valid_to) WITH &amp;&amp;"</span><span class="p">,</span> <span class="ss">deferrable: :deferred</span>
</code></pre></div></div>

<p><em>Hiroyuki Ishii</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Respect `foreign_type` option to `delegated_type` for `{role}_class` method.
</title>
    <link>https://github.com/rails/rails/issues/45041</link>
    <guid>https://github.com/rails/rails/issues/45041</guid>
    <description>*   Respect `foreign_type` option to `delegated_type` for `{role}_class` method.

    Usage of `delegated_type` with non-conventional `{role}_type` column names can now be specified with `foreign_type` option.
    This option is the same as `foreign_type` as forwarded to the underlying `belongs_to` association that `delegated_type` wraps.

    *Jason Karns*</description>
    <pubDate>Tue, 14 Mar 2023 13:58:32 +0000</pubDate>
    <author>Jason Karns</author>
    <content:encoded><![CDATA[<p>Respect <code>foreign_type</code> option to <code>delegated_type</code> for <code>{role}_class</code> method.</p>

<p>Usage of <code>delegated_type</code> with non-conventional <code>{role}_type</code> column names can now be specified with <code>foreign_type</code> option.<br />
This option is the same as <code>foreign_type</code> as forwarded to the underlying <code>belongs_to</code> association that <code>delegated_type</code> wraps.</p>

<p><em>Jason Karns</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add support for unique constraints (PostgreSQL-only).
</title>
    <link>https://github.com/rails/rails/issues/46192</link>
    <guid>https://github.com/rails/rails/issues/46192</guid>
    <description>*   Add support for unique constraints (PostgreSQL-only).

    ```ruby
    add_unique_key :sections, [:position], deferrable: :deferred, name: &quot;unique_section_position&quot;
    remove_unique_key :sections, name: &quot;unique_section_position&quot;
    ```

    See PostgreSQL&#39;s [Unique Constraints](https://www.postgresql.org/docs/current/ddl-constraints.html#DDL-CONSTRAINTS-UNIQUE-CONSTRAINTS) documentation for more on unique constraints.

    By default, unique constraints in PostgreSQL are checked after each statement.
    This works for most use cases, but becomes a major limitation when replacing
    records with unique column by using multiple statements.

    An example of swapping unique columns between records.

    ```ruby
    # position is unique column
    old_item = Item.create!(position: 1)
    new_item = Item.create!(position: 2)

    Item.transaction do
      old_item.update!(position: 2)
      new_item.update!(position: 1)
    end
    ```

    Using the default behavior, the transaction would fail when executing the
    first `UPDATE` statement.

    By passing the `:deferrable` option to the `add_unique_key` statement in
    migrations, it&#39;s possible to defer this check.

    ```ruby
    add_unique_key :items, [:position], deferrable: :immediate
    ```

    Passing `deferrable: :immediate` does not change the behaviour of the previous example,
    but allows manually deferring the check using `SET CONSTRAINTS ALL DEFERRED` within a transaction.
    This will cause the unique constraints to be checked after the transaction.

    It&#39;s also possible to adjust the default behavior from an immediate
    check (after the statement), to a deferred check (after the transaction):

    ```ruby
    add_unique_key :items, [:position], deferrable: :deferred
    ```

    If you want to change an existing unique index to deferrable, you can use :using_index
    to create deferrable unique constraints.

    ```ruby
    add_unique_key :items, deferrable: :deferred, using_index: &quot;index_items_on_position&quot;
    ```

    *Hiroyuki Ishii*</description>
    <pubDate>Sun, 12 Mar 2023 09:31:38 +0000</pubDate>
    <author>alpaca-tc</author>
    <content:encoded><![CDATA[<p>Add support for unique constraints (PostgreSQL-only).</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_unique_key</span> <span class="ss">:sections</span><span class="p">,</span> <span class="p">[</span><span class="ss">:position</span><span class="p">],</span> <span class="ss">deferrable: :deferred</span><span class="p">,</span> <span class="ss">name: </span><span class="s2">"unique_section_position"</span>
<span class="n">remove_unique_key</span> <span class="ss">:sections</span><span class="p">,</span> <span class="ss">name: </span><span class="s2">"unique_section_position"</span>
</code></pre></div></div>

<p>See PostgreSQL’s <a href="https://www.postgresql.org/docs/current/ddl-constraints.html#DDL-CONSTRAINTS-UNIQUE-CONSTRAINTS">Unique Constraints</a> documentation for more on unique constraints.</p>

<p>By default, unique constraints in PostgreSQL are checked after each statement.<br />
This works for most use cases, but becomes a major limitation when replacing<br />
records with unique column by using multiple statements.</p>

<p>An example of swapping unique columns between records.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># position is unique column</span>
<span class="n">old_item</span> <span class="o">=</span> <span class="no">Item</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span><span class="ss">position: </span><span class="mi">1</span><span class="p">)</span>
<span class="n">new_item</span> <span class="o">=</span> <span class="no">Item</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span><span class="ss">position: </span><span class="mi">2</span><span class="p">)</span>

<span class="no">Item</span><span class="p">.</span><span class="nf">transaction</span> <span class="k">do</span>
  <span class="n">old_item</span><span class="p">.</span><span class="nf">update!</span><span class="p">(</span><span class="ss">position: </span><span class="mi">2</span><span class="p">)</span>
  <span class="n">new_item</span><span class="p">.</span><span class="nf">update!</span><span class="p">(</span><span class="ss">position: </span><span class="mi">1</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Using the default behavior, the transaction would fail when executing the<br />
first <code>UPDATE</code> statement.</p>

<p>By passing the <code>:deferrable</code> option to the <code>add_unique_key</code> statement in<br />
migrations, it’s possible to defer this check.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_unique_key</span> <span class="ss">:items</span><span class="p">,</span> <span class="p">[</span><span class="ss">:position</span><span class="p">],</span> <span class="ss">deferrable: :immediate</span>
</code></pre></div></div>

<p>Passing <code>deferrable: :immediate</code> does not change the behaviour of the previous example,<br />
but allows manually deferring the check using <code>SET CONSTRAINTS ALL DEFERRED</code> within a transaction.<br />
This will cause the unique constraints to be checked after the transaction.</p>

<p>It’s also possible to adjust the default behavior from an immediate<br />
check (after the statement), to a deferred check (after the transaction):</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_unique_key</span> <span class="ss">:items</span><span class="p">,</span> <span class="p">[</span><span class="ss">:position</span><span class="p">],</span> <span class="ss">deferrable: :deferred</span>
</code></pre></div></div>

<p>If you want to change an existing unique index to deferrable, you can use :using_index<br />
to create deferrable unique constraints.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_unique_key</span> <span class="ss">:items</span><span class="p">,</span> <span class="ss">deferrable: :deferred</span><span class="p">,</span> <span class="ss">using_index: </span><span class="s2">"index_items_on_position"</span>
</code></pre></div></div>

<p><em>Hiroyuki Ishii</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Remove deprecated `Tasks::DatabaseTasks.schema_file_type`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated `Tasks::DatabaseTasks.schema_file_type`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated <code>Tasks::DatabaseTasks.schema_file_type</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Remove deprecated `config.active_record.partial_writes`.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated `config.active_record.partial_writes`.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated <code>config.active_record.partial_writes</code>.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Remove deprecated `ActiveRecord::Base` config accessors.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   Remove deprecated `ActiveRecord::Base` config accessors.

    *Rafael Mendonça França*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Remove deprecated <code>ActiveRecord::Base</code> config accessors.</p>

<p><em>Rafael Mendonça França</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Remove the `:include_replicas` argument from `configs_for`. Use `:include_hidden` argument instead.
</title>
    <link>https://github.com/rails/rails/issues/47536</link>
    <guid>https://github.com/rails/rails/issues/47536</guid>
    <description>*   Remove the `:include_replicas` argument from `configs_for`. Use `:include_hidden` argument instead.

    *Eileen M. Uchitelle*</description>
    <pubDate>Tue, 28 Feb 2023 18:02:06 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Remove the <code>:include_replicas</code> argument from <code>configs_for</code>. Use <code>:include_hidden</code> argument instead.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow applications to lookup a config via a custom hash key.
</title>
    <link>https://github.com/rails/rails/issues/47536</link>
    <guid>https://github.com/rails/rails/issues/47536</guid>
    <description>*   Allow applications to lookup a config via a custom hash key.

    If you have registered a custom config or want to find configs where the hash matches a specific key, now you can pass `config_key` to `configs_for`. For example if you have a `db_config` with the key `vitess` you can look up a database configuration hash by  matching that key.

    ```ruby
    ActiveRecord::Base.configurations.configs_for(env_name: &quot;development&quot;, name: &quot;primary&quot;, config_key: :vitess)
    ActiveRecord::Base.configurations.configs_for(env_name: &quot;development&quot;, config_key: :vitess)
    ```

    *Eileen M. Uchitelle*</description>
    <pubDate>Tue, 28 Feb 2023 18:02:06 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Allow applications to lookup a config via a custom hash key.</p>

<p>If you have registered a custom config or want to find configs where the hash matches a specific key, now you can pass <code>config_key</code> to <code>configs_for</code>. For example if you have a <code>db_config</code> with the key <code>vitess</code> you can look up a database configuration hash by  matching that key.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="p">.</span><span class="nf">configurations</span><span class="p">.</span><span class="nf">configs_for</span><span class="p">(</span><span class="ss">env_name: </span><span class="s2">"development"</span><span class="p">,</span> <span class="ss">name: </span><span class="s2">"primary"</span><span class="p">,</span> <span class="ss">config_key: :vitess</span><span class="p">)</span>
<span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="p">.</span><span class="nf">configurations</span><span class="p">.</span><span class="nf">configs_for</span><span class="p">(</span><span class="ss">env_name: </span><span class="s2">"development"</span><span class="p">,</span> <span class="ss">config_key: :vitess</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow applications to register a custom database configuration handler.
</title>
    <link>https://github.com/rails/rails/issues/47522</link>
    <guid>https://github.com/rails/rails/issues/47522</guid>
    <description>*   Allow applications to register a custom database configuration handler.

    Adds a mechanism for registering a custom handler for cases where you want database configurations to respond to custom methods. This is useful for non-Rails database adapters or tools like Vitess that you may want to configure differently from a standard `HashConfig` or `UrlConfig`.

    Given the following database YAML we want the `animals` db to create a `CustomConfig` object instead while the `primary` database will be a `UrlConfig`:

    ```yaml
    development:
      primary:
        url: postgres://localhost/primary
      animals:
        url: postgres://localhost/animals
        custom_config:
          sharded: 1
    ```

    To register a custom handler first make a class that has your custom methods:

    ```ruby
    class CustomConfig &lt; ActiveRecord::DatabaseConfigurations::UrlConfig
      def sharded?
        custom_config.fetch(&quot;sharded&quot;, false)
      end

      private
        def custom_config
          configuration_hash.fetch(:custom_config)
        end
    end
    ```

    Then register the config in an initializer:

    ```ruby
    ActiveRecord::DatabaseConfigurations.register_db_config_handler do |env_name, name, url, config|
      next unless config.key?(:custom_config)
      CustomConfig.new(env_name, name, url, config)
    end
    ```

    When the application is booted, configuration hashes with the `:custom_config` key will be `CustomConfig` objects and respond to `sharded?`. Applications must handle the condition in which Active Record should use their custom handler.

    *Eileen M. Uchitelle and John Crepezzi*</description>
    <pubDate>Tue, 28 Feb 2023 16:01:28 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Allow applications to register a custom database configuration handler.</p>

<p>Adds a mechanism for registering a custom handler for cases where you want database configurations to respond to custom methods. This is useful for non-Rails database adapters or tools like Vitess that you may want to configure differently from a standard <code>HashConfig</code> or <code>UrlConfig</code>.</p>

<p>Given the following database YAML we want the <code>animals</code> db to create a <code>CustomConfig</code> object instead while the <code>primary</code> database will be a <code>UrlConfig</code>:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">development</span><span class="pi">:</span>
  <span class="na">primary</span><span class="pi">:</span>
    <span class="na">url</span><span class="pi">:</span> <span class="s">postgres://localhost/primary</span>
  <span class="na">animals</span><span class="pi">:</span>
    <span class="na">url</span><span class="pi">:</span> <span class="s">postgres://localhost/animals</span>
    <span class="na">custom_config</span><span class="pi">:</span>
      <span class="na">sharded</span><span class="pi">:</span> <span class="m">1</span>
</code></pre></div></div>

<p>To register a custom handler first make a class that has your custom methods:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">CustomConfig</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">DatabaseConfigurations</span><span class="o">::</span><span class="no">UrlConfig</span>
  <span class="k">def</span> <span class="nf">sharded?</span>
    <span class="n">custom_config</span><span class="p">.</span><span class="nf">fetch</span><span class="p">(</span><span class="s2">"sharded"</span><span class="p">,</span> <span class="kp">false</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="kp">private</span>
    <span class="k">def</span> <span class="nf">custom_config</span>
      <span class="n">configuration_hash</span><span class="p">.</span><span class="nf">fetch</span><span class="p">(</span><span class="ss">:custom_config</span><span class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Then register the config in an initializer:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">DatabaseConfigurations</span><span class="p">.</span><span class="nf">register_db_config_handler</span> <span class="k">do</span> <span class="o">|</span><span class="n">env_name</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">config</span><span class="o">|</span>
  <span class="k">next</span> <span class="k">unless</span> <span class="n">config</span><span class="p">.</span><span class="nf">key?</span><span class="p">(</span><span class="ss">:custom_config</span><span class="p">)</span>
  <span class="no">CustomConfig</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">env_name</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">config</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<p>When the application is booted, configuration hashes with the <code>:custom_config</code> key will be <code>CustomConfig</code> objects and respond to <code>sharded?</code>. Applications must handle the condition in which Active Record should use their custom handler.</p>

<p><em>Eileen M. Uchitelle and John Crepezzi</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `ActiveRecord::Base.serialize` no longer uses YAML by default.
</title>
    <link>https://github.com/rails/rails/issues/47492</link>
    <guid>https://github.com/rails/rails/issues/47492</guid>
    <description>*   `ActiveRecord::Base.serialize` no longer uses YAML by default.

    YAML isn&#39;t particularly performant and can lead to security issues
    if not used carefully.

    Unfortunately there isn&#39;t really any good serializers in Ruby&#39;s stdlib
    to replace it.

    The obvious choice would be JSON, which is a fine format for this use case,
    however the JSON serializer in Ruby&#39;s stdlib isn&#39;t strict enough, as it fallback
    to casting unknown types to strings, which could lead to corrupted data.

    Some third party JSON libraries like `Oj` have a suitable strict mode.

    So it&#39;s preferable that users choose a serializer based on their own constraints.

    The original default can be restored by setting `config.active_record.default_column_serializer = YAML`.

    *Jean Boussier*</description>
    <pubDate>Sat, 25 Feb 2023 01:35:38 +0000</pubDate>
    <author>Carlos Antonio da Silva</author>
    <content:encoded><![CDATA[<p><code>ActiveRecord::Base.serialize</code> no longer uses YAML by default.</p>

<p>YAML isn’t particularly performant and can lead to security issues<br />
if not used carefully.</p>

<p>Unfortunately there isn’t really any good serializers in Ruby’s stdlib<br />
to replace it.</p>

<p>The obvious choice would be JSON, which is a fine format for this use case,<br />
however the JSON serializer in Ruby’s stdlib isn’t strict enough, as it fallback<br />
to casting unknown types to strings, which could lead to corrupted data.</p>

<p>Some third party JSON libraries like <code>Oj</code> have a suitable strict mode.</p>

<p>So it’s preferable that users choose a serializer based on their own constraints.</p>

<p>The original default can be restored by setting <code>config.active_record.default_column_serializer = YAML</code>.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `ActiveRecord::Base.serialize` signature changed.
</title>
    <link>https://github.com/rails/rails/issues/47492</link>
    <guid>https://github.com/rails/rails/issues/47492</guid>
    <description>*   `ActiveRecord::Base.serialize` signature changed.

    Rather than a single positional argument that accepts two possible
    types of values, `serialize` now accepts two distinct keyword arguments.

    Before:

    ```ruby
      serialize :content, JSON
      serialize :backtrace, Array
    ```

    After:

    ```ruby
      serialize :content, coder: JSON
      serialize :backtrace, type: Array
    ```

    *Jean Boussier*</description>
    <pubDate>Sat, 25 Feb 2023 01:35:38 +0000</pubDate>
    <author>Carlos Antonio da Silva</author>
    <content:encoded><![CDATA[<p><code>ActiveRecord::Base.serialize</code> signature changed.</p>

<p>Rather than a single positional argument that accepts two possible<br />
types of values, <code>serialize</code> now accepts two distinct keyword arguments.</p>

<p>Before:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">serialize</span> <span class="ss">:content</span><span class="p">,</span> <span class="no">JSON</span>
  <span class="n">serialize</span> <span class="ss">:backtrace</span><span class="p">,</span> <span class="no">Array</span>
</code></pre></div></div>

<p>After:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">serialize</span> <span class="ss">:content</span><span class="p">,</span> <span class="ss">coder: </span><span class="no">JSON</span>
  <span class="n">serialize</span> <span class="ss">:backtrace</span><span class="p">,</span> <span class="ss">type: </span><span class="no">Array</span>
</code></pre></div></div>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: YAML columns use `YAML.safe_dump` is available.
</title>
    <link>https://github.com/rails/rails/issues/47103</link>
    <guid>https://github.com/rails/rails/issues/47103</guid>
    <description>*   YAML columns use `YAML.safe_dump` is available.

    As of `psych 5.1.0`, `YAML.safe_dump` can now apply the same permitted
    types restrictions than `YAML.safe_load`.

    It&#39;s preferable to ensure the payload only use allowed types when we first
    try to serialize it, otherwise you may end up with invalid records in the
    database.

    *Jean Boussier*</description>
    <pubDate>Mon, 13 Feb 2023 16:14:41 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>YAML columns use <code>YAML.safe_dump</code> is available.</p>

<p>As of <code>psych 5.1.0</code>, <code>YAML.safe_dump</code> can now apply the same permitted<br />
types restrictions than <code>YAML.safe_load</code>.</p>

<p>It’s preferable to ensure the payload only use allowed types when we first<br />
try to serialize it, otherwise you may end up with invalid records in the<br />
database.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `ActiveRecord::QueryLogs` better handle broken encoding.
</title>
    <link>https://github.com/rails/rails/issues/47214</link>
    <guid>https://github.com/rails/rails/issues/47214</guid>
    <description>*   `ActiveRecord::QueryLogs` better handle broken encoding.

    It&#39;s not uncommon when building queries with BLOB fields to contain
    binary data. Unless the call carefully encode the string in ASCII-8BIT
    it generally end up being encoded in `UTF-8`, and `QueryLogs` would
    end up failing on it.

    `ActiveRecord::QueryLogs` no longer depend on the query to be properly encoded.

    *Jean Boussier*</description>
    <pubDate>Wed, 01 Feb 2023 13:20:48 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>ActiveRecord::QueryLogs</code> better handle broken encoding.</p>

<p>It’s not uncommon when building queries with BLOB fields to contain<br />
binary data. Unless the call carefully encode the string in ASCII-8BIT<br />
it generally end up being encoded in <code>UTF-8</code>, and <code>QueryLogs</code> would<br />
end up failing on it.</p>

<p><code>ActiveRecord::QueryLogs</code> no longer depend on the query to be properly encoded.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix a bug where `ActiveRecord::Generators::ModelGenerator` would not respect create_table_migration template overrides.
</title>
    <link>https://github.com/rails/rails/issues/47181</link>
    <guid>https://github.com/rails/rails/issues/47181</guid>
    <description>*   Fix a bug where `ActiveRecord::Generators::ModelGenerator` would not respect create_table_migration template overrides.

    ```
    rails g model create_books title:string content:text
    ```
    will now read from the create_table_migration.rb.tt template in the following locations in order:
    ```
    lib/templates/active_record/model/create_table_migration.rb
    lib/templates/active_record/migration/create_table_migration.rb
    ```

    *Spencer Neste*</description>
    <pubDate>Wed, 24 May 2023 23:28:05 +0000</pubDate>
    <author>Spencer Neste</author>
    <content:encoded><![CDATA[<p>Fix a bug where <code>ActiveRecord::Generators::ModelGenerator</code> would not respect create_table_migration template overrides.</p>

<pre><code>rails g model create_books title:string content:text
</code></pre>
<p>will now read from the create_table_migration.rb.tt template in the following locations in order:</p>
<pre><code>lib/templates/active_record/model/create_table_migration.rb
lib/templates/active_record/migration/create_table_migration.rb
</code></pre>

<p><em>Spencer Neste</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `ActiveRecord::Relation#explain` now accepts options.
</title>
    <link>https://github.com/rails/rails/issues/47043</link>
    <guid>https://github.com/rails/rails/issues/47043</guid>
    <description>*   `ActiveRecord::Relation#explain` now accepts options.

    For databases and adapters which support them (currently PostgreSQL
    and MySQL), options can be passed to `explain` to provide more
    detailed query plan analysis:

    ```ruby
    Customer.where(id: 1).joins(:orders).explain(:analyze, :verbose)
    ```

    *Reid Lynch*</description>
    <pubDate>Tue, 24 Jan 2023 16:57:53 +0000</pubDate>
    <author>Reid Lynch</author>
    <content:encoded><![CDATA[<p><code>ActiveRecord::Relation#explain</code> now accepts options.</p>

<p>For databases and adapters which support them (currently PostgreSQL<br />
and MySQL), options can be passed to <code>explain</code> to provide more<br />
detailed query plan analysis:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Customer</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="ss">id: </span><span class="mi">1</span><span class="p">).</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:orders</span><span class="p">).</span><span class="nf">explain</span><span class="p">(</span><span class="ss">:analyze</span><span class="p">,</span> <span class="ss">:verbose</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Reid Lynch</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Multiple `Arel::Nodes::SqlLiteral` nodes can now be added together to
</title>
    <link>https://github.com/rails/rails/issues/46948</link>
    <guid>https://github.com/rails/rails/issues/46948</guid>
    <description>*   Multiple `Arel::Nodes::SqlLiteral` nodes can now be added together to
    form `Arel::Nodes::Fragments` nodes. This allows joining several pieces
    of SQL.

    *Matthew Draper*, *Ole Friis*</description>
    <pubDate>Thu, 19 Jan 2023 11:26:08 +0000</pubDate>
    <author>Ole Friis</author>
    <content:encoded><![CDATA[<p>Multiple <code>Arel::Nodes::SqlLiteral</code> nodes can now be added together to<br />
form <code>Arel::Nodes::Fragments</code> nodes. This allows joining several pieces<br />
of SQL.</p>

<p><em>Matthew Draper</em>, <em>Ole Friis</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `ActiveRecord::Base#signed_id` raises if called on a new record.
</title>
    <link>https://github.com/rails/rails/issues/47556</link>
    <guid>https://github.com/rails/rails/issues/47556</guid>
    <description>*   `ActiveRecord::Base#signed_id` raises if called on a new record.

    Previously it would return an ID that was not usable, since it was based on `id = nil`.

    *Alex Ghiculescu*</description>
    <pubDate>Fri, 03 Mar 2023 01:08:49 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p><code>ActiveRecord::Base#signed_id</code> raises if called on a new record.</p>

<p>Previously it would return an ID that was not usable, since it was based on <code>id = nil</code>.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow SQL warnings to be reported.
</title>
    <link>https://github.com/rails/rails/issues/46690</link>
    <guid>https://github.com/rails/rails/issues/46690</guid>
    <description>*   Allow SQL warnings to be reported.

    Active Record configs can be set to enable SQL warning reporting.

    ```ruby
    # Configure action to take when SQL query produces warning
    config.active_record.db_warnings_action = :raise

    # Configure allowlist of warnings that should always be ignored
    config.active_record.db_warnings_ignore = [
      /Invalid utf8mb4 character string/,
      &quot;An exact warning message&quot;,
    ]
    ```

    This is supported for the MySQL and PostgreSQL adapters.

    *Adrianna Chang*, *Paarth Madan*</description>
    <pubDate>Wed, 18 Jan 2023 07:20:53 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Allow SQL warnings to be reported.</p>

<p>Active Record configs can be set to enable SQL warning reporting.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Configure action to take when SQL query produces warning</span>
<span class="n">config</span><span class="p">.</span><span class="nf">active_record</span><span class="p">.</span><span class="nf">db_warnings_action</span> <span class="o">=</span> <span class="ss">:raise</span>

<span class="c1"># Configure allowlist of warnings that should always be ignored</span>
<span class="n">config</span><span class="p">.</span><span class="nf">active_record</span><span class="p">.</span><span class="nf">db_warnings_ignore</span> <span class="o">=</span> <span class="p">[</span>
  <span class="sr">/Invalid utf8mb4 character string/</span><span class="p">,</span>
  <span class="s2">"An exact warning message"</span><span class="p">,</span>
<span class="p">]</span>
</code></pre></div></div>

<p>This is supported for the MySQL and PostgreSQL adapters.</p>

<p><em>Adrianna Chang</em>, <em>Paarth Madan</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `#regroup` query method as a short-hand for `.unscope(:group).group(fields)`
</title>
    <link>https://github.com/rails/rails/issues/47010</link>
    <guid>https://github.com/rails/rails/issues/47010</guid>
    <description>*   Add `#regroup` query method as a short-hand for `.unscope(:group).group(fields)`

    Example:

    ```ruby
    Post.group(:title).regroup(:author)
    # SELECT `posts`.`*` FROM `posts` GROUP BY `posts`.`author`
    ```

    *Danielius Visockas*</description>
    <pubDate>Mon, 16 Jan 2023 17:09:22 +0000</pubDate>
    <author>Danielius</author>
    <content:encoded><![CDATA[<p>Add <code>#regroup</code> query method as a short-hand for <code>.unscope(:group).group(fields)</code></p>

<p>Example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span><span class="p">.</span><span class="nf">group</span><span class="p">(</span><span class="ss">:title</span><span class="p">).</span><span class="nf">regroup</span><span class="p">(</span><span class="ss">:author</span><span class="p">)</span>
<span class="c1"># SELECT `posts`.`*` FROM `posts` GROUP BY `posts`.`author`</span>
</code></pre></div></div>

<p><em>Danielius Visockas</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: PostgreSQL adapter method `enable_extension` now allows parameter to be `[schema_name.]&lt;extension_name&gt;`
</title>
    <link>https://github.com/rails/rails/issues/46894</link>
    <guid>https://github.com/rails/rails/issues/46894</guid>
    <description>*   PostgreSQL adapter method `enable_extension` now allows parameter to be `[schema_name.]&lt;extension_name&gt;`
    if the extension must be installed on another schema.

    Example: `enable_extension(&#39;heroku_ext.hstore&#39;)`

    *Leonardo Luarte*</description>
    <pubDate>Tue, 10 Jan 2023 05:28:49 +0000</pubDate>
    <author>Leonardo Luarte González</author>
    <content:encoded><![CDATA[<p>PostgreSQL adapter method <code>enable_extension</code> now allows parameter to be <code>[schema_name.]&lt;extension_name&gt;</code><br />
if the extension must be installed on another schema.</p>

<p>Example: <code>enable_extension('heroku_ext.hstore')</code></p>

<p><em>Leonardo Luarte</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `:include` option to `add_index`.
</title>
    <link>https://github.com/rails/rails/issues/44803</link>
    <guid>https://github.com/rails/rails/issues/44803</guid>
    <description>*   Add `:include` option to `add_index`.

    Add support for including non-key columns in indexes for PostgreSQL
    with the `INCLUDE` parameter.

    ```ruby
    add_index(:users, :email, include: [:id, :created_at])
    ```

    will result in:

    ```sql
    CREATE INDEX index_users_on_email USING btree (email) INCLUDE (id, created_at)
    ```

    *Steve Abrams*</description>
    <pubDate>Wed, 22 Feb 2023 09:25:37 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>Add <code>:include</code> option to <code>add_index</code>.</p>

<p>Add support for including non-key columns in indexes for PostgreSQL<br />
with the <code>INCLUDE</code> parameter.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_index</span><span class="p">(</span><span class="ss">:users</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">include: </span><span class="p">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:created_at</span><span class="p">])</span>
</code></pre></div></div>

<p>will result in:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">INDEX</span> <span class="n">index_users_on_email</span> <span class="k">USING</span> <span class="n">btree</span> <span class="p">(</span><span class="n">email</span><span class="p">)</span> <span class="n">INCLUDE</span> <span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">created_at</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Steve Abrams</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `ActiveRecord::Relation`’s `#any?`, `#none?`, and `#one?` methods take an optional pattern
</title>
    <link>https://github.com/rails/rails/issues/46728</link>
    <guid>https://github.com/rails/rails/issues/46728</guid>
    <description>*   `ActiveRecord::Relation`’s `#any?`, `#none?`, and `#one?` methods take an optional pattern
    argument, more closely matching their `Enumerable` equivalents.

    *George Claghorn*</description>
    <pubDate>Thu, 22 Dec 2022 08:01:00 +0000</pubDate>
    <author>George Claghorn</author>
    <content:encoded><![CDATA[<p><code>ActiveRecord::Relation</code>’s <code>#any?</code>, <code>#none?</code>, and <code>#one?</code> methods take an optional pattern<br />
argument, more closely matching their <code>Enumerable</code> equivalents.</p>

<p><em>George Claghorn</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `ActiveRecord::Base::normalizes` to declare attribute normalizations.
</title>
    <link>https://github.com/rails/rails/issues/43945</link>
    <guid>https://github.com/rails/rails/issues/43945</guid>
    <description>*   Add `ActiveRecord::Base::normalizes` to declare attribute normalizations.

    A normalization is applied when the attribute is assigned or updated, and
    the normalized value will be persisted to the database.  The normalization
    is also applied to the corresponding keyword argument of finder methods.
    This allows a record to be created and later queried using unnormalized
    values.  For example:

      ```ruby
      class User &lt; ActiveRecord::Base
        normalizes :email, with: -&gt; email { email.strip.downcase }
      end

      user = User.create(email: &quot; CRUISE-CONTROL@EXAMPLE.COM\n&quot;)
      user.email                  # =&gt; &quot;cruise-control@example.com&quot;

      user = User.find_by(email: &quot;\tCRUISE-CONTROL@EXAMPLE.COM &quot;)
      user.email                  # =&gt; &quot;cruise-control@example.com&quot;
      user.email_before_type_cast # =&gt; &quot;cruise-control@example.com&quot;

      User.exists?(email: &quot;\tCRUISE-CONTROL@EXAMPLE.COM &quot;)         # =&gt; true
      User.exists?([&quot;email = ?&quot;, &quot;\tCRUISE-CONTROL@EXAMPLE.COM &quot;]) # =&gt; false
      ```

    *Jonathan Hefner*</description>
    <pubDate>Wed, 21 Dec 2022 20:07:55 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Add <code>ActiveRecord::Base::normalizes</code> to declare attribute normalizations.</p>

<p>A normalization is applied when the attribute is assigned or updated, and<br />
the normalized value will be persisted to the database.  The normalization<br />
is also applied to the corresponding keyword argument of finder methods.<br />
This allows a record to be created and later queried using unnormalized<br />
values.  For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
    <span class="n">normalizes</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">with: </span><span class="o">-&gt;</span> <span class="n">email</span> <span class="p">{</span> <span class="n">email</span><span class="p">.</span><span class="nf">strip</span><span class="p">.</span><span class="nf">downcase</span> <span class="p">}</span>
  <span class="k">end</span>

  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">email: </span><span class="s2">" CRUISE-CONTROL@EXAMPLE.COM</span><span class="se">\n</span><span class="s2">"</span><span class="p">)</span>
  <span class="n">user</span><span class="p">.</span><span class="nf">email</span>                  <span class="c1"># =&gt; "cruise-control@example.com"</span>

  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">email: </span><span class="s2">"</span><span class="se">\t</span><span class="s2">CRUISE-CONTROL@EXAMPLE.COM "</span><span class="p">)</span>
  <span class="n">user</span><span class="p">.</span><span class="nf">email</span>                  <span class="c1"># =&gt; "cruise-control@example.com"</span>
  <span class="n">user</span><span class="p">.</span><span class="nf">email_before_type_cast</span> <span class="c1"># =&gt; "cruise-control@example.com"</span>

  <span class="no">User</span><span class="p">.</span><span class="nf">exists?</span><span class="p">(</span><span class="ss">email: </span><span class="s2">"</span><span class="se">\t</span><span class="s2">CRUISE-CONTROL@EXAMPLE.COM "</span><span class="p">)</span>         <span class="c1"># =&gt; true</span>
  <span class="no">User</span><span class="p">.</span><span class="nf">exists?</span><span class="p">([</span><span class="s2">"email = ?"</span><span class="p">,</span> <span class="s2">"</span><span class="se">\t</span><span class="s2">CRUISE-CONTROL@EXAMPLE.COM "</span><span class="p">])</span> <span class="c1"># =&gt; false</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Hide changes to before_committed! callback behaviour behind flag.
</title>
    <link>https://github.com/rails/rails/issues/46739</link>
    <guid>https://github.com/rails/rails/issues/46739</guid>
    <description>*   Hide changes to before_committed! callback behaviour behind flag.

    In #46525, behavior around before_committed! callbacks was changed so that callbacks
    would run on every enrolled record in a transaction, not just the first copy of a record.
    This change in behavior is now controlled by a configuration option,
    `config.active_record.before_committed_on_all_records`. It will be enabled by default on Rails 7.1.

    *Adrianna Chang*</description>
    <pubDate>Thu, 15 Dec 2022 17:09:15 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Hide changes to before_committed! callback behaviour behind flag.</p>

<p>In #46525, behavior around before_committed! callbacks was changed so that callbacks<br />
would run on every enrolled record in a transaction, not just the first copy of a record.<br />
This change in behavior is now controlled by a configuration option,<br />
<code>config.active_record.before_committed_on_all_records</code>. It will be enabled by default on Rails 7.1.</p>

<p><em>Adrianna Chang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: The `namespaced_controller` Query Log tag now matches the `controller` format
</title>
    <link>https://github.com/rails/rails/issues/46641</link>
    <guid>https://github.com/rails/rails/issues/46641</guid>
    <description>*   The `namespaced_controller` Query Log tag now matches the `controller` format

    For example, a request processed by `NameSpaced::UsersController` will now log as:

    ```
    :controller # &quot;users&quot;
    :namespaced_controller # &quot;name_spaced/users&quot;
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Tue, 13 Dec 2022 18:13:34 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>The <code>namespaced_controller</code> Query Log tag now matches the <code>controller</code> format</p>

<p>For example, a request processed by <code>NameSpaced::UsersController</code> will now log as:</p>

<pre><code>:controller # "users"
:namespaced_controller # "name_spaced/users"
</code></pre>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Return only unique ids from ActiveRecord::Calculations#ids
</title>
    <link>https://github.com/rails/rails/issues/46455</link>
    <guid>https://github.com/rails/rails/issues/46455</guid>
    <description>*   Return only unique ids from ActiveRecord::Calculations#ids

    Updated ActiveRecord::Calculations#ids to only return the unique ids of the base model
    when using eager_load, preload and includes.

    ```ruby
    Post.find_by(id: 1).comments.count
    # =&gt; 5
    Post.includes(:comments).where(id: 1).pluck(:id)
    # =&gt; [1, 1, 1, 1, 1]
    Post.includes(:comments).where(id: 1).ids
    # =&gt; [1]
    ```

    *Joshua Young*</description>
    <pubDate>Fri, 09 Dec 2022 11:41:32 +0000</pubDate>
    <author>Joshua Young</author>
    <content:encoded><![CDATA[<p>Return only unique ids from ActiveRecord::Calculations#ids</p>

<p>Updated ActiveRecord::Calculations#ids to only return the unique ids of the base model<br />
when using eager_load, preload and includes.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">id: </span><span class="mi">1</span><span class="p">).</span><span class="nf">comments</span><span class="p">.</span><span class="nf">count</span>
<span class="c1"># =&gt; 5</span>
<span class="no">Post</span><span class="p">.</span><span class="nf">includes</span><span class="p">(</span><span class="ss">:comments</span><span class="p">).</span><span class="nf">where</span><span class="p">(</span><span class="ss">id: </span><span class="mi">1</span><span class="p">).</span><span class="nf">pluck</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span>
<span class="c1"># =&gt; [1, 1, 1, 1, 1]</span>
<span class="no">Post</span><span class="p">.</span><span class="nf">includes</span><span class="p">(</span><span class="ss">:comments</span><span class="p">).</span><span class="nf">where</span><span class="p">(</span><span class="ss">id: </span><span class="mi">1</span><span class="p">).</span><span class="nf">ids</span>
<span class="c1"># =&gt; [1]</span>
</code></pre></div></div>

<p><em>Joshua Young</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Stop using `LOWER()` for case-insensitive queries on `citext` columns
</title>
    <link>https://github.com/rails/rails/issues/46592</link>
    <guid>https://github.com/rails/rails/issues/46592</guid>
    <description>*   Stop using `LOWER()` for case-insensitive queries on `citext` columns

    Previously, `LOWER()` was added for e.g. uniqueness validations with
    `case_sensitive: false`.
    It wasn&#39;t mentioned in the documentation that the index without `LOWER()`
    wouldn&#39;t be used in this case.

    *Phil Pirozhkov*</description>
    <pubDate>Wed, 30 Nov 2022 08:12:28 +0000</pubDate>
    <author>Phil Pirozhkov</author>
    <content:encoded><![CDATA[<p>Stop using <code>LOWER()</code> for case-insensitive queries on <code>citext</code> columns</p>

<p>Previously, <code>LOWER()</code> was added for e.g. uniqueness validations with<br />
<code>case_sensitive: false</code>.<br />
It wasn’t mentioned in the documentation that the index without <code>LOWER()</code><br />
wouldn’t be used in this case.</p>

<p><em>Phil Pirozhkov</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Extract `#sync_timezone_changes` method in AbstractMysqlAdapter to enable subclasses
</title>
    <link>https://github.com/rails/rails/issues/46604</link>
    <guid>https://github.com/rails/rails/issues/46604</guid>
    <description>*   Extract `#sync_timezone_changes` method in AbstractMysqlAdapter to enable subclasses
    to sync database timezone changes without overriding `#raw_execute`.

    *Adrianna Chang*, *Paarth Madan*</description>
    <pubDate>Tue, 29 Nov 2022 19:23:13 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Extract <code>#sync_timezone_changes</code> method in AbstractMysqlAdapter to enable subclasses<br />
to sync database timezone changes without overriding <code>#raw_execute</code>.</p>

<p><em>Adrianna Chang</em>, <em>Paarth Madan</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Do not write additional new lines when dumping sql migration versions
</title>
    <link>https://github.com/rails/rails/issues/46454</link>
    <guid>https://github.com/rails/rails/issues/46454</guid>
    <description>*   Do not write additional new lines when dumping sql migration versions

    This change updates the `insert_versions_sql` function so that the database insert string containing the current database migration versions does not end with two additional new lines.

    *Misha Schwartz*</description>
    <pubDate>Mon, 28 Nov 2022 19:21:57 +0000</pubDate>
    <author>mishaschwartz</author>
    <content:encoded><![CDATA[<p>Do not write additional new lines when dumping sql migration versions</p>

<p>This change updates the <code>insert_versions_sql</code> function so that the database insert string containing the current database migration versions does not end with two additional new lines.</p>

<p><em>Misha Schwartz</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `composed_of` value freezing and duplication.
</title>
    <link>https://github.com/rails/rails/issues/46377</link>
    <guid>https://github.com/rails/rails/issues/46377</guid>
    <description>*   Fix `composed_of` value freezing and duplication.

    Previously composite values exhibited two confusing behaviors:

    - When reading a compositve value it&#39;d _NOT_ be frozen, allowing it to get out of sync with its underlying database
      columns.
    - When writing a compositve value the argument would be frozen, potentially confusing the caller.

    Currently, composite values instantiated based on database columns are frozen (addressing the first issue) and
    assigned compositve values are duplicated and the duplicate is frozen (addressing the second issue).

    *Greg Navis*</description>
    <pubDate>Fri, 25 Nov 2022 16:48:35 +0000</pubDate>
    <author>Greg Navis</author>
    <content:encoded><![CDATA[<p>Fix <code>composed_of</code> value freezing and duplication.</p>

<p>Previously composite values exhibited two confusing behaviors:</p>

<ul>
  <li>When reading a compositve value it’d <em>NOT</em> be frozen, allowing it to get out of sync with its underlying database<br />
columns.</li>
  <li>When writing a compositve value the argument would be frozen, potentially confusing the caller.</li>
</ul>

<p>Currently, composite values instantiated based on database columns are frozen (addressing the first issue) and<br />
assigned compositve values are duplicated and the duplicate is frozen (addressing the second issue).</p>

<p><em>Greg Navis</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix redundant updates to the column insensitivity cache
</title>
    <link>https://github.com/rails/rails/issues/46568</link>
    <guid>https://github.com/rails/rails/issues/46568</guid>
    <description>*   Fix redundant updates to the column insensitivity cache

    Fixed redundant queries checking column capability for insensitive
    comparison.

    *Phil Pirozhkov*</description>
    <pubDate>Fri, 25 Nov 2022 13:28:54 +0000</pubDate>
    <author>Phil Pirozhkov</author>
    <content:encoded><![CDATA[<p>Fix redundant updates to the column insensitivity cache</p>

<p>Fixed redundant queries checking column capability for insensitive<br />
comparison.</p>

<p><em>Phil Pirozhkov</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow disabling methods generated by `ActiveRecord.enum`.
</title>
    <link>https://github.com/rails/rails/issues/46490</link>
    <guid>https://github.com/rails/rails/issues/46490</guid>
    <description>*   Allow disabling methods generated by `ActiveRecord.enum`.

    *Alfred Dominic*</description>
    <pubDate>Thu, 24 Nov 2022 13:40:39 +0000</pubDate>
    <author>Alfred Dominic</author>
    <content:encoded><![CDATA[<p>Allow disabling methods generated by <code>ActiveRecord.enum</code>.</p>

<p><em>Alfred Dominic</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Avoid validating `belongs_to` association if it has not changed.
</title>
    <link>https://github.com/rails/rails/issues/46522</link>
    <guid>https://github.com/rails/rails/issues/46522</guid>
    <description>*   Avoid validating `belongs_to` association if it has not changed.

    Previously, when updating a record, Active Record will perform an extra query to check for the presence of
    `belongs_to` associations (if the presence is configured to be mandatory), even if that attribute hasn&#39;t changed.

    Currently, only `belongs_to`-related columns are checked for presence. It is possible to have orphaned records with
    this approach. To avoid this problem, you need to use a foreign key.

    This behavior can be controlled by configuration:

    ```ruby
    config.active_record.belongs_to_required_validates_foreign_key = false
    ```

    and will be disabled by default with `config.load_defaults 7.1`.

    *fatkodima*</description>
    <pubDate>Thu, 24 Nov 2022 11:22:36 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Avoid validating <code>belongs_to</code> association if it has not changed.</p>

<p>Previously, when updating a record, Active Record will perform an extra query to check for the presence of<br />
<code>belongs_to</code> associations (if the presence is configured to be mandatory), even if that attribute hasn’t changed.</p>

<p>Currently, only <code>belongs_to</code>-related columns are checked for presence. It is possible to have orphaned records with<br />
this approach. To avoid this problem, you need to use a foreign key.</p>

<p>This behavior can be controlled by configuration:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">active_record</span><span class="p">.</span><span class="nf">belongs_to_required_validates_foreign_key</span> <span class="o">=</span> <span class="kp">false</span>
</code></pre></div></div>

<p>and will be disabled by default with <code>config.load_defaults 7.1</code>.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `has_one` and `belongs_to` associations now define a `reset_association` method
</title>
    <link>https://github.com/rails/rails/issues/46165</link>
    <guid>https://github.com/rails/rails/issues/46165</guid>
    <description>*   `has_one` and `belongs_to` associations now define a `reset_association` method
    on the owner model (where `association` is the name of the association). This
    method unloads the cached associate record, if any, and causes the next access
    to query it from the database.

    *George Claghorn*</description>
    <pubDate>Wed, 23 Nov 2022 20:25:15 +0000</pubDate>
    <author>George Claghorn</author>
    <content:encoded><![CDATA[<p><code>has_one</code> and <code>belongs_to</code> associations now define a <code>reset_association</code> method<br />
on the owner model (where <code>association</code> is the name of the association). This<br />
method unloads the cached associate record, if any, and causes the next access<br />
to query it from the database.</p>

<p><em>George Claghorn</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow per attribute setting of YAML permitted classes (safe load) and unsafe load.
</title>
    <link>https://github.com/rails/rails/issues/45660</link>
    <guid>https://github.com/rails/rails/issues/45660</guid>
    <description>*   Allow per attribute setting of YAML permitted classes (safe load) and unsafe load.

    *Carlos Palhares*</description>
    <pubDate>Wed, 23 Nov 2022 18:31:12 +0000</pubDate>
    <author>Carlos Palhares</author>
    <content:encoded><![CDATA[<p>Allow per attribute setting of YAML permitted classes (safe load) and unsafe load.</p>

<p><em>Carlos Palhares</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add a build persistence method
</title>
    <link>https://github.com/rails/rails/issues/45696</link>
    <guid>https://github.com/rails/rails/issues/45696</guid>
    <description>*   Add a build persistence method

    Provides a wrapper for `new`, to provide feature parity with `create`s
    ability to create multiple records from an array of hashes, using the
    same notation as the `build` method on associations.

    *Sean Denny*</description>
    <pubDate>Wed, 23 Nov 2022 16:54:00 +0000</pubDate>
    <author>Sean Denny</author>
    <content:encoded><![CDATA[<p>Add a build persistence method</p>

<p>Provides a wrapper for <code>new</code>, to provide feature parity with <code>create</code>s<br />
ability to create multiple records from an array of hashes, using the<br />
same notation as the <code>build</code> method on associations.</p>

<p><em>Sean Denny</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Raise on assignment to readonly attributes
</title>
    <link>https://github.com/rails/rails/issues/46105</link>
    <guid>https://github.com/rails/rails/issues/46105</guid>
    <description>*   Raise on assignment to readonly attributes

    ```ruby
    class Post &lt; ActiveRecord::Base
      attr_readonly :content
    end
    Post.create!(content: &quot;cannot be updated&quot;)
    post.content # &quot;cannot be updated&quot;
    post.content = &quot;something else&quot; # =&gt; ActiveRecord::ReadonlyAttributeError
    ```

    Previously, assignment would succeed but silently not write to the database.

    This behavior can be controlled by configuration:

    ```ruby
    config.active_record.raise_on_assign_to_attr_readonly = true
    ```

    and will be enabled by default with `config.load_defaults 7.1`.

    *Alex Ghiculescu*, *Hartley McGuire*</description>
    <pubDate>Thu, 17 Nov 2022 19:28:35 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Raise on assignment to readonly attributes</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">attr_readonly</span> <span class="ss">:content</span>
<span class="k">end</span>
<span class="no">Post</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span><span class="ss">content: </span><span class="s2">"cannot be updated"</span><span class="p">)</span>
<span class="n">post</span><span class="p">.</span><span class="nf">content</span> <span class="c1"># "cannot be updated"</span>
<span class="n">post</span><span class="p">.</span><span class="nf">content</span> <span class="o">=</span> <span class="s2">"something else"</span> <span class="c1"># =&gt; ActiveRecord::ReadonlyAttributeError</span>
</code></pre></div></div>

<p>Previously, assignment would succeed but silently not write to the database.</p>

<p>This behavior can be controlled by configuration:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">active_record</span><span class="p">.</span><span class="nf">raise_on_assign_to_attr_readonly</span> <span class="o">=</span> <span class="kp">true</span>
</code></pre></div></div>

<p>and will be enabled by default with <code>config.load_defaults 7.1</code>.</p>

<p><em>Alex Ghiculescu</em>, <em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow unscoping of preload and eager_load associations
</title>
    <link>https://github.com/rails/rails/issues/45147</link>
    <guid>https://github.com/rails/rails/issues/45147</guid>
    <description>*   Allow unscoping of preload and eager_load associations

    Added the ability to unscope preload and eager_load associations just like
    includes, joins, etc. See ActiveRecord::QueryMethods::VALID_UNSCOPING_VALUES
    for the full list of supported unscopable scopes.

    ```ruby
    query.unscope(:eager_load, :preload).group(:id).select(:id)
    ```

    *David Morehouse*</description>
    <pubDate>Mon, 14 Nov 2022 23:32:37 +0000</pubDate>
    <author>Dave Morehouse</author>
    <content:encoded><![CDATA[<p>Allow unscoping of preload and eager_load associations</p>

<p>Added the ability to unscope preload and eager_load associations just like<br />
includes, joins, etc. See ActiveRecord::QueryMethods::VALID_UNSCOPING_VALUES<br />
for the full list of supported unscopable scopes.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">query</span><span class="p">.</span><span class="nf">unscope</span><span class="p">(</span><span class="ss">:eager_load</span><span class="p">,</span> <span class="ss">:preload</span><span class="p">).</span><span class="nf">group</span><span class="p">(</span><span class="ss">:id</span><span class="p">).</span><span class="nf">select</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span>
</code></pre></div></div>

<p><em>David Morehouse</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add automatic filtering of encrypted attributes on inspect
</title>
    <link>https://github.com/rails/rails/issues/46453</link>
    <guid>https://github.com/rails/rails/issues/46453</guid>
    <description>*   Add automatic filtering of encrypted attributes on inspect

    This feature is enabled by default but can be disabled with

    ```ruby
    config.active_record.encryption.add_to_filter_parameters = false
    ```

    *Hartley McGuire*</description>
    <pubDate>Sat, 12 Nov 2022 21:57:04 +0000</pubDate>
    <author>Hartley McGuire</author>
    <content:encoded><![CDATA[<p>Add automatic filtering of encrypted attributes on inspect</p>

<p>This feature is enabled by default but can be disabled with</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">config</span><span class="p">.</span><span class="nf">active_record</span><span class="p">.</span><span class="nf">encryption</span><span class="p">.</span><span class="nf">add_to_filter_parameters</span> <span class="o">=</span> <span class="kp">false</span>
</code></pre></div></div>

<p><em>Hartley McGuire</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Clear locking column on #dup
</title>
    <link>https://github.com/rails/rails/issues/46243</link>
    <guid>https://github.com/rails/rails/issues/46243</guid>
    <description>*   Clear locking column on #dup

    This change fixes not to duplicate locking_column like id and timestamps.

    ```
    car = Car.create!
    car.touch
    car.lock_version #=&gt; 1
    car.dup.lock_version #=&gt; 0
    ```

    *Shouichi Kamiya*, *Seonggi Yang*, *Ryohei UEDA*</description>
    <pubDate>Wed, 02 Nov 2022 10:35:50 +0000</pubDate>
    <author>Shouichi Kamiya</author>
    <content:encoded><![CDATA[<p>Clear locking column on #dup</p>

<p>This change fixes not to duplicate locking_column like id and timestamps.</p>

<pre><code>car = Car.create!
car.touch
car.lock_version #=&gt; 1
car.dup.lock_version #=&gt; 0
</code></pre>

<p><em>Shouichi Kamiya</em>, <em>Seonggi Yang</em>, <em>Ryohei UEDA</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Invalidate transaction as early as possible
</title>
    <link>https://github.com/rails/rails/issues/46367</link>
    <guid>https://github.com/rails/rails/issues/46367</guid>
    <description>*   Invalidate transaction as early as possible

    After rescuing a `TransactionRollbackError` exception Rails invalidates transactions earlier in the flow
    allowing the framework to skip issuing the `ROLLBACK` statement in more cases.
    Only affects adapters that have `savepoint_errors_invalidate_transactions?` configured as `true`,
    which at this point is only applicable to the `mysql2` adapter.

    *Nikita Vasilevsky*</description>
    <pubDate>Wed, 02 Nov 2022 01:20:02 +0000</pubDate>
    <author>Nikita Vasilevsky</author>
    <content:encoded><![CDATA[<p>Invalidate transaction as early as possible</p>

<p>After rescuing a <code>TransactionRollbackError</code> exception Rails invalidates transactions earlier in the flow<br />
allowing the framework to skip issuing the <code>ROLLBACK</code> statement in more cases.<br />
Only affects adapters that have <code>savepoint_errors_invalidate_transactions?</code> configured as <code>true</code>,<br />
which at this point is only applicable to the <code>mysql2</code> adapter.</p>

<p><em>Nikita Vasilevsky</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow configuring columns list to be used in SQL queries issued by an `ActiveRecord::Base` object
</title>
    <link>https://github.com/rails/rails/issues/46331</link>
    <guid>https://github.com/rails/rails/issues/46331</guid>
    <description>*   Allow configuring columns list to be used in SQL queries issued by an `ActiveRecord::Base` object

    It is now possible to configure columns list that will be used to build an SQL query clauses when
    updating, deleting or reloading an `ActiveRecord::Base` object

    ```ruby
    class Developer &lt; ActiveRecord::Base
      query_constraints :company_id, :id
    end
    developer = Developer.first.update(name: &quot;Bob&quot;)
    # =&gt; UPDATE &quot;developers&quot; SET &quot;name&quot; = &#39;Bob&#39; WHERE &quot;developers&quot;.&quot;company_id&quot; = 1 AND &quot;developers&quot;.&quot;id&quot; = 1
    ```

    *Nikita Vasilevsky*</description>
    <pubDate>Tue, 01 Nov 2022 16:06:14 +0000</pubDate>
    <author>Nikita Vasilevsky</author>
    <content:encoded><![CDATA[<p>Allow configuring columns list to be used in SQL queries issued by an <code>ActiveRecord::Base</code> object</p>

<p>It is now possible to configure columns list that will be used to build an SQL query clauses when<br />
updating, deleting or reloading an <code>ActiveRecord::Base</code> object</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Developer</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">query_constraints</span> <span class="ss">:company_id</span><span class="p">,</span> <span class="ss">:id</span>
<span class="k">end</span>
<span class="n">developer</span> <span class="o">=</span> <span class="no">Developer</span><span class="p">.</span><span class="nf">first</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="ss">name: </span><span class="s2">"Bob"</span><span class="p">)</span>
<span class="c1"># =&gt; UPDATE "developers" SET "name" = 'Bob' WHERE "developers"."company_id" = 1 AND "developers"."id" = 1</span>
</code></pre></div></div>

<p><em>Nikita Vasilevsky</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Adds `validate` to foreign keys and check constraints in schema.rb
</title>
    <link>https://github.com/rails/rails/issues/46339</link>
    <guid>https://github.com/rails/rails/issues/46339</guid>
    <description>*   Adds `validate` to foreign keys and check constraints in schema.rb

    Previously, `schema.rb` would not record if `validate: false` had been used when adding a foreign key or check
    constraint, so restoring a database from the schema could result in foreign keys or check constraints being
    incorrectly validated.

    *Tommy Graves*</description>
    <pubDate>Tue, 25 Oct 2022 23:54:16 +0000</pubDate>
    <author>Tommy Graves</author>
    <content:encoded><![CDATA[<p>Adds <code>validate</code> to foreign keys and check constraints in schema.rb</p>

<p>Previously, <code>schema.rb</code> would not record if <code>validate: false</code> had been used when adding a foreign key or check<br />
constraint, so restoring a database from the schema could result in foreign keys or check constraints being<br />
incorrectly validated.</p>

<p><em>Tommy Graves</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Adapter `#execute` methods now accept an `allow_retry` option. When set to `true`, the SQL statement will be
</title>
    <link>https://github.com/rails/rails/issues/46273</link>
    <guid>https://github.com/rails/rails/issues/46273</guid>
    <description>*   Adapter `#execute` methods now accept an `allow_retry` option. When set to `true`, the SQL statement will be
    retried, up to the database&#39;s configured `connection_retries` value, upon encountering connection-related errors.

    *Adrianna Chang*</description>
    <pubDate>Tue, 25 Oct 2022 15:45:38 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Adapter <code>#execute</code> methods now accept an <code>allow_retry</code> option. When set to <code>true</code>, the SQL statement will be<br />
retried, up to the database’s configured <code>connection_retries</code> value, upon encountering connection-related errors.</p>

<p><em>Adrianna Chang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Only trigger `after_commit :destroy` callbacks when a database row is deleted.
</title>
    <link>https://github.com/rails/rails/issues/46197</link>
    <guid>https://github.com/rails/rails/issues/46197</guid>
    <description>*   Only trigger `after_commit :destroy` callbacks when a database row is deleted.

    This prevents `after_commit :destroy` callbacks from being triggered again
    when `destroy` is called multiple times on the same record.

    *Ben Sheldon*</description>
    <pubDate>Fri, 21 Oct 2022 19:00:57 +0000</pubDate>
    <author>Ben Sheldon</author>
    <content:encoded><![CDATA[<p>Only trigger <code>after_commit :destroy</code> callbacks when a database row is deleted.</p>

<p>This prevents <code>after_commit :destroy</code> callbacks from being triggered again<br />
when <code>destroy</code> is called multiple times on the same record.</p>

<p><em>Ben Sheldon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `ciphertext_for` for yet-to-be-encrypted values.
</title>
    <link>https://github.com/rails/rails/issues/46284</link>
    <guid>https://github.com/rails/rails/issues/46284</guid>
    <description>*   Fix `ciphertext_for` for yet-to-be-encrypted values.

    Previously, `ciphertext_for` returned the cleartext of values that had not
    yet been encrypted, such as with an unpersisted record:

      ```ruby
      Post.encrypts :body

      post = Post.create!(body: &quot;Hello&quot;)
      post.ciphertext_for(:body)
      # =&gt; &quot;{\&quot;p\&quot;:\&quot;abc...&quot;

      post.body = &quot;World&quot;
      post.ciphertext_for(:body)
      # =&gt; &quot;World&quot;
      ```

    Now, `ciphertext_for` will always return the ciphertext of encrypted
    attributes:

      ```ruby
      Post.encrypts :body

      post = Post.create!(body: &quot;Hello&quot;)
      post.ciphertext_for(:body)
      # =&gt; &quot;{\&quot;p\&quot;:\&quot;abc...&quot;

      post.body = &quot;World&quot;
      post.ciphertext_for(:body)
      # =&gt; &quot;{\&quot;p\&quot;:\&quot;xyz...&quot;
      ```

    *Jonathan Hefner*</description>
    <pubDate>Thu, 20 Oct 2022 21:56:59 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Fix <code>ciphertext_for</code> for yet-to-be-encrypted values.</p>

<p>Previously, <code>ciphertext_for</code> returned the cleartext of values that had not<br />
yet been encrypted, such as with an unpersisted record:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="no">Post</span><span class="p">.</span><span class="nf">encrypts</span> <span class="ss">:body</span>

  <span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span><span class="ss">body: </span><span class="s2">"Hello"</span><span class="p">)</span>
  <span class="n">post</span><span class="p">.</span><span class="nf">ciphertext_for</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span>
  <span class="c1"># =&gt; "{\"p\":\"abc..."</span>

  <span class="n">post</span><span class="p">.</span><span class="nf">body</span> <span class="o">=</span> <span class="s2">"World"</span>
  <span class="n">post</span><span class="p">.</span><span class="nf">ciphertext_for</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span>
  <span class="c1"># =&gt; "World"</span>
</code></pre></div></div>

<p>Now, <code>ciphertext_for</code> will always return the ciphertext of encrypted<br />
attributes:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="no">Post</span><span class="p">.</span><span class="nf">encrypts</span> <span class="ss">:body</span>

  <span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span><span class="ss">body: </span><span class="s2">"Hello"</span><span class="p">)</span>
  <span class="n">post</span><span class="p">.</span><span class="nf">ciphertext_for</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span>
  <span class="c1"># =&gt; "{\"p\":\"abc..."</span>

  <span class="n">post</span><span class="p">.</span><span class="nf">body</span> <span class="o">=</span> <span class="s2">"World"</span>
  <span class="n">post</span><span class="p">.</span><span class="nf">ciphertext_for</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span>
  <span class="c1"># =&gt; "{\"p\":\"xyz..."</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix a bug where using groups and counts with long table names would return incorrect results.
</title>
    <link>https://github.com/rails/rails/issues/46287</link>
    <guid>https://github.com/rails/rails/issues/46287</guid>
    <description>*   Fix a bug where using groups and counts with long table names would return incorrect results.

    *Shota Toguchi*, *Yusaku Ono*</description>
    <pubDate>Thu, 20 Oct 2022 09:34:45 +0000</pubDate>
    <author>Dooor</author>
    <content:encoded><![CDATA[<p>Fix a bug where using groups and counts with long table names would return incorrect results.</p>

<p><em>Shota Toguchi</em>, <em>Yusaku Ono</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix encryption of column default values.
</title>
    <link>https://github.com/rails/rails/issues/46281</link>
    <guid>https://github.com/rails/rails/issues/46281</guid>
    <description>*   Fix encryption of column default values.

    Previously, encrypted attributes that used column default values appeared to
    be encrypted on create, but were not:

      ```ruby
      Book.encrypts :name

      book = Book.create!
      book.name
      # =&gt; &quot;&lt;untitled&gt;&quot;
      book.name_before_type_cast
      # =&gt; &quot;{\&quot;p\&quot;:\&quot;abc...&quot;
      book.reload.name_before_type_cast
      # =&gt; &quot;&lt;untitled&gt;&quot;
      ```

    Now, attributes with column default values are encrypted:

      ```ruby
      Book.encrypts :name

      book = Book.create!
      book.name
      # =&gt; &quot;&lt;untitled&gt;&quot;
      book.name_before_type_cast
      # =&gt; &quot;{\&quot;p\&quot;:\&quot;abc...&quot;
      book.reload.name_before_type_cast
      # =&gt; &quot;{\&quot;p\&quot;:\&quot;abc...&quot;
      ```

    *Jonathan Hefner*</description>
    <pubDate>Thu, 20 Oct 2022 04:17:03 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Fix encryption of column default values.</p>

<p>Previously, encrypted attributes that used column default values appeared to<br />
be encrypted on create, but were not:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="no">Book</span><span class="p">.</span><span class="nf">encrypts</span> <span class="ss">:name</span>

  <span class="n">book</span> <span class="o">=</span> <span class="no">Book</span><span class="p">.</span><span class="nf">create!</span>
  <span class="n">book</span><span class="p">.</span><span class="nf">name</span>
  <span class="c1"># =&gt; "&lt;untitled&gt;"</span>
  <span class="n">book</span><span class="p">.</span><span class="nf">name_before_type_cast</span>
  <span class="c1"># =&gt; "{\"p\":\"abc..."</span>
  <span class="n">book</span><span class="p">.</span><span class="nf">reload</span><span class="p">.</span><span class="nf">name_before_type_cast</span>
  <span class="c1"># =&gt; "&lt;untitled&gt;"</span>
</code></pre></div></div>

<p>Now, attributes with column default values are encrypted:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="no">Book</span><span class="p">.</span><span class="nf">encrypts</span> <span class="ss">:name</span>

  <span class="n">book</span> <span class="o">=</span> <span class="no">Book</span><span class="p">.</span><span class="nf">create!</span>
  <span class="n">book</span><span class="p">.</span><span class="nf">name</span>
  <span class="c1"># =&gt; "&lt;untitled&gt;"</span>
  <span class="n">book</span><span class="p">.</span><span class="nf">name_before_type_cast</span>
  <span class="c1"># =&gt; "{\"p\":\"abc..."</span>
  <span class="n">book</span><span class="p">.</span><span class="nf">reload</span><span class="p">.</span><span class="nf">name_before_type_cast</span>
  <span class="c1"># =&gt; "{\"p\":\"abc..."</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Deprecate delegation from `Base` to `connection_handler`.
</title>
    <link>https://github.com/rails/rails/issues/46274</link>
    <guid>https://github.com/rails/rails/issues/46274</guid>
    <description>*   Deprecate delegation from `Base` to `connection_handler`.

    Calling `Base.clear_all_connections!`, `Base.clear_active_connections!`, `Base.clear_reloadable_connections!` and `Base.flush_idle_connections!` is deprecated. Please call these methods on the connection handler directly. In future Rails versions, the delegation from `Base` to the `connection_handler` will be removed.

    *Eileen M. Uchitelle*</description>
    <pubDate>Wed, 19 Oct 2022 14:39:38 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Deprecate delegation from <code>Base</code> to <code>connection_handler</code>.</p>

<p>Calling <code>Base.clear_all_connections!</code>, <code>Base.clear_active_connections!</code>, <code>Base.clear_reloadable_connections!</code> and <code>Base.flush_idle_connections!</code> is deprecated. Please call these methods on the connection handler directly. In future Rails versions, the delegation from <code>Base</code> to the <code>connection_handler</code> will be removed.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow ActiveRecord::QueryMethods#reselect to receive hash values, similar to ActiveRecord::QueryMethods#select
</title>
    <link>https://github.com/rails/rails/issues/46253</link>
    <guid>https://github.com/rails/rails/issues/46253</guid>
    <description>*   Allow ActiveRecord::QueryMethods#reselect to receive hash values, similar to ActiveRecord::QueryMethods#select

    *Sampat Badhe*</description>
    <pubDate>Mon, 17 Oct 2022 21:10:04 +0000</pubDate>
    <author>sampatbadhe</author>
    <content:encoded><![CDATA[<p>Allow ActiveRecord::QueryMethods#reselect to receive hash values, similar to ActiveRecord::QueryMethods#select</p>

<p><em>Sampat Badhe</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Validate options when managing columns and tables in migrations.
</title>
    <link>https://github.com/rails/rails/issues/46178</link>
    <guid>https://github.com/rails/rails/issues/46178</guid>
    <description>*   Validate options when managing columns and tables in migrations.

    If an invalid option is passed to a migration method like `create_table` and `add_column`, an error will be raised
    instead of the option being silently ignored. Validation of the options will only be applied for new migrations
    that are created.

    *Guo Xiang Tan*, *George Wambold*</description>
    <pubDate>Tue, 11 Oct 2022 08:02:34 +0000</pubDate>
    <author>Alan Guo Xiang Tan</author>
    <content:encoded><![CDATA[<p>Validate options when managing columns and tables in migrations.</p>

<p>If an invalid option is passed to a migration method like <code>create_table</code> and <code>add_column</code>, an error will be raised<br />
instead of the option being silently ignored. Validation of the options will only be applied for new migrations<br />
that are created.</p>

<p><em>Guo Xiang Tan</em>, <em>George Wambold</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Update query log tags to use the [SQLCommenter](https://open-telemetry.github.io/opentelemetry-sqlcommenter/) format by default. See [#46179](https://github.com/rails/rails/issues/46179)
</title>
    <link>https://github.com/rails/rails/issues/46310</link>
    <guid>https://github.com/rails/rails/issues/46310</guid>
    <description>*   Update query log tags to use the [SQLCommenter](https://open-telemetry.github.io/opentelemetry-sqlcommenter/) format by default. See [#46179](https://github.com/rails/rails/issues/46179)

    To opt out of SQLCommenter-formatted query log tags, set `config.active_record.query_log_tags_format = :legacy`. By default, this is set to `:sqlcommenter`.

    *Modulitos* and *Iheanyi*</description>
    <pubDate>Sun, 23 Oct 2022 10:10:02 +0000</pubDate>
    <author>modulitos</author>
    <content:encoded><![CDATA[<p>Update query log tags to use the <a href="https://open-telemetry.github.io/opentelemetry-sqlcommenter/">SQLCommenter</a> format by default. See <a href="https://github.com/rails/rails/issues/46179">#46179</a></p>

<p>To opt out of SQLCommenter-formatted query log tags, set <code>config.active_record.query_log_tags_format = :legacy</code>. By default, this is set to <code>:sqlcommenter</code>.</p>

<p><em>Modulitos</em> and <em>Iheanyi</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow any ERB in the database.yml when creating rake tasks.
</title>
    <link>https://github.com/rails/rails/issues/46134</link>
    <guid>https://github.com/rails/rails/issues/46134</guid>
    <description>*   Allow any ERB in the database.yml when creating rake tasks.

    Any ERB can be used in `database.yml` even if it accesses environment
    configurations.

    Deprecates `config.active_record.suppress_multiple_database_warning`.

    *Eike Send*</description>
    <pubDate>Tue, 27 Sep 2022 15:27:26 +0000</pubDate>
    <author>Eike Send</author>
    <content:encoded><![CDATA[<p>Allow any ERB in the database.yml when creating rake tasks.</p>

<p>Any ERB can be used in <code>database.yml</code> even if it accesses environment<br />
configurations.</p>

<p>Deprecates <code>config.active_record.suppress_multiple_database_warning</code>.</p>

<p><em>Eike Send</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add table to error for duplicate column definitions.
</title>
    <link>https://github.com/rails/rails/issues/46117</link>
    <guid>https://github.com/rails/rails/issues/46117</guid>
    <description>*   Add table to error for duplicate column definitions.

    If a migration defines duplicate columns for a table, the error message
    shows which table it concerns.

    *Petrik de Heus*</description>
    <pubDate>Fri, 23 Sep 2022 15:43:54 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Add table to error for duplicate column definitions.</p>

<p>If a migration defines duplicate columns for a table, the error message<br />
shows which table it concerns.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix erroneous nil default precision on virtual datetime columns.
</title>
    <link>https://github.com/rails/rails/issues/46110</link>
    <guid>https://github.com/rails/rails/issues/46110</guid>
    <description>*   Fix erroneous nil default precision on virtual datetime columns.

    Prior to this change, virtual datetime columns did not have the same
    default precision as regular datetime columns, resulting in the following
    being erroneously equivalent:

        t.virtual :name, type: datetime,                 as: &quot;expression&quot;
        t.virtual :name, type: datetime, precision: nil, as: &quot;expression&quot;

    This change fixes the default precision lookup, so virtual and regular
    datetime column default precisions match.

    *Sam Bostock*</description>
    <pubDate>Thu, 22 Sep 2022 22:20:58 +0000</pubDate>
    <author>Sam Bostock</author>
    <content:encoded><![CDATA[<p>Fix erroneous nil default precision on virtual datetime columns.</p>

<p>Prior to this change, virtual datetime columns did not have the same<br />
default precision as regular datetime columns, resulting in the following<br />
being erroneously equivalent:</p>

<pre><code>t.virtual :name, type: datetime,                 as: "expression"
t.virtual :name, type: datetime, precision: nil, as: "expression"
</code></pre>

<p>This change fixes the default precision lookup, so virtual and regular<br />
datetime column default precisions match.</p>

<p><em>Sam Bostock</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Use connection from `#with_raw_connection` in `#quote_string`.
</title>
    <link>https://github.com/rails/rails/issues/46108</link>
    <guid>https://github.com/rails/rails/issues/46108</guid>
    <description>*   Use connection from `#with_raw_connection` in `#quote_string`.

    This ensures that the string quoting is wrapped in the reconnect and retry logic
    that `#with_raw_connection` offers.

    *Adrianna Chang*</description>
    <pubDate>Thu, 22 Sep 2022 21:27:37 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Use connection from <code>#with_raw_connection</code> in <code>#quote_string</code>.</p>

<p>This ensures that the string quoting is wrapped in the reconnect and retry logic<br />
that <code>#with_raw_connection</code> offers.</p>

<p><em>Adrianna Chang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `expires_in` option to `signed_id`.
</title>
    <link>https://github.com/rails/rails/issues/46108</link>
    <guid>https://github.com/rails/rails/issues/46108</guid>
    <description>*   Add `expires_in` option to `signed_id`.

    *Shouichi Kamiya*</description>
    <pubDate>Thu, 22 Sep 2022 21:27:37 +0000</pubDate>
    <author>Shouichi Kamiya</author>
    <content:encoded><![CDATA[<p>Add <code>expires_in</code> option to <code>signed_id</code>.</p>

<p><em>Shouichi Kamiya</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow applications to set retry deadline for query retries.
</title>
    <link>https://github.com/rails/rails/issues/46046</link>
    <guid>https://github.com/rails/rails/issues/46046</guid>
    <description>*   Allow applications to set retry deadline for query retries.

    Building on the work done in #44576 and #44591, we extend the logic that automatically
    reconnects database connections to take into account a timeout limit. We won&#39;t retry
    a query if a given amount of time has elapsed since the query was first attempted. This
    value defaults to nil, meaning that all retryable queries are retried regardless of time elapsed,
    but this can be changed via the `retry_deadline` option in the database config.

    *Adrianna Chang*</description>
    <pubDate>Thu, 22 Sep 2022 18:49:49 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Allow applications to set retry deadline for query retries.</p>

<p>Building on the work done in #44576 and #44591, we extend the logic that automatically<br />
reconnects database connections to take into account a timeout limit. We won’t retry<br />
a query if a given amount of time has elapsed since the query was first attempted. This<br />
value defaults to nil, meaning that all retryable queries are retried regardless of time elapsed,<br />
but this can be changed via the <code>retry_deadline</code> option in the database config.</p>

<p><em>Adrianna Chang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix a case where the query cache can return wrong values. See #46044
</title>
    <link>https://github.com/rails/rails/issues/46048</link>
    <guid>https://github.com/rails/rails/issues/46048</guid>
    <description>*   Fix a case where the query cache can return wrong values. See #46044

    *Aaron Patterson*</description>
    <pubDate>Mon, 19 Sep 2022 08:37:06 +0000</pubDate>
    <author>Aaron Patterson</author>
    <content:encoded><![CDATA[<p>Fix a case where the query cache can return wrong values. See #46044</p>

<p><em>Aaron Patterson</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Support MySQL&#39;s ssl-mode option for MySQLDatabaseTasks.
</title>
    <link>https://github.com/rails/rails/issues/46008</link>
    <guid>https://github.com/rails/rails/issues/46008</guid>
    <description>*   Support MySQL&#39;s ssl-mode option for MySQLDatabaseTasks.

    Verifying the identity of the database server requires setting the ssl-mode
    option to VERIFY_CA or VERIFY_IDENTITY. This option was previously ignored
    for MySQL database tasks like creating a database and dumping the structure.

    *Petrik de Heus*</description>
    <pubDate>Fri, 16 Sep 2022 07:51:51 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Support MySQL’s ssl-mode option for MySQLDatabaseTasks.</p>

<p>Verifying the identity of the database server requires setting the ssl-mode<br />
option to VERIFY_CA or VERIFY_IDENTITY. This option was previously ignored<br />
for MySQL database tasks like creating a database and dumping the structure.</p>

<p><em>Petrik de Heus</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Move `ActiveRecord::InternalMetadata` to an independent object.
</title>
    <link>https://github.com/rails/rails/issues/45982</link>
    <guid>https://github.com/rails/rails/issues/45982</guid>
    <description>*   Move `ActiveRecord::InternalMetadata` to an independent object.

    `ActiveRecord::InternalMetadata` no longer inherits from `ActiveRecord::Base` and is now an independent object that should be instantiated with a `connection`. This class is private and should not be used by applications directly. If you want to interact with the schema migrations table, please access it on the connection directly, for example: `ActiveRecord::Base.connection.schema_migration`.

    *Eileen M. Uchitelle*</description>
    <pubDate>Mon, 12 Sep 2022 14:05:09 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Move <code>ActiveRecord::InternalMetadata</code> to an independent object.</p>

<p><code>ActiveRecord::InternalMetadata</code> no longer inherits from <code>ActiveRecord::Base</code> and is now an independent object that should be instantiated with a <code>connection</code>. This class is private and should not be used by applications directly. If you want to interact with the schema migrations table, please access it on the connection directly, for example: <code>ActiveRecord::Base.connection.schema_migration</code>.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Deprecate quoting `ActiveSupport::Duration` as an integer
</title>
    <link>https://github.com/rails/rails/issues/44438</link>
    <guid>https://github.com/rails/rails/issues/44438</guid>
    <description>*   Deprecate quoting `ActiveSupport::Duration` as an integer

    Using ActiveSupport::Duration as an interpolated bind parameter in a SQL
    string template is deprecated. To avoid this warning, you should explicitly
    convert the duration to a more specific database type. For example, if you
    want to use a duration as an integer number of seconds:
    ```
    Record.where(&quot;duration = ?&quot;, 1.hour.to_i)
    ```
    If you want to use a duration as an ISO 8601 string:
    ```
    Record.where(&quot;duration = ?&quot;, 1.hour.iso8601)
    ```

    *Aram Greenman*</description>
    <pubDate>Fri, 09 Sep 2022 21:14:08 +0000</pubDate>
    <author>Aram Greenman</author>
    <content:encoded><![CDATA[<p>Deprecate quoting <code>ActiveSupport::Duration</code> as an integer</p>

<p>Using ActiveSupport::Duration as an interpolated bind parameter in a SQL<br />
string template is deprecated. To avoid this warning, you should explicitly<br />
convert the duration to a more specific database type. For example, if you<br />
want to use a duration as an integer number of seconds:</p>
<pre><code>Record.where("duration = ?", 1.hour.to_i)
</code></pre>
<p>If you want to use a duration as an ISO 8601 string:</p>
<pre><code>Record.where("duration = ?", 1.hour.iso8601)
</code></pre>

<p><em>Aram Greenman</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow `QueryMethods#in_order_of` to order by a string column name.
</title>
    <link>https://github.com/rails/rails/issues/45971</link>
    <guid>https://github.com/rails/rails/issues/45971</guid>
    <description>*   Allow `QueryMethods#in_order_of` to order by a string column name.

    ```ruby
    Post.in_order_of(&quot;id&quot;, [4,2,3,1]).to_a
    Post.joins(:author).in_order_of(&quot;authors.name&quot;, [&quot;Bob&quot;, &quot;Anna&quot;, &quot;John&quot;]).to_a
    ```

    *Igor Kasyanchuk*</description>
    <pubDate>Fri, 09 Sep 2022 19:39:33 +0000</pubDate>
    <author>admin</author>
    <content:encoded><![CDATA[<p>Allow <code>QueryMethods#in_order_of</code> to order by a string column name.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span><span class="p">.</span><span class="nf">in_order_of</span><span class="p">(</span><span class="s2">"id"</span><span class="p">,</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">]).</span><span class="nf">to_a</span>
<span class="no">Post</span><span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:author</span><span class="p">).</span><span class="nf">in_order_of</span><span class="p">(</span><span class="s2">"authors.name"</span><span class="p">,</span> <span class="p">[</span><span class="s2">"Bob"</span><span class="p">,</span> <span class="s2">"Anna"</span><span class="p">,</span> <span class="s2">"John"</span><span class="p">]).</span><span class="nf">to_a</span>
</code></pre></div></div>

<p><em>Igor Kasyanchuk</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Move `ActiveRecord::SchemaMigration` to an independent object.
</title>
    <link>https://github.com/rails/rails/issues/45908</link>
    <guid>https://github.com/rails/rails/issues/45908</guid>
    <description>*   Move `ActiveRecord::SchemaMigration` to an independent object.

    `ActiveRecord::SchemaMigration` no longer inherits from `ActiveRecord::Base` and is now an independent object that should be instantiated with a `connection`. This class is private and should not be used by applications directly. If you want to interact with the schema migrations table, please access it on the connection directly, for example: `ActiveRecord::Base.connection.schema_migration`.

    *Eileen M. Uchitelle*</description>
    <pubDate>Fri, 09 Sep 2022 14:18:01 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Move <code>ActiveRecord::SchemaMigration</code> to an independent object.</p>

<p><code>ActiveRecord::SchemaMigration</code> no longer inherits from <code>ActiveRecord::Base</code> and is now an independent object that should be instantiated with a <code>connection</code>. This class is private and should not be used by applications directly. If you want to interact with the schema migrations table, please access it on the connection directly, for example: <code>ActiveRecord::Base.connection.schema_migration</code>.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Deprecate `all_connection_pools` and make `connection_pool_list` more explicit.
</title>
    <link>https://github.com/rails/rails/issues/45961</link>
    <guid>https://github.com/rails/rails/issues/45961</guid>
    <description>*   Deprecate `all_connection_pools` and make `connection_pool_list` more explicit.

    Following on #45924 `all_connection_pools` is now deprecated. `connection_pool_list` will either take an explicit role or applications can opt into the new behavior by passing `:all`.

    *Eileen M. Uchitelle*</description>
    <pubDate>Wed, 07 Sep 2022 19:15:48 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Deprecate <code>all_connection_pools</code> and make <code>connection_pool_list</code> more explicit.</p>

<p>Following on #45924 <code>all_connection_pools</code> is now deprecated. <code>connection_pool_list</code> will either take an explicit role or applications can opt into the new behavior by passing <code>:all</code>.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix connection handler methods to operate on all pools.
</title>
    <link>https://github.com/rails/rails/issues/45924</link>
    <guid>https://github.com/rails/rails/issues/45924</guid>
    <description>*   Fix connection handler methods to operate on all pools.

    `active_connections?`, `clear_active_connections!`, `clear_reloadable_connections!`, `clear_all_connections!`, and `flush_idle_connections!` now operate on all pools by default. Previously they would default to using the `current_role` or `:writing` role unless specified.

    *Eileen M. Uchitelle*</description>
    <pubDate>Wed, 07 Sep 2022 18:04:40 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Fix connection handler methods to operate on all pools.</p>

<p><code>active_connections?</code>, <code>clear_active_connections!</code>, <code>clear_reloadable_connections!</code>, <code>clear_all_connections!</code>, and <code>flush_idle_connections!</code> now operate on all pools by default. Previously they would default to using the <code>current_role</code> or <code>:writing</code> role unless specified.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow ActiveRecord::QueryMethods#select to receive hash values.
</title>
    <link>https://github.com/rails/rails/issues/45612</link>
    <guid>https://github.com/rails/rails/issues/45612</guid>
    <description>*   Allow ActiveRecord::QueryMethods#select to receive hash values.

    Currently, `select` might receive only raw sql and symbols to define columns and aliases to select.

    With this change we can provide `hash` as argument, for example:

    ```ruby
    Post.joins(:comments).select(posts: [:id, :title, :created_at], comments: [:id, :body, :author_id])
    #=&gt; &quot;SELECT \&quot;posts\&quot;.\&quot;id\&quot;, \&quot;posts\&quot;.\&quot;title\&quot;, \&quot;posts\&quot;.\&quot;created_at\&quot;, \&quot;comments\&quot;.\&quot;id\&quot;, \&quot;comments\&quot;.\&quot;body\&quot;, \&quot;comments\&quot;.\&quot;author_id\&quot;
    #   FROM \&quot;posts\&quot; INNER JOIN \&quot;comments\&quot; ON \&quot;comments\&quot;.\&quot;post_id\&quot; = \&quot;posts\&quot;.\&quot;id\&quot;&quot;

    Post.joins(:comments).select(posts: { id: :post_id, title: :post_title }, comments: { id: :comment_id, body: :comment_body })
    #=&gt; &quot;SELECT posts.id as post_id, posts.title as post_title, comments.id as comment_id, comments.body as comment_body
    #    FROM \&quot;posts\&quot; INNER JOIN \&quot;comments\&quot; ON \&quot;comments\&quot;.\&quot;post_id\&quot; = \&quot;posts\&quot;.\&quot;id\&quot;&quot;
    ```
    *Oleksandr Holubenko*, *Josef Šimánek*, *Jean Boussier*</description>
    <pubDate>Fri, 02 Sep 2022 09:33:56 +0000</pubDate>
    <author>alextrueman</author>
    <content:encoded><![CDATA[<p>Allow ActiveRecord::QueryMethods#select to receive hash values.</p>

<p>Currently, <code>select</code> might receive only raw sql and symbols to define columns and aliases to select.</p>

<p>With this change we can provide <code>hash</code> as argument, for example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span><span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:comments</span><span class="p">).</span><span class="nf">select</span><span class="p">(</span><span class="ss">posts: </span><span class="p">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:created_at</span><span class="p">],</span> <span class="ss">comments: </span><span class="p">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">:author_id</span><span class="p">])</span>
<span class="c1">#=&gt; "SELECT \"posts\".\"id\", \"posts\".\"title\", \"posts\".\"created_at\", \"comments\".\"id\", \"comments\".\"body\", \"comments\".\"author_id\"</span>
<span class="c1">#   FROM \"posts\" INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\""</span>

<span class="no">Post</span><span class="p">.</span><span class="nf">joins</span><span class="p">(</span><span class="ss">:comments</span><span class="p">).</span><span class="nf">select</span><span class="p">(</span><span class="ss">posts: </span><span class="p">{</span> <span class="ss">id: :post_id</span><span class="p">,</span> <span class="ss">title: :post_title</span> <span class="p">},</span> <span class="ss">comments: </span><span class="p">{</span> <span class="ss">id: :comment_id</span><span class="p">,</span> <span class="ss">body: :comment_body</span> <span class="p">})</span>
<span class="c1">#=&gt; "SELECT posts.id as post_id, posts.title as post_title, comments.id as comment_id, comments.body as comment_body</span>
<span class="c1">#    FROM \"posts\" INNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\""</span>
</code></pre></div></div>
<p><em>Oleksandr Holubenko</em>, <em>Josef Šimánek</em>, <em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Adapts virtual attributes on `ActiveRecord::Persistence#becomes`.
</title>
    <link>https://github.com/rails/rails/issues/42650</link>
    <guid>https://github.com/rails/rails/issues/42650</guid>
    <description>*   Adapts virtual attributes on `ActiveRecord::Persistence#becomes`.

    When source and target classes have a different set of attributes adapts
    attributes such that the extra attributes from target are added.

    ```ruby
    class Person &lt; ApplicationRecord
    end

    class WebUser &lt; Person
      attribute :is_admin, :boolean
      after_initialize :set_admin

      def set_admin
        write_attribute(:is_admin, email =~ /@ourcompany\.com$/)
      end
    end

    person = Person.find_by(email: &quot;email@ourcompany.com&quot;)
    person.respond_to? :is_admin
    # =&gt; false
    person.becomes(WebUser).is_admin?
    # =&gt; true
    ```

    *Jacopo Beschi*, *Sampson Crowley*</description>
    <pubDate>Thu, 25 Aug 2022 15:48:54 +0000</pubDate>
    <author>Jacopo</author>
    <content:encoded><![CDATA[<p>Adapts virtual attributes on <code>ActiveRecord::Persistence#becomes</code>.</p>

<p>When source and target classes have a different set of attributes adapts<br />
attributes such that the extra attributes from target are added.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Person</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
<span class="k">end</span>

<span class="k">class</span> <span class="nc">WebUser</span> <span class="o">&lt;</span> <span class="no">Person</span>
  <span class="n">attribute</span> <span class="ss">:is_admin</span><span class="p">,</span> <span class="ss">:boolean</span>
  <span class="n">after_initialize</span> <span class="ss">:set_admin</span>

  <span class="k">def</span> <span class="nf">set_admin</span>
    <span class="n">write_attribute</span><span class="p">(</span><span class="ss">:is_admin</span><span class="p">,</span> <span class="n">email</span> <span class="o">=~</span> <span class="sr">/@ourcompany\.com$/</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">email: </span><span class="s2">"email@ourcompany.com"</span><span class="p">)</span>
<span class="n">person</span><span class="p">.</span><span class="nf">respond_to?</span> <span class="ss">:is_admin</span>
<span class="c1"># =&gt; false</span>
<span class="n">person</span><span class="p">.</span><span class="nf">becomes</span><span class="p">(</span><span class="no">WebUser</span><span class="p">).</span><span class="nf">is_admin?</span>
<span class="c1"># =&gt; true</span>
</code></pre></div></div>

<p><em>Jacopo Beschi</em>, <em>Sampson Crowley</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `ActiveRecord::QueryMethods#in_order_of` to include `nil`s, to match the
</title>
    <link>https://github.com/rails/rails/issues/45670</link>
    <guid>https://github.com/rails/rails/issues/45670</guid>
    <description>*   Fix `ActiveRecord::QueryMethods#in_order_of` to include `nil`s, to match the
    behavior of `Enumerable#in_order_of`.

    For example, `Post.in_order_of(:title, [nil, &quot;foo&quot;])` will now include posts
    with `nil` titles, the same as `Post.all.to_a.in_order_of(:title, [nil, &quot;foo&quot;])`.

    *fatkodima*</description>
    <pubDate>Thu, 18 Aug 2022 04:25:35 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Fix <code>ActiveRecord::QueryMethods#in_order_of</code> to include <code>nil</code>s, to match the<br />
behavior of <code>Enumerable#in_order_of</code>.</p>

<p>For example, <code>Post.in_order_of(:title, [nil, "foo"])</code> will now include posts<br />
with <code>nil</code> titles, the same as <code>Post.all.to_a.in_order_of(:title, [nil, "foo"])</code>.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Optimize `add_timestamps` to use a single SQL statement.
</title>
    <link>https://github.com/rails/rails/issues/45723</link>
    <guid>https://github.com/rails/rails/issues/45723</guid>
    <description>*   Optimize `add_timestamps` to use a single SQL statement.

    ```ruby
    add_timestamps :my_table
    ```

    Now results in the following SQL:

    ```sql
    ALTER TABLE &quot;my_table&quot; ADD COLUMN &quot;created_at&quot; datetime(6) NOT NULL, ADD COLUMN &quot;updated_at&quot; datetime(6) NOT NULL
    ```

    *Iliana Hadzhiatanasova*</description>
    <pubDate>Fri, 12 Aug 2022 01:30:04 +0000</pubDate>
    <author>Iliana Hadzhiatanasova</author>
    <content:encoded><![CDATA[<p>Optimize <code>add_timestamps</code> to use a single SQL statement.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_timestamps</span> <span class="ss">:my_table</span>
</code></pre></div></div>

<p>Now results in the following SQL:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="nv">"my_table"</span> <span class="k">ADD</span> <span class="k">COLUMN</span> <span class="nv">"created_at"</span> <span class="nb">datetime</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span> <span class="k">ADD</span> <span class="k">COLUMN</span> <span class="nv">"updated_at"</span> <span class="nb">datetime</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span>
</code></pre></div></div>

<p><em>Iliana Hadzhiatanasova</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `drop_enum` migration command for PostgreSQL
</title>
    <link>https://github.com/rails/rails/issues/45735</link>
    <guid>https://github.com/rails/rails/issues/45735</guid>
    <description>*   Add `drop_enum` migration command for PostgreSQL

    This does the inverse of `create_enum`. Before dropping an enum, ensure you have
    dropped columns that depend on it.

    *Alex Ghiculescu*</description>
    <pubDate>Thu, 04 Aug 2022 00:26:46 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Add <code>drop_enum</code> migration command for PostgreSQL</p>

<p>This does the inverse of <code>create_enum</code>. Before dropping an enum, ensure you have<br />
dropped columns that depend on it.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Adds support for `if_exists` option when removing a check constraint.
</title>
    <link>https://github.com/rails/rails/issues/45743</link>
    <guid>https://github.com/rails/rails/issues/45743</guid>
    <description>*   Adds support for `if_exists` option when removing a check constraint.

    The `remove_check_constraint` method now accepts an `if_exists` option. If set
    to true an error won&#39;t be raised if the check constraint doesn&#39;t exist.

    *Margaret Parsa* and *Aditya Bhutani*</description>
    <pubDate>Wed, 03 Aug 2022 20:33:02 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Adds support for <code>if_exists</code> option when removing a check constraint.</p>

<p>The <code>remove_check_constraint</code> method now accepts an <code>if_exists</code> option. If set<br />
to true an error won’t be raised if the check constraint doesn’t exist.</p>

<p><em>Margaret Parsa</em> and <em>Aditya Bhutani</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `find_or_create_by` now try to find a second time if it hits a unicity constraint.
</title>
    <link>https://github.com/rails/rails/issues/45720</link>
    <guid>https://github.com/rails/rails/issues/45720</guid>
    <description>*   `find_or_create_by` now try to find a second time if it hits a unicity constraint.

    `find_or_create_by` always has been inherently racy, either creating multiple
    duplicate records or failing with `ActiveRecord::RecordNotUnique` depending on
    whether a proper unicity constraint was set.

    `create_or_find_by` was introduced for this use case, however it&#39;s quite wasteful
    when the record is expected to exist most of the time, as INSERT require to send
    more data than SELECT and require more work from the database. Also on some
    databases it can actually consume a primary key increment which is undesirable.

    So for case where most of the time the record is expected to exist, `find_or_create_by`
    can be made race-condition free by re-trying the `find` if the `create` failed
    with `ActiveRecord::RecordNotUnique`. This assumes that the table has the proper
    unicity constraints, if not, `find_or_create_by` will still lead to duplicated records.

    *Jean Boussier*, *Alex Kitchens*</description>
    <pubDate>Tue, 02 Aug 2022 13:11:20 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p><code>find_or_create_by</code> now try to find a second time if it hits a unicity constraint.</p>

<p><code>find_or_create_by</code> always has been inherently racy, either creating multiple<br />
duplicate records or failing with <code>ActiveRecord::RecordNotUnique</code> depending on<br />
whether a proper unicity constraint was set.</p>

<p><code>create_or_find_by</code> was introduced for this use case, however it’s quite wasteful<br />
when the record is expected to exist most of the time, as INSERT require to send<br />
more data than SELECT and require more work from the database. Also on some<br />
databases it can actually consume a primary key increment which is undesirable.</p>

<p>So for case where most of the time the record is expected to exist, <code>find_or_create_by</code><br />
can be made race-condition free by re-trying the <code>find</code> if the <code>create</code> failed<br />
with <code>ActiveRecord::RecordNotUnique</code>. This assumes that the table has the proper<br />
unicity constraints, if not, <code>find_or_create_by</code> will still lead to duplicated records.</p>

<p><em>Jean Boussier</em>, <em>Alex Kitchens</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Introduce a simpler constructor API for ActiveRecord database adapters.
</title>
    <link>https://github.com/rails/rails/issues/44576</link>
    <guid>https://github.com/rails/rails/issues/44576</guid>
    <description>*   Introduce a simpler constructor API for ActiveRecord database adapters.

    Previously the adapter had to know how to build a new raw connection to
    support reconnect, but also expected to be passed an initial already-
    established connection.

    When manually creating an adapter instance, it will now accept a single
    config hash, and only establish the real connection on demand.

    *Matthew Draper*</description>
    <pubDate>Fri, 29 Jul 2022 20:46:01 +0000</pubDate>
    <author>Matthew Draper</author>
    <content:encoded><![CDATA[<p>Introduce a simpler constructor API for ActiveRecord database adapters.</p>

<p>Previously the adapter had to know how to build a new raw connection to<br />
support reconnect, but also expected to be passed an initial already-<br />
established connection.</p>

<p>When manually creating an adapter instance, it will now accept a single<br />
config hash, and only establish the real connection on demand.</p>

<p><em>Matthew Draper</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Avoid redundant `SELECT 1` connection-validation query during DB pool
</title>
    <link>https://github.com/rails/rails/issues/44576</link>
    <guid>https://github.com/rails/rails/issues/44576</guid>
    <description>*   Avoid redundant `SELECT 1` connection-validation query during DB pool
    checkout when possible.

    If the first query run during a request is known to be idempotent, it can be
    used directly to validate the connection, saving a network round-trip.

    *Matthew Draper*</description>
    <pubDate>Fri, 29 Jul 2022 20:46:01 +0000</pubDate>
    <author>Matthew Draper</author>
    <content:encoded><![CDATA[<p>Avoid redundant <code>SELECT 1</code> connection-validation query during DB pool<br />
checkout when possible.</p>

<p>If the first query run during a request is known to be idempotent, it can be<br />
used directly to validate the connection, saving a network round-trip.</p>

<p><em>Matthew Draper</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Automatically reconnect broken database connections when safe, even
</title>
    <link>https://github.com/rails/rails/issues/44576</link>
    <guid>https://github.com/rails/rails/issues/44576</guid>
    <description>*   Automatically reconnect broken database connections when safe, even
    mid-request.

    When an error occurs while attempting to run a known-idempotent query, and
    not inside a transaction, it is safe to immediately reconnect to the
    database server and try again, so this is now the default behavior.

    This new default should always be safe -- to support that, it&#39;s consciously
    conservative about which queries are considered idempotent -- but if
    necessary it can be disabled by setting the `connection_retries` connection
    option to `0`.

    *Matthew Draper*</description>
    <pubDate>Fri, 29 Jul 2022 20:46:01 +0000</pubDate>
    <author>Matthew Draper</author>
    <content:encoded><![CDATA[<p>Automatically reconnect broken database connections when safe, even<br />
mid-request.</p>

<p>When an error occurs while attempting to run a known-idempotent query, and<br />
not inside a transaction, it is safe to immediately reconnect to the<br />
database server and try again, so this is now the default behavior.</p>

<p>This new default should always be safe – to support that, it’s consciously<br />
conservative about which queries are considered idempotent – but if<br />
necessary it can be disabled by setting the <code>connection_retries</code> connection<br />
option to <code>0</code>.</p>

<p><em>Matthew Draper</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Avoid removing a PostgreSQL extension when there are dependent objects.
</title>
    <link>https://github.com/rails/rails/issues/45474</link>
    <guid>https://github.com/rails/rails/issues/45474</guid>
    <description>*   Avoid removing a PostgreSQL extension when there are dependent objects.

    Previously, removing an extension also implicitly removed dependent objects. Now, this will raise an error.

    You can force removing the extension:

    ```ruby
    disable_extension :citext, force: :cascade
    ```

    Fixes #29091.

    *fatkodima*</description>
    <pubDate>Mon, 25 Jul 2022 11:55:48 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Avoid removing a PostgreSQL extension when there are dependent objects.</p>

<p>Previously, removing an extension also implicitly removed dependent objects. Now, this will raise an error.</p>

<p>You can force removing the extension:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">disable_extension</span> <span class="ss">:citext</span><span class="p">,</span> <span class="ss">force: :cascade</span>
</code></pre></div></div>

<p>Fixes #29091.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow nested functions as safe SQL string
</title>
    <link>https://github.com/rails/rails/issues/44010</link>
    <guid>https://github.com/rails/rails/issues/44010</guid>
    <description>*   Allow nested functions as safe SQL string

    *Michael Siegfried*</description>
    <pubDate>Tue, 19 Jul 2022 19:04:15 +0000</pubDate>
    <author>Michael Siegfried</author>
    <content:encoded><![CDATA[<p>Allow nested functions as safe SQL string</p>

<p><em>Michael Siegfried</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow `destroy_association_async_job=` to be configured with a class string instead of a constant.
</title>
    <link>https://github.com/rails/rails/issues/45476</link>
    <guid>https://github.com/rails/rails/issues/45476</guid>
    <description>*   Allow `destroy_association_async_job=` to be configured with a class string instead of a constant.

    Defers an autoloading dependency between `ActiveRecord::Base` and `ActiveJob::Base`
    and moves the configuration of `ActiveRecord::DestroyAssociationAsyncJob`
    from ActiveJob to ActiveRecord.

    Deprecates `ActiveRecord::ActiveJobRequiredError` and now raises a `NameError`
    if the job class is unloadable or an `ActiveRecord::ConfigurationError` if
    `dependent: :destroy_async` is declared on an association but there is no job
    class configured.

    *Ben Sheldon*</description>
    <pubDate>Wed, 13 Jul 2022 18:06:39 +0000</pubDate>
    <author>Ben Sheldon</author>
    <content:encoded><![CDATA[<p>Allow <code>destroy_association_async_job=</code> to be configured with a class string instead of a constant.</p>

<p>Defers an autoloading dependency between <code>ActiveRecord::Base</code> and <code>ActiveJob::Base</code><br />
and moves the configuration of <code>ActiveRecord::DestroyAssociationAsyncJob</code><br />
from ActiveJob to ActiveRecord.</p>

<p>Deprecates <code>ActiveRecord::ActiveJobRequiredError</code> and now raises a <code>NameError</code><br />
if the job class is unloadable or an <code>ActiveRecord::ConfigurationError</code> if<br />
<code>dependent: :destroy_async</code> is declared on an association but there is no job<br />
class configured.</p>

<p><em>Ben Sheldon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `ActiveRecord::Store` to serialize as a regular Hash
</title>
    <link>https://github.com/rails/rails/issues/45591</link>
    <guid>https://github.com/rails/rails/issues/45591</guid>
    <description>*   Fix `ActiveRecord::Store` to serialize as a regular Hash

    Previously it would serialize as an `ActiveSupport::HashWithIndifferentAccess`
    which is wasteful and cause problem with YAML safe_load.

    *Jean Boussier*</description>
    <pubDate>Wed, 13 Jul 2022 16:52:37 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix <code>ActiveRecord::Store</code> to serialize as a regular Hash</p>

<p>Previously it would serialize as an <code>ActiveSupport::HashWithIndifferentAccess</code><br />
which is wasteful and cause problem with YAML safe_load.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `timestamptz` as a time zone aware type for PostgreSQL
</title>
    <link>https://github.com/rails/rails/issues/44601</link>
    <guid>https://github.com/rails/rails/issues/44601</guid>
    <description>*   Add `timestamptz` as a time zone aware type for PostgreSQL

    This is required for correctly parsing `timestamp with time zone` values in your database.

    If you don&#39;t want this, you can opt out by adding this initializer:

    ```ruby
    ActiveRecord::Base.time_zone_aware_types -= [:timestamptz]
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Sun, 10 Jul 2022 23:23:04 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Add <code>timestamptz</code> as a time zone aware type for PostgreSQL</p>

<p>This is required for correctly parsing <code>timestamp with time zone</code> values in your database.</p>

<p>If you don’t want this, you can opt out by adding this initializer:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="p">.</span><span class="nf">time_zone_aware_types</span> <span class="o">-=</span> <span class="p">[</span><span class="ss">:timestamptz</span><span class="p">]</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add new `ActiveRecord::Base::generates_token_for` API.
</title>
    <link>https://github.com/rails/rails/issues/44189</link>
    <guid>https://github.com/rails/rails/issues/44189</guid>
    <description>*   Add new `ActiveRecord::Base::generates_token_for` API.

    Currently, `signed_id` fulfills the role of generating tokens for e.g.
    resetting a password.  However, signed IDs cannot reflect record state, so
    if a token is intended to be single-use, it must be tracked in a database at
    least until it expires.

    With `generates_token_for`, a token can embed data from a record.  When
    using the token to fetch the record, the data from the token and the data
    from the record will be compared.  If the two do not match, the token will
    be treated as invalid, the same as if it had expired.  For example:

    ```ruby
    class User &lt; ActiveRecord::Base
      has_secure_password

      generates_token_for :password_reset, expires_in: 15.minutes do
        # A password&#39;s BCrypt salt changes when the password is updated.
        # By embedding (part of) the salt in a token, the token will
        # expire when the password is updated.
        BCrypt::Password.new(password_digest).salt[-10..]
      end
    end

    user = User.first
    token = user.generate_token_for(:password_reset)

    User.find_by_token_for(:password_reset, token) # =&gt; user

    user.update!(password: &quot;new password&quot;)
    User.find_by_token_for(:password_reset, token) # =&gt; nil
    ```

    *Jonathan Hefner*</description>
    <pubDate>Sat, 09 Jul 2022 05:39:27 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p>Add new <code>ActiveRecord::Base::generates_token_for</code> API.</p>

<p>Currently, <code>signed_id</code> fulfills the role of generating tokens for e.g.<br />
resetting a password.  However, signed IDs cannot reflect record state, so<br />
if a token is intended to be single-use, it must be tracked in a database at<br />
least until it expires.</p>

<p>With <code>generates_token_for</code>, a token can embed data from a record.  When<br />
using the token to fetch the record, the data from the token and the data<br />
from the record will be compared.  If the two do not match, the token will<br />
be treated as invalid, the same as if it had expired.  For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">has_secure_password</span>

  <span class="n">generates_token_for</span> <span class="ss">:password_reset</span><span class="p">,</span> <span class="ss">expires_in: </span><span class="mi">15</span><span class="p">.</span><span class="nf">minutes</span> <span class="k">do</span>
    <span class="c1"># A password's BCrypt salt changes when the password is updated.</span>
    <span class="c1"># By embedding (part of) the salt in a token, the token will</span>
    <span class="c1"># expire when the password is updated.</span>
    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">password_digest</span><span class="p">).</span><span class="nf">salt</span><span class="p">[</span><span class="o">-</span><span class="mi">10</span><span class="o">..</span><span class="p">]</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">first</span>
<span class="n">token</span> <span class="o">=</span> <span class="n">user</span><span class="p">.</span><span class="nf">generate_token_for</span><span class="p">(</span><span class="ss">:password_reset</span><span class="p">)</span>

<span class="no">User</span><span class="p">.</span><span class="nf">find_by_token_for</span><span class="p">(</span><span class="ss">:password_reset</span><span class="p">,</span> <span class="n">token</span><span class="p">)</span> <span class="c1"># =&gt; user</span>

<span class="n">user</span><span class="p">.</span><span class="nf">update!</span><span class="p">(</span><span class="ss">password: </span><span class="s2">"new password"</span><span class="p">)</span>
<span class="no">User</span><span class="p">.</span><span class="nf">find_by_token_for</span><span class="p">(</span><span class="ss">:password_reset</span><span class="p">,</span> <span class="n">token</span><span class="p">)</span> <span class="c1"># =&gt; nil</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Optimize Active Record batching for whole table iterations.
</title>
    <link>https://github.com/rails/rails/issues/45414</link>
    <guid>https://github.com/rails/rails/issues/45414</guid>
    <description>*   Optimize Active Record batching for whole table iterations.

    Previously, `in_batches` got all the ids and constructed an `IN`-based query for each batch.
    When iterating over the whole tables, this approach is not optimal as it loads unneeded ids and
    `IN` queries with lots of items are slow.

    Now, whole table iterations use range iteration (`id &gt;= x AND id &lt;= y`) by default which can make iteration
    several times faster. E.g., tested on a PostgreSQL table with 10 million records: querying (`253s` vs `30s`),
    updating (`288s` vs `124s`), deleting (`268s` vs `83s`).

    Only whole table iterations use this style of iteration by default. You can disable this behavior by passing `use_ranges: false`.
    If you iterate over the table and the only condition is, e.g., `archived_at: nil` (and only a tiny fraction
    of the records are archived), it makes sense to opt in to this approach:

    ```ruby
    Project.where(archived_at: nil).in_batches(use_ranges: true) do |relation|
      # do something
    end
    ```

    See #45414 for more details.

    *fatkodima*</description>
    <pubDate>Wed, 06 Jul 2022 08:10:10 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Optimize Active Record batching for whole table iterations.</p>

<p>Previously, <code>in_batches</code> got all the ids and constructed an <code>IN</code>-based query for each batch.<br />
When iterating over the whole tables, this approach is not optimal as it loads unneeded ids and<br />
<code>IN</code> queries with lots of items are slow.</p>

<p>Now, whole table iterations use range iteration (<code>id &gt;= x AND id &lt;= y</code>) by default which can make iteration<br />
several times faster. E.g., tested on a PostgreSQL table with 10 million records: querying (<code>253s</code> vs <code>30s</code>),<br />
updating (<code>288s</code> vs <code>124s</code>), deleting (<code>268s</code> vs <code>83s</code>).</p>

<p>Only whole table iterations use this style of iteration by default. You can disable this behavior by passing <code>use_ranges: false</code>.<br />
If you iterate over the table and the only condition is, e.g., <code>archived_at: nil</code> (and only a tiny fraction<br />
of the records are archived), it makes sense to opt in to this approach:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Project</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="ss">archived_at: </span><span class="kp">nil</span><span class="p">).</span><span class="nf">in_batches</span><span class="p">(</span><span class="ss">use_ranges: </span><span class="kp">true</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">relation</span><span class="o">|</span>
  <span class="c1"># do something</span>
<span class="k">end</span>
</code></pre></div></div>

<p>See #45414 for more details.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `.with` query method added. Construct common table expressions with ease and get `ActiveRecord::Relation` back.
</title>
    <link>https://github.com/rails/rails/issues/37944</link>
    <guid>https://github.com/rails/rails/issues/37944</guid>
    <description>*   `.with` query method added. Construct common table expressions with ease and get `ActiveRecord::Relation` back.

    ```ruby
    Post.with(posts_with_comments: Post.where(&quot;comments_count &gt; ?&quot;, 0))
    # =&gt; ActiveRecord::Relation
    # WITH posts_with_comments AS (SELECT * FROM posts WHERE (comments_count &gt; 0)) SELECT * FROM posts
    ```

    *Vlado Cingel*</description>
    <pubDate>Tue, 05 Jul 2022 06:39:29 +0000</pubDate>
    <author>Vlado Cingel</author>
    <content:encoded><![CDATA[<p><code>.with</code> query method added. Construct common table expressions with ease and get <code>ActiveRecord::Relation</code> back.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span><span class="p">.</span><span class="nf">with</span><span class="p">(</span><span class="ss">posts_with_comments: </span><span class="no">Post</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="s2">"comments_count &gt; ?"</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<span class="c1"># =&gt; ActiveRecord::Relation</span>
<span class="c1"># WITH posts_with_comments AS (SELECT * FROM posts WHERE (comments_count &gt; 0)) SELECT * FROM posts</span>
</code></pre></div></div>

<p><em>Vlado Cingel</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Don&#39;t establish a new connection if an identical pool exists already.
</title>
    <link>https://github.com/rails/rails/issues/45450</link>
    <guid>https://github.com/rails/rails/issues/45450</guid>
    <description>*   Don&#39;t establish a new connection if an identical pool exists already.

    Previously, if `establish_connection` was called on a class that already had an established connection, the existing connection would be removed regardless of whether it was the same config. Now if a pool is found with the same values as the new connection, the existing connection will be returned instead of creating a new one.

    This has a slight change in behavior if application code is depending on a new connection being established regardless of whether it&#39;s identical to an existing connection. If the old behavior is desirable, applications should call `ActiveRecord::Base#remove_connection` before establishing a new one. Calling `establish_connection` with a different config works the same way as it did previously.

    *Eileen M. Uchitelle*</description>
    <pubDate>Wed, 29 Jun 2022 17:37:46 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Don’t establish a new connection if an identical pool exists already.</p>

<p>Previously, if <code>establish_connection</code> was called on a class that already had an established connection, the existing connection would be removed regardless of whether it was the same config. Now if a pool is found with the same values as the new connection, the existing connection will be returned instead of creating a new one.</p>

<p>This has a slight change in behavior if application code is depending on a new connection being established regardless of whether it’s identical to an existing connection. If the old behavior is desirable, applications should call <code>ActiveRecord::Base#remove_connection</code> before establishing a new one. Calling <code>establish_connection</code> with a different config works the same way as it did previously.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Update `db:prepare` task to load schema when an uninitialized database exists, and dump schema after migrations.
</title>
    <link>https://github.com/rails/rails/issues/45464</link>
    <guid>https://github.com/rails/rails/issues/45464</guid>
    <description>*   Update `db:prepare` task to load schema when an uninitialized database exists, and dump schema after migrations.

    *Ben Sheldon*</description>
    <pubDate>Tue, 28 Jun 2022 19:22:35 +0000</pubDate>
    <author>Ben Sheldon [he/him]</author>
    <content:encoded><![CDATA[<p>Update <code>db:prepare</code> task to load schema when an uninitialized database exists, and dump schema after migrations.</p>

<p><em>Ben Sheldon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix supporting timezone awareness for `tsrange` and `tstzrange` array columns.
</title>
    <link>https://github.com/rails/rails/issues/45348</link>
    <guid>https://github.com/rails/rails/issues/45348</guid>
    <description>*   Fix supporting timezone awareness for `tsrange` and `tstzrange` array columns.

    ```ruby
    # In database migrations
    add_column :shops, :open_hours, :tsrange, array: true
    # In app config
    ActiveRecord::Base.time_zone_aware_types += [:tsrange]
    # In the code times are properly converted to app time zone
    Shop.create!(open_hours: [Time.current..8.hour.from_now])
    ```

    *Wojciech Wnętrzak*</description>
    <pubDate>Mon, 27 Jun 2022 12:06:45 +0000</pubDate>
    <author>Wojciech Wnętrzak</author>
    <content:encoded><![CDATA[<p>Fix supporting timezone awareness for <code>tsrange</code> and <code>tstzrange</code> array columns.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># In database migrations</span>
<span class="n">add_column</span> <span class="ss">:shops</span><span class="p">,</span> <span class="ss">:open_hours</span><span class="p">,</span> <span class="ss">:tsrange</span><span class="p">,</span> <span class="ss">array: </span><span class="kp">true</span>
<span class="c1"># In app config</span>
<span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="p">.</span><span class="nf">time_zone_aware_types</span> <span class="o">+=</span> <span class="p">[</span><span class="ss">:tsrange</span><span class="p">]</span>
<span class="c1"># In the code times are properly converted to app time zone</span>
<span class="no">Shop</span><span class="p">.</span><span class="nf">create!</span><span class="p">(</span><span class="ss">open_hours: </span><span class="p">[</span><span class="no">Time</span><span class="p">.</span><span class="nf">current</span><span class="o">..</span><span class="mi">8</span><span class="p">.</span><span class="nf">hour</span><span class="p">.</span><span class="nf">from_now</span><span class="p">])</span>
</code></pre></div></div>

<p><em>Wojciech Wnętrzak</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Introduce strategy pattern for executing migrations.
</title>
    <link>https://github.com/rails/rails/issues/45324</link>
    <guid>https://github.com/rails/rails/issues/45324</guid>
    <description>*   Introduce strategy pattern for executing migrations.

    By default, migrations will use a strategy object that delegates the method
    to the connection adapter. Consumers can implement custom strategy objects
    to change how their migrations run.

    *Adrianna Chang*</description>
    <pubDate>Fri, 24 Jun 2022 11:37:03 +0000</pubDate>
    <author>Adrianna Chang</author>
    <content:encoded><![CDATA[<p>Introduce strategy pattern for executing migrations.</p>

<p>By default, migrations will use a strategy object that delegates the method<br />
to the connection adapter. Consumers can implement custom strategy objects<br />
to change how their migrations run.</p>

<p><em>Adrianna Chang</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add adapter option disallowing foreign keys
</title>
    <link>https://github.com/rails/rails/issues/45301</link>
    <guid>https://github.com/rails/rails/issues/45301</guid>
    <description>*   Add adapter option disallowing foreign keys

    This adds a new option to be added to `database.yml` which enables skipping
    foreign key constraints usage even if the underlying database supports them.

    Usage:
    ```yaml
    development:
        &lt;&lt;: *default
        database: storage/development.sqlite3
        foreign_keys: false
    ```

    *Paulo Barros*</description>
    <pubDate>Mon, 20 Jun 2022 09:30:43 +0000</pubDate>
    <author>Paulo Barros</author>
    <content:encoded><![CDATA[<p>Add adapter option disallowing foreign keys</p>

<p>This adds a new option to be added to <code>database.yml</code> which enables skipping<br />
foreign key constraints usage even if the underlying database supports them.</p>

<p>Usage:</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">development</span><span class="pi">:</span>
    <span class="na">&lt;&lt;</span><span class="pi">:</span> <span class="nv">*default</span>
    <span class="na">database</span><span class="pi">:</span> <span class="s">storage/development.sqlite3</span>
    <span class="na">foreign_keys</span><span class="pi">:</span> <span class="no">false</span>
</code></pre></div></div>

<p><em>Paulo Barros</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add configurable deprecation warning for singular associations
</title>
    <link>https://github.com/rails/rails/issues/45344</link>
    <guid>https://github.com/rails/rails/issues/45344</guid>
    <description>*   Add configurable deprecation warning for singular associations

    This adds a deprecation warning when using the plural name of a singular associations in `where`.
    It is possible to opt into the new more performant behavior with `config.active_record.allow_deprecated_singular_associations_name = false`

    *Adam Hess*</description>
    <pubDate>Thu, 16 Jun 2022 16:25:54 +0000</pubDate>
    <author>HParker</author>
    <content:encoded><![CDATA[<p>Add configurable deprecation warning for singular associations</p>

<p>This adds a deprecation warning when using the plural name of a singular associations in <code>where</code>.<br />
It is possible to opt into the new more performant behavior with <code>config.active_record.allow_deprecated_singular_associations_name = false</code></p>

<p><em>Adam Hess</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Run transactional callbacks on the freshest instance to save a given
</title>
    <link>https://github.com/rails/rails/issues/45462</link>
    <guid>https://github.com/rails/rails/issues/45462</guid>
    <description>*   Run transactional callbacks on the freshest instance to save a given
    record within a transaction.

    When multiple Active Record instances change the same record within a
    transaction, Rails runs `after_commit` or `after_rollback` callbacks for
    only one of them. `config.active_record.run_commit_callbacks_on_first_saved_instances_in_transaction`
    was added to specify how Rails chooses which instance receives the
    callbacks. The framework defaults were changed to use the new logic.

    When `config.active_record.run_commit_callbacks_on_first_saved_instances_in_transaction`
    is `true`, transactional callbacks are run on the first instance to save,
    even though its instance state may be stale.

    When it is `false`, which is the new framework default starting with version
    7.1, transactional callbacks are run on the instances with the freshest
    instance state. Those instances are chosen as follows:

    - In general, run transactional callbacks on the last instance to save a
      given record within the transaction.
    - There are two exceptions:
        - If the record is created within the transaction, then updated by
          another instance, `after_create_commit` callbacks will be run on the
          second instance. This is instead of the `after_update_commit`
          callbacks that would naively be run based on that instance’s state.
        - If the record is destroyed within the transaction, then
          `after_destroy_commit` callbacks will be fired on the last destroyed
          instance, even if a stale instance subsequently performed an update
          (which will have affected 0 rows).

    *Cameron Bothner and Mitch Vollebregt*</description>
    <pubDate>Sun, 26 Jun 2022 08:16:18 +0000</pubDate>
    <author>Yasuo Honda</author>
    <content:encoded><![CDATA[<p>Run transactional callbacks on the freshest instance to save a given<br />
record within a transaction.</p>

<p>When multiple Active Record instances change the same record within a<br />
transaction, Rails runs <code>after_commit</code> or <code>after_rollback</code> callbacks for<br />
only one of them. <code>config.active_record.run_commit_callbacks_on_first_saved_instances_in_transaction</code><br />
was added to specify how Rails chooses which instance receives the<br />
callbacks. The framework defaults were changed to use the new logic.</p>

<p>When <code>config.active_record.run_commit_callbacks_on_first_saved_instances_in_transaction</code><br />
is <code>true</code>, transactional callbacks are run on the first instance to save,<br />
even though its instance state may be stale.</p>

<p>When it is <code>false</code>, which is the new framework default starting with version<br />
7.1, transactional callbacks are run on the instances with the freshest<br />
instance state. Those instances are chosen as follows:</p>

<ul>
  <li>In general, run transactional callbacks on the last instance to save a<br />
given record within the transaction.</li>
  <li>There are two exceptions:
    <ul>
      <li>If the record is created within the transaction, then updated by<br />
another instance, <code>after_create_commit</code> callbacks will be run on the<br />
second instance. This is instead of the <code>after_update_commit</code><br />
callbacks that would naively be run based on that instance’s state.</li>
      <li>If the record is destroyed within the transaction, then<br />
<code>after_destroy_commit</code> callbacks will be fired on the last destroyed<br />
instance, even if a stale instance subsequently performed an update<br />
(which will have affected 0 rows).</li>
    </ul>
  </li>
</ul>

<p><em>Cameron Bothner and Mitch Vollebregt</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Enable strict strings mode for `SQLite3Adapter`.
</title>
    <link>https://github.com/rails/rails/issues/45346</link>
    <guid>https://github.com/rails/rails/issues/45346</guid>
    <description>*   Enable strict strings mode for `SQLite3Adapter`.

    Configures SQLite with a strict strings mode, which disables double-quoted string literals.

    SQLite has some quirks around double-quoted string literals.
    It first tries to consider double-quoted strings as identifier names, but if they don&#39;t exist
    it then considers them as string literals. Because of this, typos can silently go unnoticed.
    For example, it is possible to create an index for a non existing column.
    See [SQLite documentation](https://www.sqlite.org/quirks.html#double_quoted_string_literals_are_accepted) for more details.

    If you don&#39;t want this behavior, you can disable it via:

    ```ruby
    # config/application.rb
    config.active_record.sqlite3_adapter_strict_strings_by_default = false
    ```

    Fixes #27782.

    *fatkodima*, *Jean Boussier*</description>
    <pubDate>Tue, 14 Jun 2022 21:01:30 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Enable strict strings mode for <code>SQLite3Adapter</code>.</p>

<p>Configures SQLite with a strict strings mode, which disables double-quoted string literals.</p>

<p>SQLite has some quirks around double-quoted string literals.<br />
It first tries to consider double-quoted strings as identifier names, but if they don’t exist<br />
it then considers them as string literals. Because of this, typos can silently go unnoticed.<br />
For example, it is possible to create an index for a non existing column.<br />
See <a href="https://www.sqlite.org/quirks.html#double_quoted_string_literals_are_accepted">SQLite documentation</a> for more details.</p>

<p>If you don’t want this behavior, you can disable it via:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># config/application.rb</span>
<span class="n">config</span><span class="p">.</span><span class="nf">active_record</span><span class="p">.</span><span class="nf">sqlite3_adapter_strict_strings_by_default</span> <span class="o">=</span> <span class="kp">false</span>
</code></pre></div></div>

<p>Fixes #27782.</p>

<p><em>fatkodima</em>, <em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Resolve issue where a relation cache_version could be left stale.
</title>
    <link>https://github.com/rails/rails/issues/45342</link>
    <guid>https://github.com/rails/rails/issues/45342</guid>
    <description>*   Resolve issue where a relation cache_version could be left stale.

    Previously, when `reset` was called on a relation object it did not reset the cache_versions
    ivar. This led to a confusing situation where despite having the correct data the relation
    still reported a stale cache_version.

    Usage:

    ```ruby
    developers = Developer.all
    developers.cache_version

    Developer.update_all(updated_at: Time.now.utc + 1.second)

    developers.cache_version # Stale cache_version
    developers.reset
    developers.cache_version # Returns the current correct cache_version
    ```

    Fixes #45341.

    *Austen Madden*</description>
    <pubDate>Tue, 14 Jun 2022 17:05:32 +0000</pubDate>
    <author>Austen Madden</author>
    <content:encoded><![CDATA[<p>Resolve issue where a relation cache_version could be left stale.</p>

<p>Previously, when <code>reset</code> was called on a relation object it did not reset the cache_versions<br />
ivar. This led to a confusing situation where despite having the correct data the relation<br />
still reported a stale cache_version.</p>

<p>Usage:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">developers</span> <span class="o">=</span> <span class="no">Developer</span><span class="p">.</span><span class="nf">all</span>
<span class="n">developers</span><span class="p">.</span><span class="nf">cache_version</span>

<span class="no">Developer</span><span class="p">.</span><span class="nf">update_all</span><span class="p">(</span><span class="ss">updated_at: </span><span class="no">Time</span><span class="p">.</span><span class="nf">now</span><span class="p">.</span><span class="nf">utc</span> <span class="o">+</span> <span class="mi">1</span><span class="p">.</span><span class="nf">second</span><span class="p">)</span>

<span class="n">developers</span><span class="p">.</span><span class="nf">cache_version</span> <span class="c1"># Stale cache_version</span>
<span class="n">developers</span><span class="p">.</span><span class="nf">reset</span>
<span class="n">developers</span><span class="p">.</span><span class="nf">cache_version</span> <span class="c1"># Returns the current correct cache_version</span>
</code></pre></div></div>

<p>Fixes #45341.</p>

<p><em>Austen Madden</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add support for exclusion constraints (PostgreSQL-only).
</title>
    <link>https://github.com/rails/rails/issues/40224</link>
    <guid>https://github.com/rails/rails/issues/40224</guid>
    <description>*   Add support for exclusion constraints (PostgreSQL-only).

    ```ruby
    add_exclusion_constraint :invoices, &quot;daterange(start_date, end_date) WITH &amp;&amp;&quot;, using: :gist, name: &quot;invoices_date_overlap&quot;
    remove_exclusion_constraint :invoices, name: &quot;invoices_date_overlap&quot;
    ```

    See PostgreSQL&#39;s [`CREATE TABLE ... EXCLUDE ...`](https://www.postgresql.org/docs/12/sql-createtable.html#SQL-CREATETABLE-EXCLUDE) documentation for more on exclusion constraints.

    *Alex Robbin*</description>
    <pubDate>Tue, 14 Jun 2022 12:56:01 +0000</pubDate>
    <author>Alex Robbin</author>
    <content:encoded><![CDATA[<p>Add support for exclusion constraints (PostgreSQL-only).</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_exclusion_constraint</span> <span class="ss">:invoices</span><span class="p">,</span> <span class="s2">"daterange(start_date, end_date) WITH &amp;&amp;"</span><span class="p">,</span> <span class="ss">using: :gist</span><span class="p">,</span> <span class="ss">name: </span><span class="s2">"invoices_date_overlap"</span>
<span class="n">remove_exclusion_constraint</span> <span class="ss">:invoices</span><span class="p">,</span> <span class="ss">name: </span><span class="s2">"invoices_date_overlap"</span>
</code></pre></div></div>

<p>See PostgreSQL’s <a href="https://www.postgresql.org/docs/12/sql-createtable.html#SQL-CREATETABLE-EXCLUDE"><code>CREATE TABLE ... EXCLUDE ...</code></a> documentation for more on exclusion constraints.</p>

<p><em>Alex Robbin</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `change_column_null` raises if a non-boolean argument is provided
</title>
    <link>https://github.com/rails/rails/issues/45229</link>
    <guid>https://github.com/rails/rails/issues/45229</guid>
    <description>*   `change_column_null` raises if a non-boolean argument is provided

    Previously if you provided a non-boolean argument, `change_column_null` would
    treat it as truthy and make your column nullable. This could be surprising, so now
    the input must be either `true` or `false`.

    ```ruby
    change_column_null :table, :column, true # good
    change_column_null :table, :column, false # good
    change_column_null :table, :column, from: true, to: false # raises (previously this made the column nullable)
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Mon, 13 Jun 2022 19:01:22 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>change_column_null</code> raises if a non-boolean argument is provided</p>

<p>Previously if you provided a non-boolean argument, <code>change_column_null</code> would<br />
treat it as truthy and make your column nullable. This could be surprising, so now<br />
the input must be either <code>true</code> or <code>false</code>.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">change_column_null</span> <span class="ss">:table</span><span class="p">,</span> <span class="ss">:column</span><span class="p">,</span> <span class="kp">true</span> <span class="c1"># good</span>
<span class="n">change_column_null</span> <span class="ss">:table</span><span class="p">,</span> <span class="ss">:column</span><span class="p">,</span> <span class="kp">false</span> <span class="c1"># good</span>
<span class="n">change_column_null</span> <span class="ss">:table</span><span class="p">,</span> <span class="ss">:column</span><span class="p">,</span> <span class="ss">from: </span><span class="kp">true</span><span class="p">,</span> <span class="ss">to: </span><span class="kp">false</span> <span class="c1"># raises (previously this made the column nullable)</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Enforce limit on table names length.
</title>
    <link>https://github.com/rails/rails/issues/45136</link>
    <guid>https://github.com/rails/rails/issues/45136</guid>
    <description>*   Enforce limit on table names length.

    Fixes #45130.

    *fatkodima*</description>
    <pubDate>Mon, 13 Jun 2022 18:27:40 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Enforce limit on table names length.</p>

<p>Fixes #45130.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Adjust the minimum MariaDB version for check constraints support.
</title>
    <link>https://github.com/rails/rails/issues/45326</link>
    <guid>https://github.com/rails/rails/issues/45326</guid>
    <description>*   Adjust the minimum MariaDB version for check constraints support.

    *Eddie Lebow*</description>
    <pubDate>Sun, 12 Jun 2022 13:39:07 +0000</pubDate>
    <author>Eddie Lebow</author>
    <content:encoded><![CDATA[<p>Adjust the minimum MariaDB version for check constraints support.</p>

<p><em>Eddie Lebow</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix Hstore deserialize regression.
</title>
    <link>https://github.com/rails/rails/issues/45222</link>
    <guid>https://github.com/rails/rails/issues/45222</guid>
    <description>*   Fix Hstore deserialize regression.

    *edsharp*</description>
    <pubDate>Tue, 31 May 2022 13:37:23 +0000</pubDate>
    <author>Ed Sharp</author>
    <content:encoded><![CDATA[<p>Fix Hstore deserialize regression.</p>

<p><em>edsharp</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add validity for PostgreSQL indexes.
</title>
    <link>https://github.com/rails/rails/issues/45160</link>
    <guid>https://github.com/rails/rails/issues/45160</guid>
    <description>*   Add validity for PostgreSQL indexes.

    ```ruby
    connection.index_exists?(:users, :email, valid: true)
    connection.indexes(:users).select(&amp;:valid?)
    ```

    *fatkodima*</description>
    <pubDate>Tue, 31 May 2022 09:04:58 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Add validity for PostgreSQL indexes.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">connection</span><span class="p">.</span><span class="nf">index_exists?</span><span class="p">(</span><span class="ss">:users</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">valid: </span><span class="kp">true</span><span class="p">)</span>
<span class="n">connection</span><span class="p">.</span><span class="nf">indexes</span><span class="p">(</span><span class="ss">:users</span><span class="p">).</span><span class="nf">select</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:valid?</span><span class="p">)</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix eager loading for models without primary keys.
</title>
    <link>https://github.com/rails/rails/issues/43402</link>
    <guid>https://github.com/rails/rails/issues/43402</guid>
    <description>*   Fix eager loading for models without primary keys.

    *Anmol Chopra*, *Matt Lawrence*, and *Jonathan Hefner*</description>
    <pubDate>Sat, 28 May 2022 22:22:28 +0000</pubDate>
    <author>Matt Lawrence</author>
    <content:encoded><![CDATA[<p>Fix eager loading for models without primary keys.</p>

<p><em>Anmol Chopra</em>, <em>Matt Lawrence</em>, and <em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Avoid validating a unique field if it has not changed and is backed by a unique index.
</title>
    <link>https://github.com/rails/rails/issues/45149</link>
    <guid>https://github.com/rails/rails/issues/45149</guid>
    <description>*   Avoid validating a unique field if it has not changed and is backed by a unique index.

    Previously, when saving a record, Active Record will perform an extra query to check for the
    uniqueness of each attribute having a `uniqueness` validation, even if that attribute hasn&#39;t changed.
    If the database has the corresponding unique index, then this validation can never fail for persisted
    records, and we could safely skip it.

    *fatkodima*</description>
    <pubDate>Wed, 25 May 2022 16:04:40 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Avoid validating a unique field if it has not changed and is backed by a unique index.</p>

<p>Previously, when saving a record, Active Record will perform an extra query to check for the<br />
uniqueness of each attribute having a <code>uniqueness</code> validation, even if that attribute hasn’t changed.<br />
If the database has the corresponding unique index, then this validation can never fail for persisted<br />
records, and we could safely skip it.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Stop setting `sql_auto_is_null`
</title>
    <link>https://github.com/rails/rails/issues/45134</link>
    <guid>https://github.com/rails/rails/issues/45134</guid>
    <description>*   Stop setting `sql_auto_is_null`

    Since version 5.5 the default has been off, we no longer have to manually turn it off.

    *Adam Hess*</description>
    <pubDate>Thu, 19 May 2022 18:09:27 +0000</pubDate>
    <author>HParker</author>
    <content:encoded><![CDATA[<p>Stop setting <code>sql_auto_is_null</code></p>

<p>Since version 5.5 the default has been off, we no longer have to manually turn it off.</p>

<p><em>Adam Hess</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `touch` to raise an error for readonly columns.
</title>
    <link>https://github.com/rails/rails/issues/45125</link>
    <guid>https://github.com/rails/rails/issues/45125</guid>
    <description>*   Fix `touch` to raise an error for readonly columns.

    *fatkodima*</description>
    <pubDate>Thu, 19 May 2022 16:22:06 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Fix <code>touch</code> to raise an error for readonly columns.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add ability to ignore tables by regexp for SQL schema dumps.
</title>
    <link>https://github.com/rails/rails/issues/45091</link>
    <guid>https://github.com/rails/rails/issues/45091</guid>
    <description>*   Add ability to ignore tables by regexp for SQL schema dumps.

    ```ruby
    ActiveRecord::SchemaDumper.ignore_tables = [/^_/]
    ```

    *fatkodima*</description>
    <pubDate>Sat, 14 May 2022 14:48:47 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Add ability to ignore tables by regexp for SQL schema dumps.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">SchemaDumper</span><span class="p">.</span><span class="nf">ignore_tables</span> <span class="o">=</span> <span class="p">[</span><span class="sr">/^_/</span><span class="p">]</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Avoid queries when performing calculations on contradictory relations.
</title>
    <link>https://github.com/rails/rails/issues/45030</link>
    <guid>https://github.com/rails/rails/issues/45030</guid>
    <description>*   Avoid queries when performing calculations on contradictory relations.

    Previously calculations would make a query even when passed a
    contradiction, such as `User.where(id: []).count`. We no longer perform a
    query in that scenario.

    This applies to the following calculations: `count`, `sum`, `average`,
    `minimum` and `maximum`

    *Luan Vieira, John Hawthorn and Daniel Colson*</description>
    <pubDate>Wed, 11 May 2022 22:38:01 +0000</pubDate>
    <author>Luan Vieira</author>
    <content:encoded><![CDATA[<p>Avoid queries when performing calculations on contradictory relations.</p>

<p>Previously calculations would make a query even when passed a<br />
contradiction, such as <code>User.where(id: []).count</code>. We no longer perform a<br />
query in that scenario.</p>

<p>This applies to the following calculations: <code>count</code>, <code>sum</code>, <code>average</code>,<br />
<code>minimum</code> and <code>maximum</code></p>

<p><em>Luan Vieira, John Hawthorn and Daniel Colson</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow using aliased attributes with `insert_all`/`upsert_all`.
</title>
    <link>https://github.com/rails/rails/issues/45036</link>
    <guid>https://github.com/rails/rails/issues/45036</guid>
    <description>*   Allow using aliased attributes with `insert_all`/`upsert_all`.

    ```ruby
    class Book &lt; ApplicationRecord
      alias_attribute :title, :name
    end

    Book.insert_all [{ title: &quot;Remote&quot;, author_id: 1 }], returning: :title
    ```

    *fatkodima*</description>
    <pubDate>Wed, 11 May 2022 15:01:27 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Allow using aliased attributes with <code>insert_all</code>/<code>upsert_all</code>.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">alias_attribute</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:name</span>
<span class="k">end</span>

<span class="no">Book</span><span class="p">.</span><span class="nf">insert_all</span> <span class="p">[{</span> <span class="ss">title: </span><span class="s2">"Remote"</span><span class="p">,</span> <span class="ss">author_id: </span><span class="mi">1</span> <span class="p">}],</span> <span class="ss">returning: :title</span>
</code></pre></div></div>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Support encrypted attributes on columns with default db values.
</title>
    <link>https://github.com/rails/rails/issues/45033</link>
    <guid>https://github.com/rails/rails/issues/45033</guid>
    <description>*   Support encrypted attributes on columns with default db values.

    This adds support for encrypted attributes defined on columns with default values.
    It will encrypt those values at creation time. Before, it would raise an
    error unless `config.active_record.encryption.support_unencrypted_data` was true.

    *Jorge Manrubia* and *Dima Fatko*</description>
    <pubDate>Mon, 09 May 2022 12:13:52 +0000</pubDate>
    <author>Jorge Manrubia</author>
    <content:encoded><![CDATA[<p>Support encrypted attributes on columns with default db values.</p>

<p>This adds support for encrypted attributes defined on columns with default values.<br />
It will encrypt those values at creation time. Before, it would raise an<br />
error unless <code>config.active_record.encryption.support_unencrypted_data</code> was true.</p>

<p><em>Jorge Manrubia</em> and <em>Dima Fatko</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow overriding `reading_request?` in `DatabaseSelector::Resolver`
</title>
    <link>https://github.com/rails/rails/issues/44944</link>
    <guid>https://github.com/rails/rails/issues/44944</guid>
    <description>*   Allow overriding `reading_request?` in `DatabaseSelector::Resolver`

    The default implementation checks if a request is a `get?` or `head?`,
    but you can now change it to anything you like. If the method returns true,
    `Resolver#read` gets called meaning the request could be served by the
    replica database.

    *Alex Ghiculescu*</description>
    <pubDate>Mon, 25 Apr 2022 18:00:27 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Allow overriding <code>reading_request?</code> in <code>DatabaseSelector::Resolver</code></p>

<p>The default implementation checks if a request is a <code>get?</code> or <code>head?</code>,<br />
but you can now change it to anything you like. If the method returns true,<br />
<code>Resolver#read</code> gets called meaning the request could be served by the<br />
replica database.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Remove `ActiveRecord.legacy_connection_handling`.
</title>
    <link>https://github.com/rails/rails/issues/44827</link>
    <guid>https://github.com/rails/rails/issues/44827</guid>
    <description>*   Remove `ActiveRecord.legacy_connection_handling`.

    *Eileen M. Uchitelle*</description>
    <pubDate>Mon, 04 Apr 2022 15:10:07 +0000</pubDate>
    <author>eileencodes</author>
    <content:encoded><![CDATA[<p>Remove <code>ActiveRecord.legacy_connection_handling</code>.</p>

<p><em>Eileen M. Uchitelle</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: `rails db:schema:{dump,load}` now checks `ENV[&quot;SCHEMA_FORMAT&quot;]` before config
</title>
    <link>https://github.com/rails/rails/issues/44834</link>
    <guid>https://github.com/rails/rails/issues/44834</guid>
    <description>*   `rails db:schema:{dump,load}` now checks `ENV[&quot;SCHEMA_FORMAT&quot;]` before config

    Since `rails db:structure:{dump,load}` was deprecated there wasn&#39;t a simple
    way to dump a schema to both SQL and Ruby formats. You can now do this with
    an environment variable. For example:

    ```
    SCHEMA_FORMAT=sql rake db:schema:dump
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Mon, 04 Apr 2022 13:25:17 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>rails db:schema:{dump,load}</code> now checks <code>ENV["SCHEMA_FORMAT"]</code> before config</p>

<p>Since <code>rails db:structure:{dump,load}</code> was deprecated there wasn’t a simple<br />
way to dump a schema to both SQL and Ruby formats. You can now do this with<br />
an environment variable. For example:</p>

<pre><code>SCHEMA_FORMAT=sql rake db:schema:dump
</code></pre>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fixed MariaDB default function support.
</title>
    <link>https://github.com/rails/rails/issues/44654</link>
    <guid>https://github.com/rails/rails/issues/44654</guid>
    <description>*   Fixed MariaDB default function support.

    Defaults would be written wrong in &quot;db/schema.rb&quot; and not work correctly
    if using `db:schema:load`. Further more the function name would be
    added as string content when saving new records.

    *kaspernj*</description>
    <pubDate>Sun, 13 Mar 2022 18:42:56 +0000</pubDate>
    <author>kaspernj</author>
    <content:encoded><![CDATA[<p>Fixed MariaDB default function support.</p>

<p>Defaults would be written wrong in “db/schema.rb” and not work correctly<br />
if using <code>db:schema:load</code>. Further more the function name would be<br />
added as string content when saving new records.</p>

<p><em>kaspernj</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `active_record.destroy_association_async_batch_size` configuration
</title>
    <link>https://github.com/rails/rails/issues/44617</link>
    <guid>https://github.com/rails/rails/issues/44617</guid>
    <description>*   Add `active_record.destroy_association_async_batch_size` configuration

    This allows applications to specify the maximum number of records that will
    be destroyed in a single background job by the `dependent: :destroy_async`
    association option. By default, the current behavior will remain the same:
    when a parent record is destroyed, all dependent records will be destroyed
    in a single background job. If the number of dependent records is greater
    than this configuration, the records will be destroyed in multiple
    background jobs.

    *Nick Holden*</description>
    <pubDate>Wed, 09 Mar 2022 18:16:28 +0000</pubDate>
    <author>Nick Holden</author>
    <content:encoded><![CDATA[<p>Add <code>active_record.destroy_association_async_batch_size</code> configuration</p>

<p>This allows applications to specify the maximum number of records that will<br />
be destroyed in a single background job by the <code>dependent: :destroy_async</code><br />
association option. By default, the current behavior will remain the same:<br />
when a parent record is destroyed, all dependent records will be destroyed<br />
in a single background job. If the number of dependent records is greater<br />
than this configuration, the records will be destroyed in multiple<br />
background jobs.</p>

<p><em>Nick Holden</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `remove_foreign_key` with `:if_exists` option when foreign key actually exists.
</title>
    <link>https://github.com/rails/rails/issues/44637</link>
    <guid>https://github.com/rails/rails/issues/44637</guid>
    <description>*   Fix `remove_foreign_key` with `:if_exists` option when foreign key actually exists.

    *fatkodima*</description>
    <pubDate>Wed, 09 Mar 2022 14:22:02 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Fix <code>remove_foreign_key</code> with <code>:if_exists</code> option when foreign key actually exists.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Remove `--no-comments` flag in structure dumps for PostgreSQL
</title>
    <link>https://github.com/rails/rails/issues/44633</link>
    <guid>https://github.com/rails/rails/issues/44633</guid>
    <description>*   Remove `--no-comments` flag in structure dumps for PostgreSQL

    This broke some apps that used custom schema comments. If you don&#39;t want
    comments in your structure dump, you can use:

    ```ruby
    ActiveRecord::Tasks::DatabaseTasks.structure_dump_flags = [&#39;--no-comments&#39;]
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Mon, 07 Mar 2022 19:07:34 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Remove <code>--no-comments</code> flag in structure dumps for PostgreSQL</p>

<p>This broke some apps that used custom schema comments. If you don’t want<br />
comments in your structure dump, you can use:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Tasks</span><span class="o">::</span><span class="no">DatabaseTasks</span><span class="p">.</span><span class="nf">structure_dump_flags</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'--no-comments'</span><span class="p">]</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Reduce the memory footprint of fixtures accessors.
</title>
    <link>https://github.com/rails/rails/issues/44528</link>
    <guid>https://github.com/rails/rails/issues/44528</guid>
    <description>*   Reduce the memory footprint of fixtures accessors.

    Until now fixtures accessors were eagerly defined using `define_method`.
    So the memory usage was directly dependent of the number of fixtures and
    test suites.

    Instead fixtures accessors are now implemented with `method_missing`,
    so they incur much less memory and CPU overhead.

    *Jean Boussier*</description>
    <pubDate>Thu, 24 Feb 2022 08:34:12 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Reduce the memory footprint of fixtures accessors.</p>

<p>Until now fixtures accessors were eagerly defined using <code>define_method</code>.<br />
So the memory usage was directly dependent of the number of fixtures and<br />
test suites.</p>

<p>Instead fixtures accessors are now implemented with <code>method_missing</code>,<br />
so they incur much less memory and CPU overhead.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `config.active_record.destroy_association_async_job` configuration
</title>
    <link>https://github.com/rails/rails/issues/44309</link>
    <guid>https://github.com/rails/rails/issues/44309</guid>
    <description>*   Fix `config.active_record.destroy_association_async_job` configuration

    `config.active_record.destroy_association_async_job` should allow
    applications to specify the job that will be used to destroy associated
    records in the background for `has_many` associations with the
    `dependent: :destroy_async` option. Previously, that was ignored, which
    meant the default `ActiveRecord::DestroyAssociationAsyncJob` always
    destroyed records in the background.

    *Nick Holden*</description>
    <pubDate>Wed, 16 Feb 2022 22:55:24 +0000</pubDate>
    <author>Nick Holden</author>
    <content:encoded><![CDATA[<p>Fix <code>config.active_record.destroy_association_async_job</code> configuration</p>

<p><code>config.active_record.destroy_association_async_job</code> should allow<br />
applications to specify the job that will be used to destroy associated<br />
records in the background for <code>has_many</code> associations with the<br />
<code>dependent: :destroy_async</code> option. Previously, that was ignored, which<br />
meant the default <code>ActiveRecord::DestroyAssociationAsyncJob</code> always<br />
destroyed records in the background.</p>

<p><em>Nick Holden</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `change_column_comment` to preserve column&#39;s AUTO_INCREMENT in the MySQL adapter
</title>
    <link>https://github.com/rails/rails/issues/44577</link>
    <guid>https://github.com/rails/rails/issues/44577</guid>
    <description>*   Fix `change_column_comment` to preserve column&#39;s AUTO_INCREMENT in the MySQL adapter

    *fatkodima*</description>
    <pubDate>Mon, 28 Feb 2022 17:03:50 +0000</pubDate>
    <author>Abhay Nikam</author>
    <content:encoded><![CDATA[<p>Fix <code>change_column_comment</code> to preserve column’s AUTO_INCREMENT in the MySQL adapter</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix quoting of `ActiveSupport::Duration` and `Rational` numbers in the MySQL adapter.
</title>
    <link>https://github.com/rails/rails/issues/44404</link>
    <guid>https://github.com/rails/rails/issues/44404</guid>
    <description>*   Fix quoting of `ActiveSupport::Duration` and `Rational` numbers in the MySQL adapter.

    *Kevin McPhillips*</description>
    <pubDate>Mon, 14 Feb 2022 18:30:21 +0000</pubDate>
    <author>Kevin McPhillips</author>
    <content:encoded><![CDATA[<p>Fix quoting of <code>ActiveSupport::Duration</code> and <code>Rational</code> numbers in the MySQL adapter.</p>

<p><em>Kevin McPhillips</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow column name with COLLATE (e.g., title COLLATE &quot;C&quot;) as safe SQL string
</title>
    <link>https://github.com/rails/rails/issues/44384</link>
    <guid>https://github.com/rails/rails/issues/44384</guid>
    <description>*   Allow column name with COLLATE (e.g., title COLLATE &quot;C&quot;) as safe SQL string

    *Shugo Maeda*</description>
    <pubDate>Sat, 12 Feb 2022 12:08:04 +0000</pubDate>
    <author>Shugo Maeda</author>
    <content:encoded><![CDATA[<p>Allow column name with COLLATE (e.g., title COLLATE “C”) as safe SQL string</p>

<p><em>Shugo Maeda</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Permit underscores in the VERSION argument to database rake tasks.
</title>
    <link>https://github.com/rails/rails/issues/44276</link>
    <guid>https://github.com/rails/rails/issues/44276</guid>
    <description>*   Permit underscores in the VERSION argument to database rake tasks.

    *Eddie Lebow*</description>
    <pubDate>Sat, 12 Feb 2022 09:51:46 +0000</pubDate>
    <author>Eddie Lebow</author>
    <content:encoded><![CDATA[<p>Permit underscores in the VERSION argument to database rake tasks.</p>

<p><em>Eddie Lebow</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Reversed the order of `INSERT` statements in `structure.sql` dumps
</title>
    <link>https://github.com/rails/rails/issues/44363</link>
    <guid>https://github.com/rails/rails/issues/44363</guid>
    <description>*   Reversed the order of `INSERT` statements in `structure.sql` dumps

    This should decrease the likelihood of merge conflicts. New migrations
    will now be added at the top of the list.

    For existing apps, there will be a large diff the next time `structure.sql`
    is generated.

    *Alex Ghiculescu*, *Matt Larraz*</description>
    <pubDate>Tue, 08 Feb 2022 22:16:58 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Reversed the order of <code>INSERT</code> statements in <code>structure.sql</code> dumps</p>

<p>This should decrease the likelihood of merge conflicts. New migrations<br />
will now be added at the top of the list.</p>

<p>For existing apps, there will be a large diff the next time <code>structure.sql</code><br />
is generated.</p>

<p><em>Alex Ghiculescu</em>, <em>Matt Larraz</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix PG.connect keyword arguments deprecation warning on ruby 2.7
</title>
    <link>https://github.com/rails/rails/issues/44346</link>
    <guid>https://github.com/rails/rails/issues/44346</guid>
    <description>*   Fix PG.connect keyword arguments deprecation warning on ruby 2.7

    Fixes #44307.

    *Nikita Vasilevsky*</description>
    <pubDate>Tue, 08 Feb 2022 20:24:10 +0000</pubDate>
    <author>Nikita Vasilevsky</author>
    <content:encoded><![CDATA[<p>Fix PG.connect keyword arguments deprecation warning on ruby 2.7</p>

<p>Fixes #44307.</p>

<p><em>Nikita Vasilevsky</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix dropping DB connections after serialization failures and deadlocks.
</title>
    <link>https://github.com/rails/rails/issues/43130</link>
    <guid>https://github.com/rails/rails/issues/43130</guid>
    <description>*   Fix dropping DB connections after serialization failures and deadlocks.

    Prior to 6.1.4, serialization failures and deadlocks caused rollbacks to be
    issued for both real transactions and savepoints. This breaks MySQL which
    disallows rollbacks of savepoints following a deadlock.

    6.1.4 removed these rollbacks, for both transactions and savepoints, causing
    the DB connection to be left in an unknown state and thus discarded.

    These rollbacks are now restored, except for savepoints on MySQL.

    *Thomas Morgan*</description>
    <pubDate>Mon, 07 Feb 2022 10:08:42 +0000</pubDate>
    <author>thomas morgan</author>
    <content:encoded><![CDATA[<p>Fix dropping DB connections after serialization failures and deadlocks.</p>

<p>Prior to 6.1.4, serialization failures and deadlocks caused rollbacks to be<br />
issued for both real transactions and savepoints. This breaks MySQL which<br />
disallows rollbacks of savepoints following a deadlock.</p>

<p>6.1.4 removed these rollbacks, for both transactions and savepoints, causing<br />
the DB connection to be left in an unknown state and thus discarded.</p>

<p>These rollbacks are now restored, except for savepoints on MySQL.</p>

<p><em>Thomas Morgan</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Make `ActiveRecord::ConnectionPool` Fiber-safe
</title>
    <link>https://github.com/rails/rails/issues/44219</link>
    <guid>https://github.com/rails/rails/issues/44219</guid>
    <description>*   Make `ActiveRecord::ConnectionPool` Fiber-safe

    When `ActiveSupport::IsolatedExecutionState.isolation_level` is set to `:fiber`,
    the connection pool now supports multiple Fibers from the same Thread checking
    out connections from the pool.

    *Alex Matchneer*</description>
    <pubDate>Sat, 05 Feb 2022 10:13:50 +0000</pubDate>
    <author>machty</author>
    <content:encoded><![CDATA[<p>Make <code>ActiveRecord::ConnectionPool</code> Fiber-safe</p>

<p>When <code>ActiveSupport::IsolatedExecutionState.isolation_level</code> is set to <code>:fiber</code>,<br />
the connection pool now supports multiple Fibers from the same Thread checking<br />
out connections from the pool.</p>

<p><em>Alex Matchneer</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `update_attribute!` to `ActiveRecord::Persistence`
</title>
    <link>https://github.com/rails/rails/issues/44141</link>
    <guid>https://github.com/rails/rails/issues/44141</guid>
    <description>*   Add `update_attribute!` to `ActiveRecord::Persistence`

    Similar to `update_attribute`, but raises `ActiveRecord::RecordNotSaved` when a `before_*` callback throws `:abort`.

    ```ruby
    class Topic &lt; ActiveRecord::Base
      before_save :check_title

      def check_title
        throw(:abort) if title == &quot;abort&quot;
      end
    end

    topic = Topic.create(title: &quot;Test Title&quot;)
    # #=&gt; #&lt;Topic title: &quot;Test Title&quot;&gt;
    topic.update_attribute!(:title, &quot;Another Title&quot;)
    # #=&gt; #&lt;Topic title: &quot;Another Title&quot;&gt;
    topic.update_attribute!(:title, &quot;abort&quot;)
    # raises ActiveRecord::RecordNotSaved
    ```

    *Drew Tempelmeyer*</description>
    <pubDate>Tue, 11 Jan 2022 22:43:50 +0000</pubDate>
    <author>Drew Tempelmeyer</author>
    <content:encoded><![CDATA[<p>Add <code>update_attribute!</code> to <code>ActiveRecord::Persistence</code></p>

<p>Similar to <code>update_attribute</code>, but raises <code>ActiveRecord::RecordNotSaved</code> when a <code>before_*</code> callback throws <code>:abort</code>.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Topic</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">before_save</span> <span class="ss">:check_title</span>

  <span class="k">def</span> <span class="nf">check_title</span>
    <span class="kp">throw</span><span class="p">(</span><span class="ss">:abort</span><span class="p">)</span> <span class="k">if</span> <span class="n">title</span> <span class="o">==</span> <span class="s2">"abort"</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">topic</span> <span class="o">=</span> <span class="no">Topic</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">title: </span><span class="s2">"Test Title"</span><span class="p">)</span>
<span class="c1"># #=&gt; #&lt;Topic title: "Test Title"&gt;</span>
<span class="n">topic</span><span class="p">.</span><span class="nf">update_attribute!</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Another Title"</span><span class="p">)</span>
<span class="c1"># #=&gt; #&lt;Topic title: "Another Title"&gt;</span>
<span class="n">topic</span><span class="p">.</span><span class="nf">update_attribute!</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"abort"</span><span class="p">)</span>
<span class="c1"># raises ActiveRecord::RecordNotSaved</span>
</code></pre></div></div>

<p><em>Drew Tempelmeyer</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Avoid loading every record in `ActiveRecord::Relation#pretty_print`
</title>
    <link>https://github.com/rails/rails/issues/44137</link>
    <guid>https://github.com/rails/rails/issues/44137</guid>
    <description>*   Avoid loading every record in `ActiveRecord::Relation#pretty_print`

    ```ruby
    # Before
    pp Foo.all # Loads the whole table.

    # After
    pp Foo.all # Shows 10 items and an ellipsis.
    ```

    *Ulysse Buonomo*</description>
    <pubDate>Mon, 10 Jan 2022 18:15:47 +0000</pubDate>
    <author>Petrik</author>
    <content:encoded><![CDATA[<p>Avoid loading every record in <code>ActiveRecord::Relation#pretty_print</code></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Before</span>
<span class="n">pp</span> <span class="no">Foo</span><span class="p">.</span><span class="nf">all</span> <span class="c1"># Loads the whole table.</span>

<span class="c1"># After</span>
<span class="n">pp</span> <span class="no">Foo</span><span class="p">.</span><span class="nf">all</span> <span class="c1"># Shows 10 items and an ellipsis.</span>
</code></pre></div></div>

<p><em>Ulysse Buonomo</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Change `QueryMethods#in_order_of` to drop records not listed in values.
</title>
    <link>https://github.com/rails/rails/issues/44097</link>
    <guid>https://github.com/rails/rails/issues/44097</guid>
    <description>*   Change `QueryMethods#in_order_of` to drop records not listed in values.

    `in_order_of` now filters down to the values provided, to match the behavior of the `Enumerable` version.

    *Kevin Newton*</description>
    <pubDate>Thu, 06 Jan 2022 19:54:31 +0000</pubDate>
    <author>Kevin Newton</author>
    <content:encoded><![CDATA[<p>Change <code>QueryMethods#in_order_of</code> to drop records not listed in values.</p>

<p><code>in_order_of</code> now filters down to the values provided, to match the behavior of the <code>Enumerable</code> version.</p>

<p><em>Kevin Newton</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Allow named expression indexes to be revertible.
</title>
    <link>https://github.com/rails/rails/issues/43333</link>
    <guid>https://github.com/rails/rails/issues/43333</guid>
    <description>*   Allow named expression indexes to be revertible.

    Previously, the following code would raise an error in a reversible migration executed while rolling back, due to the index name not being used in the index removal.

    ```ruby
    add_index(:settings, &quot;(data-&gt;&#39;property&#39;)&quot;, using: :gin, name: :index_settings_data_property)
    ```

    Fixes #43331.

    *Oliver Günther*</description>
    <pubDate>Mon, 03 Jan 2022 10:58:49 +0000</pubDate>
    <author>Oliver Günther</author>
    <content:encoded><![CDATA[<p>Allow named expression indexes to be revertible.</p>

<p>Previously, the following code would raise an error in a reversible migration executed while rolling back, due to the index name not being used in the index removal.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">add_index</span><span class="p">(</span><span class="ss">:settings</span><span class="p">,</span> <span class="s2">"(data-&gt;'property')"</span><span class="p">,</span> <span class="ss">using: :gin</span><span class="p">,</span> <span class="ss">name: :index_settings_data_property</span><span class="p">)</span>
</code></pre></div></div>

<p>Fixes #43331.</p>

<p><em>Oliver Günther</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix incorrect argument in PostgreSQL structure dump tasks.
</title>
    <link>https://github.com/rails/rails/issues/44028</link>
    <guid>https://github.com/rails/rails/issues/44028</guid>
    <description>*   Fix incorrect argument in PostgreSQL structure dump tasks.

    Updating the `--no-comment` argument added in Rails 7 to the correct `--no-comments` argument.

    *Alex Dent*</description>
    <pubDate>Sun, 02 Jan 2022 02:58:44 +0000</pubDate>
    <author>Alex Dent</author>
    <content:encoded><![CDATA[<p>Fix incorrect argument in PostgreSQL structure dump tasks.</p>

<p>Updating the <code>--no-comment</code> argument added in Rails 7 to the correct <code>--no-comments</code> argument.</p>

<p><em>Alex Dent</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix migration compatibility to create SQLite references/belongs_to column as integer when migration version is 6.0.
</title>
    <link>https://github.com/rails/rails/issues/43295</link>
    <guid>https://github.com/rails/rails/issues/43295</guid>
    <description>*   Fix migration compatibility to create SQLite references/belongs_to column as integer when migration version is 6.0.

    Reference/belongs_to in migrations with version 6.0 were creating columns as
    bigint instead of integer for the SQLite Adapter.

    *Marcelo Lauxen*</description>
    <pubDate>Tue, 21 Dec 2021 07:28:39 +0000</pubDate>
    <author>Marcelo Lauxen</author>
    <content:encoded><![CDATA[<p>Fix migration compatibility to create SQLite references/belongs_to column as integer when migration version is 6.0.</p>

<p>Reference/belongs_to in migrations with version 6.0 were creating columns as<br />
bigint instead of integer for the SQLite Adapter.</p>

<p><em>Marcelo Lauxen</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix `QueryMethods#in_order_of` to handle empty order list.
</title>
    <link>https://github.com/rails/rails/issues/43916</link>
    <guid>https://github.com/rails/rails/issues/43916</guid>
    <description>*   Fix `QueryMethods#in_order_of` to handle empty order list.

    ```ruby
    Post.in_order_of(:id, []).to_a
    ```

    Also more explicitly set the column as secondary order, so that any other
    value is still ordered.

    *Jean Boussier*</description>
    <pubDate>Mon, 20 Dec 2021 22:42:27 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix <code>QueryMethods#in_order_of</code> to handle empty order list.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Post</span><span class="p">.</span><span class="nf">in_order_of</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="p">[]).</span><span class="nf">to_a</span>
</code></pre></div></div>

<p>Also more explicitly set the column as secondary order, so that any other<br />
value is still ordered.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Fix quoting of column aliases generated by calculation methods.
</title>
    <link>https://github.com/rails/rails/issues/43911</link>
    <guid>https://github.com/rails/rails/issues/43911</guid>
    <description>*   Fix quoting of column aliases generated by calculation methods.

    Since the alias is derived from the table name, we can&#39;t assume the result
    is a valid identifier.

    ```ruby
    class Test &lt; ActiveRecord::Base
      self.table_name = &#39;1abc&#39;
    end
    Test.group(:id).count
    # syntax error at or near &quot;1&quot; (ActiveRecord::StatementInvalid)
    # LINE 1: SELECT COUNT(*) AS count_all, &quot;1abc&quot;.&quot;id&quot; AS 1abc_id FROM &quot;1...
    ```

    *Jean Boussier*</description>
    <pubDate>Fri, 17 Dec 2021 12:10:22 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Fix quoting of column aliases generated by calculation methods.</p>

<p>Since the alias is derived from the table name, we can’t assume the result<br />
is a valid identifier.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Test</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
  <span class="nb">self</span><span class="p">.</span><span class="nf">table_name</span> <span class="o">=</span> <span class="s1">'1abc'</span>
<span class="k">end</span>
<span class="no">Test</span><span class="p">.</span><span class="nf">group</span><span class="p">(</span><span class="ss">:id</span><span class="p">).</span><span class="nf">count</span>
<span class="c1"># syntax error at or near "1" (ActiveRecord::StatementInvalid)</span>
<span class="c1"># LINE 1: SELECT COUNT(*) AS count_all, "1abc"."id" AS 1abc_id FROM "1...</span>
</code></pre></div></div>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activerecord: Add `authenticate_by` when using `has_secure_password`.
</title>
    <link>https://github.com/rails/rails/issues/43880</link>
    <guid>https://github.com/rails/rails/issues/43880</guid>
    <description>*   Add `authenticate_by` when using `has_secure_password`.

    `authenticate_by` is intended to replace code like the following, which
    returns early when a user with a matching email is not found:

    ```ruby
    User.find_by(email: &quot;...&quot;)&amp;.authenticate(&quot;...&quot;)
    ```

    Such code is vulnerable to timing-based enumeration attacks, wherein an
    attacker can determine if a user account with a given email exists. After
    confirming that an account exists, the attacker can try passwords associated
    with that email address from other leaked databases, in case the user
    re-used a password across multiple sites (a common practice). Additionally,
    knowing an account email address allows the attacker to attempt a targeted
    phishing (&quot;spear phishing&quot;) attack.

    `authenticate_by` addresses the vulnerability by taking the same amount of
    time regardless of whether a user with a matching email is found:

    ```ruby
    User.authenticate_by(email: &quot;...&quot;, password: &quot;...&quot;)
    ```

    *Jonathan Hefner*</description>
    <pubDate>Wed, 15 Dec 2021 18:56:30 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Add <code>authenticate_by</code> when using <code>has_secure_password</code>.</p>

<p><code>authenticate_by</code> is intended to replace code like the following, which<br />
returns early when a user with a matching email is not found:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">email: </span><span class="s2">"..."</span><span class="p">)</span><span class="o">&amp;</span><span class="p">.</span><span class="nf">authenticate</span><span class="p">(</span><span class="s2">"..."</span><span class="p">)</span>
</code></pre></div></div>

<p>Such code is vulnerable to timing-based enumeration attacks, wherein an<br />
attacker can determine if a user account with a given email exists. After<br />
confirming that an account exists, the attacker can try passwords associated<br />
with that email address from other leaked databases, in case the user<br />
re-used a password across multiple sites (a common practice). Additionally,<br />
knowing an account email address allows the attacker to attempt a targeted<br />
phishing (“spear phishing”) attack.</p>

<p><code>authenticate_by</code> addresses the vulnerability by taking the same amount of<br />
time regardless of whether a user with a matching email is found:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">User</span><span class="p">.</span><span class="nf">authenticate_by</span><span class="p">(</span><span class="ss">email: </span><span class="s2">"..."</span><span class="p">,</span> <span class="ss">password: </span><span class="s2">"..."</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Add `after_discard` method.
</title>
    <link>https://github.com/rails/rails/issues/48010</link>
    <guid>https://github.com/rails/rails/issues/48010</guid>
    <description>*   Add `after_discard` method.

    This method lets job authors define a block which will be run when a job is about to be discarded. For example:

    ```ruby
      class AfterDiscardJob &lt; ActiveJob::Base
        after_discard do |job, exception|
          Rails.logger.info(&quot;#{job.class} raised an exception: #{exception}&quot;)
        end

        def perform
          raise StandardError
        end
      end
    ```

    The above job will run the block passed to `after_discard` after the job is discarded. The exception will
    still be raised after the block has been run.

    *Rob Cardy*</description>
    <pubDate>Mon, 21 Aug 2023 17:55:46 +0000</pubDate>
    <author>Rafael Mendonça França</author>
    <content:encoded><![CDATA[<p>Add <code>after_discard</code> method.</p>

<p>This method lets job authors define a block which will be run when a job is about to be discarded. For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">class</span> <span class="nc">AfterDiscardJob</span> <span class="o">&lt;</span> <span class="no">ActiveJob</span><span class="o">::</span><span class="no">Base</span>
    <span class="n">after_discard</span> <span class="k">do</span> <span class="o">|</span><span class="n">job</span><span class="p">,</span> <span class="n">exception</span><span class="o">|</span>
      <span class="no">Rails</span><span class="p">.</span><span class="nf">logger</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">job</span><span class="p">.</span><span class="nf">class</span><span class="si">}</span><span class="s2"> raised an exception: </span><span class="si">#{</span><span class="n">exception</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">perform</span>
      <span class="k">raise</span> <span class="no">StandardError</span>
    <span class="k">end</span>
  <span class="k">end</span>
</code></pre></div></div>

<p>The above job will run the block passed to <code>after_discard</code> after the job is discarded. The exception will<br />
still be raised after the block has been run.</p>

<p><em>Rob Cardy</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Fix deserialization of ActiveSupport::Duration
</title>
    <link>https://github.com/rails/rails/issues/44262</link>
    <guid>https://github.com/rails/rails/issues/44262</guid>
    <description>*   Fix deserialization of ActiveSupport::Duration

    Previously, a deserialized Duration would return an array from Duration#parts.
    It will now return a hash just like a regular Duration.

    This also fixes an error when trying to add or subtract from a deserialized Duration
    (eg `duration + 1.year`).

    *Jonathan del Strother*</description>
    <pubDate>Mon, 14 Aug 2023 18:06:05 +0000</pubDate>
    <author>Jonathan del Strother</author>
    <content:encoded><![CDATA[<p>Fix deserialization of ActiveSupport::Duration</p>

<p>Previously, a deserialized Duration would return an array from Duration#parts.<br />
It will now return a hash just like a regular Duration.</p>

<p>This also fixes an error when trying to add or subtract from a deserialized Duration<br />
(eg <code>duration + 1.year</code>).</p>

<p><em>Jonathan del Strother</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: `perform_enqueued_jobs` is now compatible with all Active Job adapters
</title>
    <link>https://github.com/rails/rails/issues/48599</link>
    <guid>https://github.com/rails/rails/issues/48599</guid>
    <description>*   `perform_enqueued_jobs` is now compatible with all Active Job adapters

    This means that methods that depend on it, like Action Mailer&#39;s `assert_emails`,
    will work correctly even if the test adapter is not used.

    *Alex Ghiculescu*</description>
    <pubDate>Wed, 28 Jun 2023 17:10:23 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p><code>perform_enqueued_jobs</code> is now compatible with all Active Job adapters</p>

<p>This means that methods that depend on it, like Action Mailer’s <code>assert_emails</code>,<br />
will work correctly even if the test adapter is not used.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Allow queue adapters to provide a custom name by implementing `queue_adapter_name`
</title>
    <link>https://github.com/rails/rails/issues/48003</link>
    <guid>https://github.com/rails/rails/issues/48003</guid>
    <description>*   Allow queue adapters to provide a custom name by implementing `queue_adapter_name`

    *Sander Verdonschot*</description>
    <pubDate>Thu, 20 Apr 2023 20:05:39 +0000</pubDate>
    <author>Sander Verdonschot</author>
    <content:encoded><![CDATA[<p>Allow queue adapters to provide a custom name by implementing <code>queue_adapter_name</code></p>

<p><em>Sander Verdonschot</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Log background job enqueue callers
</title>
    <link>https://github.com/rails/rails/issues/47839</link>
    <guid>https://github.com/rails/rails/issues/47839</guid>
    <description>*   Log background job enqueue callers

    Add `verbose_enqueue_logs` configuration option to display the caller
    of background job enqueue in the log to help with debugging.

    Example log line:

    ```
    Enqueued AvatarThumbnailsJob (Job ID: ab528951-41fb-4c48-9129-3171791c27d6) to Sidekiq(default) with arguments: 1092412064
    ↳ app/models/user.rb:421:in `generate_avatar_thumbnails&#39;
    ```

    Enabled in development only for new and upgraded applications. Not recommended for use
    in the production environment since it relies on Ruby&#39;s `Kernel#caller` which is fairly slow.

    *fatkodima*</description>
    <pubDate>Mon, 03 Apr 2023 07:51:53 +0000</pubDate>
    <author>fatkodima</author>
    <content:encoded><![CDATA[<p>Log background job enqueue callers</p>

<p>Add <code>verbose_enqueue_logs</code> configuration option to display the caller<br />
of background job enqueue in the log to help with debugging.</p>

<p>Example log line:</p>

<pre><code>Enqueued AvatarThumbnailsJob (Job ID: ab528951-41fb-4c48-9129-3171791c27d6) to Sidekiq(default) with arguments: 1092412064
↳ app/models/user.rb:421:in `generate_avatar_thumbnails'
</code></pre>

<p>Enabled in development only for new and upgraded applications. Not recommended for use<br />
in the production environment since it relies on Ruby’s <code>Kernel#caller</code> which is fairly slow.</p>

<p><em>fatkodima</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Set `provider_job_id` for Backburner jobs
</title>
    <link>https://github.com/rails/rails/issues/47732</link>
    <guid>https://github.com/rails/rails/issues/47732</guid>
    <description>*   Set `provider_job_id` for Backburner jobs

    *Cameron Matheson*</description>
    <pubDate>Sat, 25 Mar 2023 15:21:40 +0000</pubDate>
    <author>Cameron Matheson</author>
    <content:encoded><![CDATA[<p>Set <code>provider_job_id</code> for Backburner jobs</p>

<p><em>Cameron Matheson</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Add `perform_all_later` to enqueue multiple jobs at once
</title>
    <link>https://github.com/rails/rails/issues/46603</link>
    <guid>https://github.com/rails/rails/issues/46603</guid>
    <description>*   Add `perform_all_later` to enqueue multiple jobs at once

    This adds the ability to bulk enqueue jobs, without running callbacks, by
    passing multiple jobs or an array of jobs. For example:

    ```ruby
    ActiveJob.perform_all_later(MyJob.new(&quot;hello&quot;, 42), MyJob.new(&quot;world&quot;, 0))

    user_jobs = User.pluck(:id).map { |id| UserJob.new(user_id: id) }
    ActiveJob.perform_all_later(user_jobs)
    ```

    This can greatly reduce the number of round-trips to the queue datastore.
    For queue adapters that do not implement the new `enqueue_all` method, we
    fall back to enqueuing jobs individually. The Sidekiq adapter implements
    `enqueue_all` with `push_bulk`.

    This method does not use the existing `enqueue.active_job` event, but adds a
    new event `enqueue_all.active_job`.

    *Sander Verdonschot*</description>
    <pubDate>Mon, 13 Feb 2023 20:03:58 +0000</pubDate>
    <author>Sander Verdonschot</author>
    <content:encoded><![CDATA[<p>Add <code>perform_all_later</code> to enqueue multiple jobs at once</p>

<p>This adds the ability to bulk enqueue jobs, without running callbacks, by<br />
passing multiple jobs or an array of jobs. For example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ActiveJob</span><span class="p">.</span><span class="nf">perform_all_later</span><span class="p">(</span><span class="no">MyJob</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"hello"</span><span class="p">,</span> <span class="mi">42</span><span class="p">),</span> <span class="no">MyJob</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"world"</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>

<span class="n">user_jobs</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">pluck</span><span class="p">(</span><span class="ss">:id</span><span class="p">).</span><span class="nf">map</span> <span class="p">{</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span> <span class="no">UserJob</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">user_id: </span><span class="nb">id</span><span class="p">)</span> <span class="p">}</span>
<span class="no">ActiveJob</span><span class="p">.</span><span class="nf">perform_all_later</span><span class="p">(</span><span class="n">user_jobs</span><span class="p">)</span>
</code></pre></div></div>

<p>This can greatly reduce the number of round-trips to the queue datastore.<br />
For queue adapters that do not implement the new <code>enqueue_all</code> method, we<br />
fall back to enqueuing jobs individually. The Sidekiq adapter implements<br />
<code>enqueue_all</code> with <code>push_bulk</code>.</p>

<p>This method does not use the existing <code>enqueue.active_job</code> event, but adds a<br />
new event <code>enqueue_all.active_job</code>.</p>

<p><em>Sander Verdonschot</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Don&#39;t double log the `job` when using `ActiveRecord::QueryLog`
</title>
    <link>https://github.com/rails/rails/issues/46279</link>
    <guid>https://github.com/rails/rails/issues/46279</guid>
    <description>*   Don&#39;t double log the `job` when using `ActiveRecord::QueryLog`

    Previously if you set `config.active_record.query_log_tags` to an array that included
    `:job`, the job name would get logged twice. This bug has been fixed.

    *Alex Ghiculescu*</description>
    <pubDate>Sat, 22 Oct 2022 23:22:41 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Don’t double log the <code>job</code> when using <code>ActiveRecord::QueryLog</code></p>

<p>Previously if you set <code>config.active_record.query_log_tags</code> to an array that included<br />
<code>:job</code>, the job name would get logged twice. This bug has been fixed.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Add support for Sidekiq&#39;s transaction-aware client
</title>
    <link>https://github.com/rails/rails/issues/46080</link>
    <guid>https://github.com/rails/rails/issues/46080</guid>
    <description>*   Add support for Sidekiq&#39;s transaction-aware client

    *Jonathan del Strother*</description>
    <pubDate>Tue, 20 Sep 2022 21:04:03 +0000</pubDate>
    <author>Jonathan del Strother</author>
    <content:encoded><![CDATA[<p>Add support for Sidekiq’s transaction-aware client</p>

<p><em>Jonathan del Strother</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Remove QueAdapter from Active Job.
</title>
    <link>https://github.com/rails/rails/issues/46005</link>
    <guid>https://github.com/rails/rails/issues/46005</guid>
    <description>*   Remove QueAdapter from Active Job.

    After maintaining Active Job QueAdapter by Rails and Que side
    to support Ruby 3 keyword arguments and options provided as top level keywords,
    it is quite difficult to maintain it this way.

    Active Job Que adapter can be included in the future version of que gem itself.

    *Yasuo Honda*</description>
    <pubDate>Mon, 12 Sep 2022 23:18:13 +0000</pubDate>
    <author>Yasuo Honda</author>
    <content:encoded><![CDATA[<p>Remove QueAdapter from Active Job.</p>

<p>After maintaining Active Job QueAdapter by Rails and Que side<br />
to support Ruby 3 keyword arguments and options provided as top level keywords,<br />
it is quite difficult to maintain it this way.</p>

<p>Active Job Que adapter can be included in the future version of que gem itself.</p>

<p><em>Yasuo Honda</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Fix BigDecimal (de)serialization for adapters using JSON.
</title>
    <link>https://github.com/rails/rails/issues/45618</link>
    <guid>https://github.com/rails/rails/issues/45618</guid>
    <description>*   Fix BigDecimal (de)serialization for adapters using JSON.

    Previously, BigDecimal was listed as not needing a serializer.  However,
    when used with an adapter storing the job arguments as JSON, it would get
    serialized as a simple String, resulting in deserialization also producing
    a String (instead of a BigDecimal).

    By using a serializer, we ensure the round trip is safe.

    To ensure applications using BigDecimal job arguments are not subject to
    race conditions during deployment (where a replica running a version of
    Rails without BigDecimalSerializer fails to deserialize an argument
    serialized with it), `ActiveJob.use_big_decimal_serializer` is disabled by
    default, and can be set to true in a following deployment..

    *Sam Bostock*</description>
    <pubDate>Thu, 21 Jul 2022 13:58:28 +0000</pubDate>
    <author>Sam Bostock</author>
    <content:encoded><![CDATA[<p>Fix BigDecimal (de)serialization for adapters using JSON.</p>

<p>Previously, BigDecimal was listed as not needing a serializer.  However,<br />
when used with an adapter storing the job arguments as JSON, it would get<br />
serialized as a simple String, resulting in deserialization also producing<br />
a String (instead of a BigDecimal).</p>

<p>By using a serializer, we ensure the round trip is safe.</p>

<p>To ensure applications using BigDecimal job arguments are not subject to<br />
race conditions during deployment (where a replica running a version of<br />
Rails without BigDecimalSerializer fails to deserialize an argument<br />
serialized with it), <code>ActiveJob.use_big_decimal_serializer</code> is disabled by<br />
default, and can be set to true in a following deployment..</p>

<p><em>Sam Bostock</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Preserve full-precision `enqueued_at` timestamps for serialized jobs,
</title>
    <link>https://github.com/rails/rails/issues/45584</link>
    <guid>https://github.com/rails/rails/issues/45584</guid>
    <description>*   Preserve full-precision `enqueued_at` timestamps for serialized jobs,
    allowing more accurate reporting of how long a job spent waiting in the
    queue before it was performed.

    Retains IS08601 format compatibility.

    *Jeremy Daer*</description>
    <pubDate>Wed, 13 Jul 2022 13:02:07 +0000</pubDate>
    <author>Jeremy Daer</author>
    <content:encoded><![CDATA[<p>Preserve full-precision <code>enqueued_at</code> timestamps for serialized jobs,<br />
allowing more accurate reporting of how long a job spent waiting in the<br />
queue before it was performed.</p>

<p>Retains IS08601 format compatibility.</p>

<p><em>Jeremy Daer</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Add `--parent` option to job generator to specify parent class of job.
</title>
    <link>https://github.com/rails/rails/issues/45528</link>
    <guid>https://github.com/rails/rails/issues/45528</guid>
    <description>*   Add `--parent` option to job generator to specify parent class of job.

    Example:

    `bin/rails g job process_payment --parent=payment_job` generates:

    ```ruby
    class ProcessPaymentJob &lt; PaymentJob
      # ...
    end
    ```

    *Gannon McGibbon*</description>
    <pubDate>Thu, 07 Jul 2022 20:57:35 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Add <code>--parent</code> option to job generator to specify parent class of job.</p>

<p>Example:</p>

<p><code>bin/rails g job process_payment --parent=payment_job</code> generates:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">ProcessPaymentJob</span> <span class="o">&lt;</span> <span class="no">PaymentJob</span>
  <span class="c1"># ...</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Add more detailed description to job generator.
</title>
    <link>https://github.com/rails/rails/issues/45327</link>
    <guid>https://github.com/rails/rails/issues/45327</guid>
    <description>*   Add more detailed description to job generator.

    *Gannon McGibbon*</description>
    <pubDate>Mon, 13 Jun 2022 20:53:52 +0000</pubDate>
    <author>Gannon McGibbon</author>
    <content:encoded><![CDATA[<p>Add more detailed description to job generator.</p>

<p><em>Gannon McGibbon</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: `perform.active_job` notification payloads now include `:db_runtime`, which
</title>
    <link>https://github.com/rails/rails/issues/40058</link>
    <guid>https://github.com/rails/rails/issues/40058</guid>
    <description>*   `perform.active_job` notification payloads now include `:db_runtime`, which
    is the total time (in ms) taken by database queries while performing a job.
    This value can be used to better understand how a job&#39;s time is spent.

    *Jonathan Hefner*</description>
    <pubDate>Thu, 19 May 2022 19:39:34 +0000</pubDate>
    <author>Jonathan Hefner</author>
    <content:encoded><![CDATA[<p><code>perform.active_job</code> notification payloads now include <code>:db_runtime</code>, which<br />
is the total time (in ms) taken by database queries while performing a job.<br />
This value can be used to better understand how a job’s time is spent.</p>

<p><em>Jonathan Hefner</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Update `ActiveJob::QueueAdapters::QueAdapter` to remove deprecation warning.
</title>
    <link>https://github.com/rails/rails/issues/45896</link>
    <guid>https://github.com/rails/rails/issues/45896</guid>
    <description>*   Update `ActiveJob::QueueAdapters::QueAdapter` to remove deprecation warning.

    Remove a deprecation warning introduced in que 1.2 to prepare for changes in
    que 2.0 necessary for Ruby 3 compatibility.

    *Damir Zekic* and *Adis Hasovic*</description>
    <pubDate>Mon, 29 Aug 2022 22:28:40 +0000</pubDate>
    <author>Ryuta Kamizono</author>
    <content:encoded><![CDATA[<p>Update <code>ActiveJob::QueueAdapters::QueAdapter</code> to remove deprecation warning.</p>

<p>Remove a deprecation warning introduced in que 1.2 to prepare for changes in<br />
que 2.0 necessary for Ruby 3 compatibility.</p>

<p><em>Damir Zekic</em> and <em>Adis Hasovic</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Add missing `bigdecimal` require in `ActiveJob::Arguments`
</title>
    <link>https://github.com/rails/rails/issues/44411</link>
    <guid>https://github.com/rails/rails/issues/44411</guid>
    <description>*   Add missing `bigdecimal` require in `ActiveJob::Arguments`

    Could cause `uninitialized constant ActiveJob::Arguments::BigDecimal (NameError)`
    when loading Active Job in isolation.

    *Jean Boussier*</description>
    <pubDate>Sat, 12 Feb 2022 09:08:06 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>Add missing <code>bigdecimal</code> require in <code>ActiveJob::Arguments</code></p>

<p>Could cause <code>uninitialized constant ActiveJob::Arguments::BigDecimal (NameError)</code><br />
when loading Active Job in isolation.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>activejob: Allow testing `discard_on/retry_on ActiveJob::DeserializationError`
</title>
    <link>https://github.com/rails/rails/issues/43066</link>
    <guid>https://github.com/rails/rails/issues/43066</guid>
    <description>*   Allow testing `discard_on/retry_on ActiveJob::DeserializationError`

    Previously in `perform_enqueued_jobs`, `deserialize_arguments_if_needed`
    was called before calling `perform_now`. When a record no longer exists
    and is serialized using GlobalID this led to raising
    an `ActiveJob::DeserializationError` before reaching `perform_now` call.
    This behavior makes difficult testing the job `discard_on/retry_on` logic.

    Now `deserialize_arguments_if_needed` call is postponed to when `perform_now`
    is called.

    Example:

    ```ruby
    class UpdateUserJob &lt; ActiveJob::Base
      discard_on ActiveJob::DeserializationError

      def perform(user)
        # ...
      end
    end

    # In the test
    User.destroy_all
    assert_nothing_raised do
      perform_enqueued_jobs only: UpdateUserJob
    end
    ```

    *Jacopo Beschi*</description>
    <pubDate>Thu, 06 Jan 2022 16:53:31 +0000</pubDate>
    <author>Jacopo</author>
    <content:encoded><![CDATA[<p>Allow testing <code>discard_on/retry_on ActiveJob::DeserializationError</code></p>

<p>Previously in <code>perform_enqueued_jobs</code>, <code>deserialize_arguments_if_needed</code><br />
was called before calling <code>perform_now</code>. When a record no longer exists<br />
and is serialized using GlobalID this led to raising<br />
an <code>ActiveJob::DeserializationError</code> before reaching <code>perform_now</code> call.<br />
This behavior makes difficult testing the job <code>discard_on/retry_on</code> logic.</p>

<p>Now <code>deserialize_arguments_if_needed</code> call is postponed to when <code>perform_now</code><br />
is called.</p>

<p>Example:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">UpdateUserJob</span> <span class="o">&lt;</span> <span class="no">ActiveJob</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">discard_on</span> <span class="no">ActiveJob</span><span class="o">::</span><span class="no">DeserializationError</span>

  <span class="k">def</span> <span class="nf">perform</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="c1"># ...</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># In the test</span>
<span class="no">User</span><span class="p">.</span><span class="nf">destroy_all</span>
<span class="n">assert_nothing_raised</span> <span class="k">do</span>
  <span class="n">perform_enqueued_jobs</span> <span class="ss">only: </span><span class="no">UpdateUserJob</span>
<span class="k">end</span>
</code></pre></div></div>

<p><em>Jacopo Beschi</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: Add a `@server` instance variable referencing the `ActionCable.server`
</title>
    <link>https://github.com/rails/rails/issues/48706</link>
    <guid>https://github.com/rails/rails/issues/48706</guid>
    <description>*   Add a `@server` instance variable referencing the `ActionCable.server`
    singleton to `ActionCable::Channel::ConnectionStub`

    This lets us delegate the `pubsub` and `config` method calls
    to the server. This fixes `NoMethodError` errors when testing
    channel logic that call `pubsub` (e.g. `stop_stream_for`).

    *Julian Foo*</description>
    <pubDate>Mon, 17 Jul 2023 11:24:59 +0000</pubDate>
    <author>julianfssen</author>
    <content:encoded><![CDATA[<p>Add a <code>@server</code> instance variable referencing the <code>ActionCable.server</code><br />
singleton to <code>ActionCable::Channel::ConnectionStub</code></p>

<p>This lets us delegate the <code>pubsub</code> and <code>config</code> method calls<br />
to the server. This fixes <code>NoMethodError</code> errors when testing<br />
channel logic that call <code>pubsub</code> (e.g. <code>stop_stream_for</code>).</p>

<p><em>Julian Foo</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: Added `health_check_path` and `health_check_application` config to
</title>
    <link>https://github.com/rails/rails/issues/48222</link>
    <guid>https://github.com/rails/rails/issues/48222</guid>
    <description>*   Added `health_check_path` and `health_check_application` config to
    mount a given health check rack app on a given path.
    Useful when mounting Action Cable standalone.

    *Joé Dupuis*</description>
    <pubDate>Tue, 30 May 2023 20:35:12 +0000</pubDate>
    <author>Joé Dupuis</author>
    <content:encoded><![CDATA[<p>Added <code>health_check_path</code> and <code>health_check_application</code> config to<br />
mount a given health check rack app on a given path.<br />
Useful when mounting Action Cable standalone.</p>

<p><em>Joé Dupuis</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: Introduce the `capture_broadcasts` test helper.
</title>
    <link>https://github.com/rails/rails/issues/48798</link>
    <guid>https://github.com/rails/rails/issues/48798</guid>
    <description>*   Introduce the `capture_broadcasts` test helper.

    Returns all messages broadcast in a block.

    ```ruby
    messages = capture_broadcasts(&quot;test&quot;) do
      ActionCable.server.broadcast &quot;test&quot;, { message: &quot;one&quot; }
      ActionCable.server.broadcast &quot;test&quot;, { message: &quot;two&quot; }
    end
    assert_equal 2, messages.length
    assert_equal({ &quot;message&quot; =&gt; &quot;one&quot; }, messages.first)
    assert_equal({ &quot;message&quot; =&gt; &quot;two&quot; }, messages.last)
    ```

    *Alex Ghiculescu*</description>
    <pubDate>Tue, 25 Jul 2023 14:51:13 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>Introduce the <code>capture_broadcasts</code> test helper.</p>

<p>Returns all messages broadcast in a block.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">messages</span> <span class="o">=</span> <span class="n">capture_broadcasts</span><span class="p">(</span><span class="s2">"test"</span><span class="p">)</span> <span class="k">do</span>
  <span class="no">ActionCable</span><span class="p">.</span><span class="nf">server</span><span class="p">.</span><span class="nf">broadcast</span> <span class="s2">"test"</span><span class="p">,</span> <span class="p">{</span> <span class="ss">message: </span><span class="s2">"one"</span> <span class="p">}</span>
  <span class="no">ActionCable</span><span class="p">.</span><span class="nf">server</span><span class="p">.</span><span class="nf">broadcast</span> <span class="s2">"test"</span><span class="p">,</span> <span class="p">{</span> <span class="ss">message: </span><span class="s2">"two"</span> <span class="p">}</span>
<span class="k">end</span>
<span class="n">assert_equal</span> <span class="mi">2</span><span class="p">,</span> <span class="n">messages</span><span class="p">.</span><span class="nf">length</span>
<span class="n">assert_equal</span><span class="p">({</span> <span class="s2">"message"</span> <span class="o">=&gt;</span> <span class="s2">"one"</span> <span class="p">},</span> <span class="n">messages</span><span class="p">.</span><span class="nf">first</span><span class="p">)</span>
<span class="n">assert_equal</span><span class="p">({</span> <span class="s2">"message"</span> <span class="o">=&gt;</span> <span class="s2">"two"</span> <span class="p">},</span> <span class="n">messages</span><span class="p">.</span><span class="nf">last</span><span class="p">)</span>
</code></pre></div></div>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: Display broadcasted messages on error message when using `assert_broadcast_on`
</title>
    <link>https://github.com/rails/rails/issues/47204</link>
    <guid>https://github.com/rails/rails/issues/47204</guid>
    <description>*   Display broadcasted messages on error message when using `assert_broadcast_on`

    *Stéphane Robino*</description>
    <pubDate>Sat, 04 Feb 2023 23:24:46 +0000</pubDate>
    <author>StephaneRob</author>
    <content:encoded><![CDATA[<p>Display broadcasted messages on error message when using <code>assert_broadcast_on</code></p>

<p><em>Stéphane Robino</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: The Action Cable client now supports subprotocols to allow passing arbitrary data
</title>
    <link>https://github.com/rails/rails/issues/41415</link>
    <guid>https://github.com/rails/rails/issues/41415</guid>
    <description>*   The Action Cable client now supports subprotocols to allow passing arbitrary data
    to the server.

    ```js
    const consumer = ActionCable.createConsumer()

    consumer.addSubProtocol(&#39;custom-protocol&#39;)

    consumer.connect()
    ```

    See also:

    * https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#subprotocols

    *Guillaume Hain*</description>
    <pubDate>Sat, 28 Jan 2023 00:04:25 +0000</pubDate>
    <author>zzak</author>
    <content:encoded><![CDATA[<p>The Action Cable client now supports subprotocols to allow passing arbitrary data<br />
to the server.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">consumer</span> <span class="o">=</span> <span class="nx">ActionCable</span><span class="p">.</span><span class="nx">createConsumer</span><span class="p">()</span>

<span class="nx">consumer</span><span class="p">.</span><span class="nx">addSubProtocol</span><span class="p">(</span><span class="dl">'</span><span class="s1">custom-protocol</span><span class="dl">'</span><span class="p">)</span>

<span class="nx">consumer</span><span class="p">.</span><span class="nx">connect</span><span class="p">()</span>
</code></pre></div></div>

<p>See also:</p>

<ul>
  <li>https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#subprotocols</li>
</ul>

<p><em>Guillaume Hain</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: Redis pub/sub adapter now automatically reconnects when Redis connection is lost.
</title>
    <link>https://github.com/rails/rails/issues/46562</link>
    <guid>https://github.com/rails/rails/issues/46562</guid>
    <description>*   Redis pub/sub adapter now automatically reconnects when Redis connection is lost.

    *Vladimir Dementyev*</description>
    <pubDate>Thu, 24 Nov 2022 11:27:18 +0000</pubDate>
    <author>Vladimir Dementyev</author>
    <content:encoded><![CDATA[<p>Redis pub/sub adapter now automatically reconnects when Redis connection is lost.</p>

<p><em>Vladimir Dementyev</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: The `connected()` callback can now take a `{reconnected}` parameter to differentiate
</title>
    <link>https://github.com/rails/rails/issues/45738</link>
    <guid>https://github.com/rails/rails/issues/45738</guid>
    <description>*   The `connected()` callback can now take a `{reconnected}` parameter to differentiate
    connections from reconnections.

    ```js
    import consumer from &quot;./consumer&quot;

    consumer.subscriptions.create(&quot;ExampleChannel&quot;, {
      connected({reconnected}) {
        if (reconnected) {
          ...
        } else {
          ...
        }
      }
    })
    ```

    *Mansa Keïta*</description>
    <pubDate>Sat, 17 Sep 2022 17:28:37 +0000</pubDate>
    <author>Mansa Keïta</author>
    <content:encoded><![CDATA[<p>The <code>connected()</code> callback can now take a <code>{reconnected}</code> parameter to differentiate<br />
connections from reconnections.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">consumer</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">./consumer</span><span class="dl">"</span>

<span class="nx">consumer</span><span class="p">.</span><span class="nx">subscriptions</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="dl">"</span><span class="s2">ExampleChannel</span><span class="dl">"</span><span class="p">,</span> <span class="p">{</span>
  <span class="nx">connected</span><span class="p">({</span><span class="nx">reconnected</span><span class="p">})</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">reconnected</span><span class="p">)</span> <span class="p">{</span>
      <span class="p">...</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="p">...</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></div></div>

<p><em>Mansa Keïta</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: The Redis adapter is now compatible with redis-rb 5.0
</title>
    <link>https://github.com/rails/rails/issues/45856</link>
    <guid>https://github.com/rails/rails/issues/45856</guid>
    <description>*   The Redis adapter is now compatible with redis-rb 5.0

    Compatibility with redis-rb 3.x was dropped.

    *Jean Boussier*</description>
    <pubDate>Mon, 22 Aug 2022 08:17:16 +0000</pubDate>
    <author>Jean Boussier</author>
    <content:encoded><![CDATA[<p>The Redis adapter is now compatible with redis-rb 5.0</p>

<p>Compatibility with redis-rb 3.x was dropped.</p>

<p><em>Jean Boussier</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: The Action Cable server is now mounted with `anchor: true`.
</title>
    <link>https://github.com/rails/rails/issues/45490</link>
    <guid>https://github.com/rails/rails/issues/45490</guid>
    <description>*   The Action Cable server is now mounted with `anchor: true`.

    This means that routes that also start with `/cable` will no longer clash with Action Cable.

    *Alex Ghiculescu*</description>
    <pubDate>Wed, 29 Jun 2022 18:44:14 +0000</pubDate>
    <author>Alex Ghiculescu</author>
    <content:encoded><![CDATA[<p>The Action Cable server is now mounted with <code>anchor: true</code>.</p>

<p>This means that routes that also start with <code>/cable</code> will no longer clash with Action Cable.</p>

<p><em>Alex Ghiculescu</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: `ActionCable.server.remote_connections.where(...).disconnect` now sends `disconnect` message
</title>
    <link>https://github.com/rails/rails/issues/45072</link>
    <guid>https://github.com/rails/rails/issues/45072</guid>
    <description>*   `ActionCable.server.remote_connections.where(...).disconnect` now sends `disconnect` message
    before closing the connection with the reconnection strategy specified (defaults to `true`).

    *Vladimir Dementyev*</description>
    <pubDate>Mon, 16 May 2022 19:41:39 +0000</pubDate>
    <author>Jeremy Daer</author>
    <content:encoded><![CDATA[<p><code>ActionCable.server.remote_connections.where(...).disconnect</code> now sends <code>disconnect</code> message<br />
before closing the connection with the reconnection strategy specified (defaults to <code>true</code>).</p>

<p><em>Vladimir Dementyev</em></p>
]]></content:encoded>
  </item>
  <item>
    <title>actioncable: Added command callbacks to `ActionCable::Connection::Base`.
</title>
    <link>https://github.com/rails/rails/issues/46829</link>
    <guid>https://github.com/rails/rails/issues/46829</guid>
    <description>*   Added command callbacks to `ActionCable::Connection::Base`.

    Now you can define `before_command`, `after_command`, and `around_command` to be invoked before, after or around any command received by a client respectively.

    *Vladimir Dementyev*</description>
    <pubDate>Mon, 26 Dec 2022 21:03:40 +0000</pubDate>
    <author>Akira Matsuda</author>
    <content:encoded><![CDATA[<p>Added command callbacks to <code>ActionCable::Connection::Base</code>.</p>

<p>Now you can define <code>before_command</code>, <code>after_command</code>, and <code>around_command</code> to be invoked before, after or around any command received by a client respectively.</p>

<p><em>Vladimir Dementyev</em></p>
]]></content:encoded>
  </item>
</channel>
</rss>


